%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Uni_Aug_Siegel_32Grad_schwarz.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Michael Poeltl
%%CreationDate: 4/13/10
%%BoundingBox: 0 0 258 261
%%HiResBoundingBox: 0 0 257.1211 260.1583
%%CropBox: 0 0 257.1211 260.1583
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Uni_Aug_Siegel_32Grad</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-04-06T17:22:23+02:00</xap:CreateDate>
         <xap:ModifyDate>2010-04-13T17:20:14+02:00</xap:ModifyDate>
         <xap:MetadataDate>2010-04-13T17:20:14+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FWL+afzQ/L/AMqyrBr+uW1lcsQPq3IyzCvQtFEHkVf8oimKvP8AVf8AnJ/yzNcPp/kvR9Q8&#xA;16py4RR20LxwtX9rkVeSlf8AivDSqzz/APOTHmBWaOPRfJVkwDB5T9du0Xqe00JPjVVxVLb38u9c&#xA;vIbvUfO35u3b22most0ultDp8cCvsrSemzL8VCFrGK9sVSnyn+W/5S+cNXvLDTfzA8x6/dWq+tcx&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3F925B31433311DFBD67E3D191F354D6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:5939919E48B211DF9C93E1E76681FE1F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2bfae5ea-ab3f-4e2c-9eb9-13e04f568743</stRef:instanceID>
            <stRef:documentID>uuid:5E42CE2C42FD11DFBD67E3D191F354D6</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>209.999994</stDim:w>
            <stDim:h>297.000002</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Standard-Farbfeldgruppe</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=100</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -260.158 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 260.158 li
257.121 260.158 li
257.121 0 li
cp
clp
[1 0 0 1 0 0 ]ct
206.31 26.4033 mo
206.915 26.8589 205.834 27.1738 206.332 27.9424 cv
208.366 29.9443 209.664 30.2324 211.542 32.6011 cv
212.654 32.8223 213.881 33.9482 214.896 33.3804 cv
216.52 34.8345 217.747 36.3359 219.389 37.7871 cv
217.811 38.793 218.895 39.8613 217.6 41.2666 cv
216.191 40.417 215.697 39.4492 215.191 38.4854 cv
213.929 37.0322 212.213 36.0776 210.782 34.7549 cv
210.314 34.3184 210.002 33.6416 209.559 33.1943 cv
208.489 32.1045 206.989 31.4146 205.614 30.4307 cv
204.379 29.5474 203.428 28.3608 202.346 27.585 cv
201.74 27.1494 200.997 27.0332 200.342 26.6367 cv
198.979 25.8115 197.883 24.6328 196.546 23.6836 cv
192.903 21.1021 188.884 18.9189 185.218 16.709 cv
184.465 16.6235 183.646 16.0088 182.919 16.1396 cv
182.063 15.2349 181.333 15.3335 180.493 14.5586 cv
178.343 13.8032 176.188 13.0073 173.956 11.6074 cv
171.737 11.2334 169.375 9.69336 167.162 9.375 cv
166.721 9.0293 166.277 8.68555 165.834 8.33984 cv
165.11 8.01758 164.469 8.38623 163.767 8.25732 cv
162.177 7.41895 160.666 7.21582 159.171 7.11914 cv
158.159 6.77148 156.024 5.67871 154.57 5.9834 cv
154.177 5.27441 153.991 5.61182 153.243 4.94922 cv
151.917 4.74023 150.749 4.2793 149.405 4.40234 cv
147.737 4.55566 145.005 3.7959 142.975 3.66504 cv
142.605 3.64209 141.911 3.4043 141.623 3.83447 cv
140.846 3.66602 141.1 3.17676 140.336 3.13965 cv
138.946 2.98535 137.591 3.10107 136.118 2.29688 cv
134.376 2.604 132.604 2.47363 130.824 2.4458 cv
130.555 2.44141 130.36 2.19678 130.108 2.19238 cv
128.934 2.18457 126.993 2.92773 125.49 2.25684 cv
124.458 2.23584 123.491 2.72852 122.411 2.30078 cv
121.427 2.6499 120.379 2.51172 119.416 3.01855 cv
118.719 2.93115 118.003 2.67822 117.349 2.93555 cv
116.744 3.12549 116.054 2.63916 115.513 3.33643 cv
114.075 2.33057 112.914 3.55664 111.528 2.97852 cv
110.313 3.77344 108.994 3.71826 107.754 4.30762 cv
105.618 4.13525 103.576 4.7041 101.533 5.25977 cv
101.055 5.42285 100.497 5.50781 100.036 5.61816 cv
99.6475 5.71094 99.1025 6.16211 98.6865 5.78711 cv
97.9756 6.50439 97.1602 6.37842 96.4502 7.0957 cv
95.6533 7.11426 94.8574 7.14893 94.1328 7.72852 cv
93.3135 7.58203 92.5449 7.83789 91.8125 8.36133 cv
89.7832 8.21338 87.9043 8.93018 85.9697 9.60742 cv
85.0195 9.94043 84.0156 10.2207 83.0186 10.6631 cv
82.6338 10.834 82.583 11.1729 82.2393 11.2744 cv
81.835 11.3945 80.832 11.4692 80.2979 12.2041 cv
79.6602 12.1455 79.041 12.2051 78.4219 12.2676 cv
76.2373 13.9902 73.9229 14.6655 71.5889 15.1797 cv
71.1377 15.6934 70.625 15.7007 70.1758 16.2139 cv
69.2715 16.2412 68.75 17.0928 67.9414 17.5205 cv
67.7402 17.627 67.5205 17.4004 67.2666 17.6055 cv
66.8389 17.9502 66.4531 18.3608 65.8115 18.3027 cv
64.8623 19.8423 63.7051 19.7275 62.6904 20.749 cv
59.6943 22.8262 56.6748 24.709 53.6436 26.5098 cv
52.6094 27.3652 51.6143 28.5283 50.5254 28.9565 cv
49.8164 29.3525 50.1543 29.5391 49.4912 30.2856 cv
48.3027 30.458 47.7295 31.5283 46.666 32.3525 cv
46.1152 32.7813 45.3115 33.126 44.4727 33.999 cv
43.9746 34.5176 43.7578 35.3335 43.335 35.8555 cv
41.9717 37.5361 40.1787 38.7432 38.5498 40.0532 cv
37.8994 41.3125 37.0547 42.6196 35.8496 43.1328 cv
35.5908 43.4424 35.5283 43.9102 35.3027 44.2295 cv
35.0781 44.5469 34.8408 44.4004 34.6689 44.6514 cv
34.5557 44.8179 34.7227 44.9902 34.5654 45.1782 cv
33.79 46.1006 32.4268 46.8647 31.4873 47.9639 cv
31.041 48.4834 30.7051 49.3008 30.2002 50.0098 cv
29.1025 51.5542 28.0605 53.0864 26.7217 53.7021 cv
25.9121 56.959 24.2031 57.8384 22.168 61.127 cv
21.3672 60.5981 21.5557 59.9458 20.7539 59.4189 cv
22.3984 57.7354 22.9385 55.5352 24.1699 53.8496 cv
24.376 53.5679 24.8535 53.3623 25.0977 53.0488 cv
25.752 52.207 26.4707 51.251 27.1641 50.3896 cv
27.6533 49.7813 27.5508 49.4595 28.1963 49.0615 cv
28.1748 49.0747 28.585 49.2305 28.5342 49.0195 cv
28.4434 48.644 29.2871 47.7383 29.8613 47.3101 cv
30.0352 46.4272 30.4316 46.252 30.8525 45.6445 cv
31.1338 45.2393 31.3613 44.5488 31.6963 44.167 cv
32.3867 43.3813 33.5264 42.7993 34.3311 41.9521 cv
34.4404 41.8389 34.3975 41.4746 34.584 41.2349 cv
34.8867 40.8457 35.7188 40.1743 36.4395 39.6323 cv
36.9268 38.2773 37.5898 37.3193 38.9053 36.0669 cv
39.0039 35.9736 39.374 35.9912 39.5391 35.645 cv
39.6973 35.312 39.9209 35.0762 40.6133 34.6538 cv
40.9766 34.4331 41.1865 34.1973 41.583 34.1895 cv
41.9746 33.0283 43.5029 32.5859 43.6484 31.5317 cv
44.7051 31.0327 45.9355 30.2568 46.4336 29.127 cv
47.1465 29.3545 47.6582 27.9717 48.373 28.1982 cv
48.9326 27.6748 48.5361 27.1338 49.2578 27.0596 cv
50.3506 26.2026 51.5264 26.0146 52.5273 24.4224 cv
53.5449 24.0156 54.458 23.293 55.3945 22.6914 cv
56.3359 22.0869 57.2871 21.5649 58.2617 20.9629 cv
60.1709 19.7813 61.9326 18.1855 63.9971 17.5015 cv
64.3408 17.0586 64.6855 16.6157 65.0303 16.1729 cv
65.6289 16.3931 66.1221 15.7671 66.6748 15.623 cv
67.3975 15.5488 67.002 15.0078 67.5596 14.4844 cv
68.7705 14.5762 69.833 13.4756 71.04 13.5347 cv
72.4766 11.7798 74.207 12.3701 75.6572 10.7295 cv
76.71 10.4722 77.7988 10.4893 78.8008 9.82178 cv
79.0674 9.38623 79.5732 9.65039 79.959 9.50488 cv
80.3643 9.34961 80.6748 9.00977 81.0771 8.8501 cv
81.7686 8.57422 82.5176 8.34668 83.2061 8.07031 cv
83.9805 7.75781 84.6494 7.35156 85.4844 7.09863 cv
86.1602 6.89355 87.2393 7.26758 87.6152 6.31738 cv
88.4072 6.72754 89.0986 6.31836 89.8711 6.54883 cv
91.1797 6.05566 92.4209 5.02637 93.8779 5.70361 cv
94.8311 4.20313 96.04 4.73633 97.082 3.93213 cv
98.3887 4.29102 99.5889 3.4165 100.752 3.12939 cv
101.942 2.83496 103.224 3.06348 104.23 2.17969 cv
105.103 2.56934 105.944 2.13672 106.783 2.03125 cv
106.862 2.02051 107.257 2.16504 107.311 2.13672 cv
108.185 1.6748 109.692 1.63623 110.747 0.847656 cv
111.886 1.07031 113.042 0.819336 114.163 0.763672 cv
114.734 0.734375 115.315 0.932129 115.893 0.889648 cv
116.086 0.875 116.159 0.65918 116.378 0.657227 cv
116.664 0.653809 117.056 0.427734 117.58 0.677734 cv
119.787 0.513672 122.023 0.587402 124.18 0.0239258 cv
125.014 0.283203 125.802 0.202148 126.628 0.402832 cv
127.23 0.19873 127.847 0.102051 128.463 0 cv
129.342 0.179688 130.22 0.347656 131.099 0.526367 cv
133.454 0.178711 135.904 0.587891 138.27 0.313965 cv
141.255 1.34766 144.1 1.25928 147.043 1.95605 cv
148.026 1.88867 149.087 1.96094 150.31 2.06152 cv
150.62 2.08545 151.05 1.89648 151.324 1.93359 cv
152.705 2.12695 154.085 3.10742 155.541 2.77734 cv
156.395 3.65625 157.057 3.01758 157.926 4.02051 cv
161.446 4.33008 165.144 6.01904 168.703 6.61035 cv
169.872 7.26465 171.175 9.58594 173.005 8.12842 cv
174.352 8.84619 175.707 9.62988 176.971 9.6875 cv
177.412 10.0322 177.856 10.376 178.3 10.7202 cv
180.164 11.0195 182.2 12.6904 183.995 12.4063 cv
185.09 13.4063 186.07 13.4766 187.18 14.5771 cv
188.919 15.0674 191.586 17.0215 193.803 18.2021 cv
194.349 18.4951 194.938 18.5508 195.427 18.8555 cv
199.175 21.1909 202.278 24.5542 206.31 26.4033 cv
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
ef
19.8691 60.5571 mo
20.2109 61.1992 20.4033 61.8618 21.1357 62.4541 cv
19.918 63.8062 20.0615 64.9888 19.0488 66.3159 cv
18.8701 65.2905 17.8545 65.874 17.1924 65.1768 cv
17.6055 63.1084 18.7002 62.5537 19.8691 60.5571 cv
cp
ef
16.6865 66.6104 mo
16.709 66.9136 17.5811 67.9565 18.0156 67.6426 cv
17.7324 69.5645 15.9473 71.6729 15.5068 73.6133 cv
14.54 74.8198 13.8086 75.9961 13.7158 77.0938 cv
13.4375 77.6113 13.0498 77.2363 12.7881 77.894 cv
12.3438 78.1465 12.7881 78.5835 12.7246 78.7593 cv
12.5957 79.1172 12.1143 79.3501 11.9873 79.708 cv
11.6504 80.6592 11.5059 81.7529 11.166 82.7236 cv
10.9424 83.3638 10.668 84.1934 10.4082 84.876 cv
10.1758 85.478 9.76465 85.6689 9.41602 86.543 cv
9.29297 86.8496 9.33301 87.2285 9.20605 87.5972 cv
8.93945 88.3652 8.3584 89.1748 8.82813 90.043 cv
7.22852 91.6147 8.00684 92.8877 7.31055 94.3467 cv
6.7666 95.0225 6.12305 94.8984 5.55957 95.4229 cv
5.22559 96.5488 5.73145 97.5713 5.4541 98.6919 cv
5.55273 99.0215 5.77051 99.3369 6.25781 99.6187 cv
5.92676 100.858 5.2793 102.141 5.51953 103.309 cv
4.85547 103.85 5.23535 104.258 4.67676 104.786 cv
4.97168 106.805 3.44043 109.053 4.08887 111.028 cv
3.49902 111.502 3.98145 111.842 3.39258 112.315 cv
3.74219 114.155 3.00977 116.133 3.58398 117.945 cv
2.9209 118.968 2.24414 120.644 2.88867 121.975 cv
2.45996 122.771 2.55762 123.5 2.32031 124.273 cv
2.36914 125.237 2.62207 126.177 2.17188 127.204 cv
2.00879 128.823 2.77246 130.327 2.42773 131.971 cv
1.83398 131.792 1.33203 132.344 0.65625 131.507 cv
0.75293 130.883 0.242188 130.411 0.107422 129.862 cv
0.0634766 129.683 0.518555 129.32 0.0224609 129.188 cv
0.599609 128.544 -0.00683594 128.049 0.486328 127.416 cv
0.676758 126.933 0.383789 126.518 0.317383 126.066 cv
0.266602 125.72 0.736328 125.093 0 124.905 cv
0.486328 123.702 0.675781 122.538 0.25293 121.447 cv
0.535156 120.955 0.633789 120.486 0.758789 120.013 cv
0.774414 119.268 1.01758 118.496 0.652344 117.799 cv
1.64551 114.075 1.26758 110.525 2.52637 106.769 cv
3.07129 103.902 2.66992 101.153 4.36035 98.1426 cv
4.36035 96.8149 4.91699 95.5898 5.20117 93.9248 cv
5.26758 93.5361 5.4043 93.1572 5.22168 92.7227 cv
6.69434 90.4243 6.5459 88.3301 7.98242 86.0356 cv
8.25 85.4307 7.95215 84.8979 7.77051 84.3486 cv
8.51953 83.3994 8.69043 82.1943 9.49902 81.7344 cv
9.71387 80.2949 10.5352 78.6011 11.207 77.5791 cv
11.4707 76.9746 11.6582 76.3794 11.6709 75.8071 cv
12.6299 74.8301 12.9033 73.9395 12.8711 73.0859 cv
13.46 72.7217 13.5713 72.3906 13.9043 71.7578 cv
13.9795 71.6143 13.8438 71.3574 14.0098 71.23 cv
14.3652 70.957 13.9385 71.1704 14.2627 70.5127 cv
14.6201 69.7852 14.998 69.6484 15.2539 68.8467 cv
15.3311 68.6055 15.3232 68.4336 15.3594 68.3193 cv
15.3516 68.3447 16.499 67.2314 16.6865 66.6104 cv
cp
ef
34.5654 50.6631 mo
35.7666 51.7686 34.1055 53.2324 34.6943 54.416 cv
37.6416 56.6729 40.3594 57.8936 42.666 60.6133 cv
44.4619 60.7734 46.2041 63.0239 47.751 64.2607 cv
49.2637 64.9336 50.501 63.416 51.9053 63.2261 cv
52.7686 64.582 50.3887 66.1479 49.1865 67.5078 cv
48.4434 68.3477 48.3633 69.6953 47.0352 69.4912 cv
46.4785 68.9326 47.248 68.209 47.3086 67.5723 cv
46.8018 66.6074 46.5869 65.6055 45.2412 64.7471 cv
44.7676 64.5195 45.0908 64.1948 45.3037 63.8818 cv
44.4922 63.3301 43.7793 63.5645 42.9619 62.9761 cv
42.5303 62.7441 42.3994 62.4751 42.6885 62.1533 cv
42.209 61.5137 41.9121 62.3398 41.4873 62.1318 cv
40.3242 61.0654 39.2354 60.5703 38.1113 59.8145 cv
39.1689 58.9961 38.0586 58.4492 37.8584 57.7891 cv
37.3906 57.7041 36.9238 57.6299 36.5508 58.2959 cv
35.3965 57.751 34.2627 57.3496 33.0293 56.167 cv
32.1182 55.7461 31.4141 56.9609 30.5186 56.6528 cv
30.2734 56.5127 30.2129 56.3486 30.2861 56.167 cv
30.6133 55.5273 32.0957 53.6689 32.9854 53.0874 cv
33.4863 52.3179 33.6299 50.9473 34.5654 50.6631 cv
cp
ef
40.2588 44.1226 mo
40.8594 44.8477 40.1279 45.7393 39.8799 46.5693 cv
39.2549 48.0762 41.625 49.207 40.2393 50.8076 cv
38.8057 50.3428 38.3018 48.6294 37.6025 47.5391 cv
37.4814 45.8594 39.335 45.4873 40.2588 44.1226 cv
cp
ef
25.6064 62.5801 mo
27.0576 62.1406 30.5479 62.0098 30.2891 64.3926 cv
28.8066 65.7852 26.8867 63.6807 25.375 64.8369 cv
24.0381 66.4902 23.8906 67.9932 24.2373 69.4355 cv
25.0615 70.0801 25.8965 70.8252 26.6631 71.0156 cv
27.9414 71.1958 29.1982 71.1855 30.376 70.5498 cv
30.3506 71.5269 31.2969 71.6025 32.126 72.2168 cv
30.0234 73.2109 27.7725 73.0332 25.5684 73.209 cv
24.7451 72.6836 24.1045 72.0176 23.627 71.3965 cv
21.5293 68.6768 22.8896 66.0972 25.6064 62.5801 cv
cp
ef
41.375 43.4692 mo
41.1865 43.3789 41.2539 43.2554 41.333 43.1313 cv
43.2129 42.1748 44.8633 39.3984 46.667 37.8374 cv
47.8662 37.7656 50.7598 39.0137 50.6113 40.5986 cv
49.0127 41.7031 47.1797 39.0566 45.4668 40.5576 cv
45.166 40.8193 44.7451 41.314 44.623 42.0332 cv
44.2813 42.5908 45.1572 42.9951 44.9824 43.5313 cv
46.7178 44.6567 47.748 46.4268 49.0947 47.6426 cv
49.7549 48.2383 50.6133 48.585 51.5625 49.5615 cv
53.1289 51.1704 54.2012 53.0117 55.9941 54.8315 cv
57.6299 56.0361 58.8203 53.6831 60.4219 54.6201 cv
60.2803 55.9365 58.7725 56.4985 57.9766 56.9824 cv
57.0137 57.9561 56.1797 59.9644 55.0869 59.915 cv
54.2305 59.2227 55.2578 58.2944 55.4668 57.4688 cv
54.6475 55.7222 52.8496 54.5396 51.3115 53.0205 cv
50.7285 52.4424 50.2998 51.7314 49.709 51.165 cv
49.1934 50.6689 48.5166 50.2969 48 49.8359 cv
46.4473 48.4521 45.2568 46.5859 43.8438 45.3872 cv
43.3877 44.9995 42.5879 44.7832 42.1777 44.3975 cv
42.1777 44.3975 42.0078 43.0034 41.375 43.4692 cv
cp
ef
52.6133 33.3213 mo
53.2627 33.8115 53.0938 34.4043 53.1621 34.9658 cv
51.7207 36.293 50.6318 33.3008 52.6133 33.3213 cv
cp
ef
55.0156 30.6221 mo
55.7256 29.9346 56.5244 30.8555 57.168 31.3789 cv
58.3213 32.3223 59.9385 35.0146 61.9141 35.0688 cv
64.0117 36.6338 65.373 38.292 67.6523 39.834 cv
68.2783 40.2695 67.8936 40.832 68.6846 41.248 cv
69.7559 42.0342 70.7139 41.9287 71.7861 42.7427 cv
72.5781 43.4121 73.8193 42.5322 74.127 43.6494 cv
74.1416 44.4448 73.0273 44.9941 72.4199 45.0625 cv
71.7861 45.9409 71.1494 46.7842 70.374 46.5181 cv
69.334 46.4365 70.1846 44.8994 69.7412 44.1992 cv
68.0342 42.876 66.2773 41.1738 64.7842 41.5635 cv
64.2949 40.8833 64.4922 40.1162 64.0039 39.4346 cv
62.6611 38.2705 61.1084 36.4756 59.4473 35.8921 cv
59.2617 36.2402 59.0137 36.0801 58.8135 36.3145 cv
57.6865 38.209 59.8047 40.0464 60.5449 41.9238 cv
61.3994 43.0879 62.6025 41.9067 62.8867 42.8311 cv
61.0039 44.8359 62.6279 46.4043 63.373 48.082 cv
64.2832 49.3135 65.6387 48.7129 65.9902 49.8096 cv
65.5205 50.9941 63.7324 52.5068 62.5303 52.2998 cv
61.9863 51.2388 62.582 50.2148 62.2979 49.0713 cv
62.2383 48.8286 62.0986 48.8145 62.0654 48.5874 cv
61.9922 48.085 61.0645 47.1543 60.7588 46.3525 cv
60.5303 45.7593 60.6025 44.6064 60.2715 43.8433 cv
59.584 43.5293 59.9678 43.0811 59.2803 42.7676 cv
58.4902 39.8389 56.7148 37.0352 56.3047 34.0586 cv
55.6045 33.3467 55.499 32.5605 54.6592 31.8652 cv
54.7656 31.5098 54.7236 31.1729 54.5313 30.8535 cv
54.6729 30.6094 54.8359 30.5483 55.0156 30.6221 cv
cp
ef
25.7383 80.042 mo
26.1299 81.5361 25.9883 83.0947 26.8145 84.5342 cv
28.2549 85.5415 29.4854 84.873 30.7578 84.5537 cv
32.5811 84.9668 34.2168 83.8833 36.0088 84.0669 cv
36.9141 83.5464 37.7734 82.6431 38.7715 82.8643 cv
39.4854 83.8291 38.6777 85.0181 38.2451 85.501 cv
36.8711 87.0313 33.6904 86.0884 32.2148 86.5986 cv
30.1436 86.4839 28.1113 86.6772 26.0977 87.0225 cv
25.4795 86.3447 25.833 85.1035 25.3809 84.0283 cv
25.2559 83.7319 24.8066 83.5049 24.5791 83.1006 cv
24.4512 82.873 24.5332 82.5195 24.3047 82.2783 cv
22.6064 80.4814 19.999 79.665 18.2725 80.6348 cv
15.9063 83.2549 15.125 85.084 16.9678 86.624 cv
18.1553 87.6191 20.3496 86.8745 21.502 88.6265 cv
22.6309 88.9766 23.6709 88.626 24.6846 88.0566 cv
25.7041 88.6147 25.002 89.3882 25.9521 89.9541 cv
26.9033 90.7153 27.7002 90.2363 28.6299 90.8184 cv
29.5664 91.4727 27.5195 91.085 27.9346 92.1045 cv
29.2666 93.1514 30.4775 93.252 31.498 91.8291 cv
32.0703 92.2871 32.5488 92.002 33.0811 92.1455 cv
33.835 91.7813 34.5244 90.9019 35.3154 90.8369 cv
36.4844 91.1494 35.7402 93.0254 34.5361 94.1904 cv
33.8711 95.2354 34.7129 96.8442 33.2295 97.4385 cv
32.0596 97.2285 32.7813 95.4902 32.0264 94.6768 cv
30.0078 93.6016 28.0098 92.708 26.0996 92.5059 cv
24.625 91.2236 23.2734 90.9238 21.9033 90.4614 cv
21.4326 90.063 21.082 89.6504 21.0586 89.1978 cv
20.168 88.9287 19.4355 89.9219 18.5498 89.6816 cv
17.6484 88.8721 16.7891 88.3945 15.9766 88.291 cv
14.8955 87.8779 14.0234 89.1182 13.0234 89.3457 cv
12.5723 88.168 13.5303 86.8926 14.0986 85.6123 cv
14.6699 84.3237 15.376 83.0288 15.5107 81.8379 cv
17.333 79.5273 19.2939 78.2993 21.3506 77.8496 cv
22.7969 78.4521 24.1885 78.6172 25.7383 80.042 cv
cp
ef
59.7402 27.2886 mo
61.4951 28.0874 60.5586 30.1973 59.2139 29.9238 cv
58.5547 29.0161 58.4629 27.4775 59.7402 27.2886 cv
cp
ef
75.7217 18.0898 mo
76.8037 19.2676 78.9268 20.3145 78.0654 21.7363 cv
77.168 22.7734 75.9365 21.1758 74.8174 20.4307 cv
73.6855 19.917 71.918 20.5664 71.6123 22.2012 cv
71.8496 24.3433 74.4463 26.1865 74.4395 28.3594 cv
75.2988 29.0518 75.2354 29.8604 76.4219 30.5107 cv
76.7236 31.9004 77.543 33.2266 78.1289 34.5811 cv
78.8379 36.0439 78.417 36.8687 79.7148 37.6377 cv
80.6973 38.2197 81.1084 37.6758 81.9277 37.5313 cv
82.6357 37.4072 83.3096 36.6787 83.9951 37.6143 cv
84.3057 38.8335 82.7959 39.1406 81.9932 39.4082 cv
81.0859 39.4673 80.2861 40.3613 79.3789 40.4209 cv
78.5977 41.0381 77.9111 42.3945 76.9941 41.9189 cv
75.6895 40.4375 78.2832 40.1904 79.1025 39.5996 cv
79.5195 38.8623 78.0801 38.3569 77.501 37.7427 cv
76.8379 36.5137 76.2002 35.2793 75.1572 34.0967 cv
74.7529 32.2617 73.7266 30.5049 72.2666 28.8032 cv
72.127 27.9717 71.7617 27.0728 71.2539 26.1875 cv
70.7383 25.2881 70.1602 24.0786 69.2275 23.7007 cv
67.8066 23.1221 67.0342 23.9434 66.4678 24.9028 cv
65.6553 26.2764 67.1895 27.8979 66.0664 28.5518 cv
64.417 27.6289 63.8203 25.4102 64.5049 24.293 cv
64.8535 23.7246 66.3301 23.0371 67.373 22.562 cv
67.8721 22.334 68.4053 22.4248 68.8691 22.2046 cv
69.2695 22.0127 69.7246 21.5981 70.1357 21.3599 cv
72.418 20.0342 74.1729 18.459 75.7217 18.0898 cv
cp
ef
15.0508 97.3179 mo
14.7188 99.1768 12.6602 98.0127 11.6553 98.9414 cv
10.7559 99.6895 10.6367 100.767 10.4541 101.662 cv
10.2539 102.654 9.93555 103.425 10.6025 104.215 cv
11.584 105.375 13.4141 104.988 14.6729 105.247 cv
15.4482 105.405 15.9326 105.893 16.6338 105.858 cv
17.5195 106.085 18.2803 105.315 19.1025 105.034 cv
19.9102 105.562 19.8926 106.192 20.8525 106.7 cv
22.3555 106.953 24.9541 107.938 26.8418 108.007 cv
27.8652 108.042 28.8535 108.021 29.499 107.331 cv
29.9434 106.857 29.8516 106.633 30.0049 105.896 cv
30.2373 104.779 30.7119 103.288 30.2148 102.1 cv
29.2314 101.081 26.8193 100.24 27.7676 98.9795 cv
29.0352 98.1543 30.6123 99.8018 32.0703 100.496 cv
32.7363 103.668 30.877 107.157 30.0713 110.515 cv
29.9688 111.468 30.666 112.753 29.3965 113.341 cv
28.1533 112.64 28.7607 111.708 27.8975 110.958 cv
26.002 109.502 24.3174 109.732 22.498 108.893 cv
20.9639 108.833 19.7734 108.802 17.9434 108.093 cv
17.3887 107.877 16.6592 107.514 15.791 107.334 cv
15.541 107.282 15.1396 107.532 14.7793 107.461 cv
13.3936 107.19 11.9883 106.455 10.5615 106.619 cv
9.79395 106.881 9.18457 108.397 8.41016 108.602 cv
7.05078 107.4 8.63477 105.833 8.91504 104.425 cv
9.07227 103.477 8.9834 101.862 9.27246 100.439 cv
9.59473 98.8516 10.5234 95.8926 12.8994 96.5586 cv
13.5723 96.6523 14.791 96.2432 15.0508 97.3179 cv
cp
ef
16.7803 100.185 mo
16.9287 99.9941 17.0752 99.8037 17.2236 99.6152 cv
18.124 99.5107 19.1074 100.066 20.0488 100.289 cv
21.2852 100.742 22.9385 99.7754 23.7832 101.364 cv
23.0967 102.731 22.1719 102.179 21.3154 102.188 cv
20.7617 102.332 20.2695 102.958 19.6709 102.735 cv
19.2031 102.438 17.2354 101.037 16.7803 100.185 cv
cp
ef
7.27344 113.199 mo
8.15039 113.175 8.29102 114.342 9.36133 114.823 cv
11.5176 115.175 13.7598 116.194 15.9639 116.908 cv
16.4502 117.248 16.9004 117.592 16.9541 117.984 cv
17.665 118.186 18.2744 117.572 18.9785 117.73 cv
19.877 118.06 20.7949 118.553 21.6582 118.594 cv
24.3477 120.92 26.585 119.635 29.124 120.744 cv
29.2324 121.187 29.29 121.637 29.293 122.094 cv
28.6123 123.052 27.7168 122.274 26.9746 122.725 cv
26.1416 122.467 25.4365 123.221 24.5693 122.686 cv
22.7783 123.438 20.8545 123.118 19.1074 124.226 cv
16.2324 124.077 13.585 125.747 10.6719 125.283 cv
9.94922 125.905 9.17676 126.109 8.39453 126.253 cv
7.81152 127.069 7.22852 127.89 6.54004 127.856 cv
5.77539 127.095 6.28711 126.175 6.39063 125.305 cv
6.5 124.583 6.14355 123.274 6.95996 123.007 cv
7.71387 123.102 8.57813 124.069 9.30176 123.912 cv
10.6084 123.823 11.8623 123.42 13.1602 123.258 cv
14.4346 123.098 15.8047 123.19 17.0615 122.94 cv
17.8887 122.774 18.7246 122.34 19.5283 122.117 cv
20.3789 121.882 21.332 121.991 21.9961 121.292 cv
22.2363 119.243 18.6914 119.218 17.4189 118.955 cv
16.8877 118.365 16.4355 118.397 15.9424 118.111 cv
14.9434 117.885 13.9746 117.908 13.0117 117.964 cv
11.8369 116.803 10.8525 117.148 9.7627 116.658 cv
8.80371 116.3 8.0459 117.548 7.10547 117.333 cv
6.03809 116.324 7.13965 115.045 6.68359 113.959 cv
6.87988 113.706 7.07617 113.452 7.27344 113.199 cv
cp
ef
92.2588 21.501 mo
92.1338 23.3677 92.585 25.498 94.7891 25.2959 cv
97.6953 25.0293 96.5381 22.6387 95.6318 21.0786 cv
94.9785 19.9521 94.249 18.6045 93.2285 18.2939 cv
91.8223 18.8789 92.4258 20.5186 92.2588 21.501 cv
cp
91.707 11.6318 mo
92.917 11.8867 92.9531 13.5972 93.4365 14.499 cv
94.7295 15.5361 94.6738 16.7432 96.0732 17.7666 cv
96.2158 19.146 97.1943 20.353 97.9307 21.6475 cv
98.4707 22.5967 98.8145 23.5107 99.3232 24.5566 cv
99.7344 25.3989 100.798 26.9507 101.813 28.0142 cv
102.567 28.8066 103.969 29.1689 104.176 30.4609 cv
103.591 31.7261 102.729 30.7666 102.087 31.5791 cv
101.325 31.4219 100.688 32.2646 99.918 32.0205 cv
99.4932 31.2754 100.047 30.4063 100.296 29.5742 cv
99.3818 28.2666 99.4932 26.5835 98.1006 25.7378 cv
96.5342 24.7852 94.8594 25.9609 93.2734 26.8569 cv
92.3096 28.5771 92.9736 30.0923 93.1885 31.665 cv
94.0029 32.249 94.8232 32.8311 94.793 33.5195 cv
93.5107 34.2393 92.1973 34.6924 90.7861 34.3652 cv
90.4736 33.7188 91.5215 32.9033 91.5439 32.2139 cv
91.7324 30.7046 91.5322 29.2456 91.3311 27.7856 cv
91.9502 26.2798 91.0088 24.9697 91.6455 23.4629 cv
91.2402 22.3145 91.4395 21.0889 91.0342 19.939 cv
91.7129 18.9976 90.8818 18.2466 91.5605 17.3042 cv
91.1299 15.6436 90.6777 13.9863 90.5908 12.2852 cv
90.9277 11.7915 91.2998 11.5732 91.707 11.6318 cv
cp
ef
0.466797 134.101 mo
1.12988 133.917 1.81641 133.926 2.49121 133.847 cv
2.09277 134.402 2.80469 134.849 2.85059 135.346 cv
2.87207 135.574 2.5918 135.838 2.59766 136.062 cv
2.61719 136.767 2.99414 137.441 2.85254 138.086 cv
2.06836 138.22 1.18359 137.538 0.363281 137.37 cv
0.943359 136.213 0.604492 135.169 0.466797 134.101 cv
cp
ef
2.49414 139.331 mo
2.86133 140.598 2.65918 141.938 3.14844 143.19 cv
2.83691 143.664 3.12988 144.226 3.16992 144.73 cv
3.24023 145.625 3.09766 146.312 3.65527 147.238 cv
3.36621 147.731 4.04004 148.104 3.4873 148.63 cv
4.22168 149.041 3.85449 149.766 3.8877 150.465 cv
3.91309 150.975 4.35449 151.322 3.86816 151.667 cv
4.22949 152.479 4.58789 153.291 4.35449 154.177 cv
4.54297 154.324 4.73242 154.472 4.92285 154.619 cv
4.53125 155.811 5.82031 156.792 5.3457 157.994 cv
6.125 158.476 6.02637 159.69 6.16895 160.46 cv
6.29297 161.131 6.68359 161.832 6.42188 162.486 cv
6.67578 162.683 6.92773 162.878 7.18359 163.076 cv
6.80859 164.036 7.54297 164.858 7.85742 165.733 cv
7.20703 165.559 6.60352 165.751 6.02344 166.135 cv
5.35938 165.36 5.8457 164.442 4.8623 163.71 cv
5.36328 161.818 3.68555 160.2 4.18555 158.31 cv
3.38379 157.154 3.3457 155.902 3.38379 154.642 cv
2.38281 154.023 3.17285 153.183 2.26563 152.554 cv
2.51172 151.494 2.18945 150.506 1.88477 149.516 cv
2.03613 148.539 1.83398 147.647 1.69531 146.627 cv
1.67578 146.492 1.4707 146.272 1.46191 146.143 cv
1.43848 145.824 1.72363 145.377 1.67285 145.089 cv
1.48535 144.041 0.538086 143.033 1.10156 141.904 cv
0.330078 141.487 0.993164 140.889 0.40625 140.449 cv
0.654297 140.075 0.774414 139.718 0.616211 139.396 cv
1.1543 138.666 1.91016 139.693 2.49414 139.331 cv
cp
ef
109.758 7.99902 mo
109.799 9.00977 108.604 8.90527 108.094 9.74902 cv
107.81 11.0518 108.119 13.04 108.199 14.7056 cv
108.221 15.1699 108.15 15.8105 108.222 16.2446 cv
108.352 17.0425 108.893 17.8564 109.043 18.7129 cv
109.294 20.124 109.163 21.584 109.404 22.9502 cv
109.676 24.4795 109.851 26.064 110.774 27.0635 cv
112.336 28.7485 113.901 28.0835 115.543 26.8076 cv
116.242 25.0635 115.597 23.4873 116.11 21.7676 cv
114.987 17.7959 115.098 13.6709 114.251 9.66211 cv
113.121 8.92285 112.212 8.66162 112.268 7.5127 cv
113.012 6.41016 114.477 6.75391 115.411 6.60449 cv
116.324 6.45947 117.71 5.54492 118.678 6.70996 cv
118.534 7.84424 117.657 7.63086 117.013 8.46094 cv
116.441 11.6748 117.701 14.6563 117.669 17.8027 cv
118.558 19.2334 117.724 20.8799 118.409 22.3354 cv
117.996 23.6875 118.695 25.4766 117.8 27.0391 cv
117.109 28.2383 115.902 28.8569 114.72 29.8247 cv
112.938 30.1943 111.049 29.7007 109.152 29.1514 cv
106.879 27.6074 107.179 25.7432 106.115 24.0479 cv
106.396 22.9258 106.019 21.8896 105.883 20.8203 cv
105.496 17.8535 105.491 14.5176 104.698 11.373 cv
103.818 10.6284 102.463 9.94141 102.524 9.07666 cv
102.665 8.83154 102.829 8.77148 103.01 8.84375 cv
104.486 7.83496 106.313 8.15088 108.029 7.87256 cv
108.355 7.82031 109.054 6.96436 109.758 7.99902 cv
cp
ef
7.80957 146.204 mo
8.47559 146.06 9.33594 147.445 10.0029 147.301 cv
10.1855 147.384 10.3408 147.258 10.5313 147.406 cv
12.3193 147.084 14.1133 146.823 15.8447 146.055 cv
17.4814 146.35 18.9941 145.661 20.5264 145.126 cv
22.1152 145.502 23.6045 145.077 25.1445 145.061 cv
26.4678 143.769 27.915 143.465 29.4053 143.498 cv
29.8984 144.179 29.8086 144.934 29.8486 145.671 cv
28.5596 146.332 27.1699 146.617 25.6318 147.57 cv
24.3115 148.387 23.1016 149.517 21.6445 149.954 cv
21.3008 150.396 20.9561 150.841 20.6133 151.283 cv
18.7676 152.365 16.085 153.022 14.9619 155.418 cv
16.3203 156.688 17.4023 155.748 18.5264 155.143 cv
21.5596 155.197 24.373 153.494 27.4043 153.517 cv
28.0811 152.995 28.7852 152.692 29.4912 152.398 cv
30.2129 151.772 29.5547 150.868 30.4805 150.731 cv
31.5 150.961 31.2178 152.644 31.6855 153.494 cv
31.4902 154.46 32.6602 155.685 31.3477 156.278 cv
30.415 156.12 30.4072 155.402 29.7871 154.76 cv
28.29 154.205 26.9453 154.878 25.5059 154.783 cv
25.123 155.377 24.624 155.032 24.2412 155.627 cv
22.1162 155.533 20.125 156.512 18.0195 156.577 cv
16.1045 157.477 13.9258 156.916 11.8838 158.202 cv
10.8467 159.088 11.7393 160.408 10.4922 160.776 cv
9.58887 160.09 9.95215 159.245 9.85938 158.456 cv
9.68555 157.679 9.74316 156.872 9.90039 156.052 cv
11.123 155.334 12.375 154.842 13.6328 154.385 cv
15.1563 152.414 16.9492 152.583 18.4609 150.523 cv
19.1426 150.49 19.7529 149.896 20.4434 149.933 cv
21.3877 148.687 23.6582 148.521 23.4805 146.811 cv
21.5596 146.274 19.4756 146.814 17.5527 147.383 cv
17.4561 147.412 17.0977 147.24 17.0264 147.277 cv
16.4932 147.559 15.8027 147.688 15.0439 147.868 cv
13.5254 148.229 11.8369 148.928 10.0674 149.178 cv
9.19238 149.948 9.80469 151.142 8.63379 151.413 cv
7.71484 149.928 7.66699 148.335 7.36719 146.773 cv
7.51465 146.583 7.66113 146.395 7.80957 146.204 cv
cp
ef
136.101 11.7236 mo
133.384 13.416 133.628 9.37598 132.027 7.9502 cv
130.14 7.10254 127.831 7.97949 126.693 10.5029 cv
125.918 12.2227 125.521 15.0078 125.05 16.5352 cv
125.084 19.3867 125.223 22.2266 126.108 24.9707 cv
127.291 25.6797 127.435 26.5176 128.617 27.2266 cv
131.189 28.248 134.234 25.0781 132.833 22.585 cv
132.415 21.5439 131.124 21.667 130.703 20.626 cv
131.682 18.8623 133.03 20.0474 134.184 19.6753 cv
135.193 19.9561 136.923 18.7998 137.493 20.1182 cv
138.319 20.4707 137.177 21.0708 136.988 21.5503 cv
136.582 21.4932 136.207 21.7114 135.871 22.2051 cv
135.387 23.6938 135.922 25.0557 135.557 26.5278 cv
133.831 28.1777 131.963 29.0186 129.692 28.9766 cv
128.336 28.9521 125.691 28.9946 124.335 27.2485 cv
124.16 27.0234 124.264 26.4668 124.019 26.0889 cv
123.574 25.4004 122.853 24.7319 122.563 24.0449 cv
122.192 23.1592 122.476 22.1538 121.889 21.3867 cv
122.282 20.0811 122.081 18.8486 121.761 17.6328 cv
122.504 15.4829 122.207 13.4639 123.023 11.3066 cv
124.059 9.97559 125.092 8.64844 126.124 7.31836 cv
126.566 6.99512 127.566 6.79297 128.253 6.53809 cv
128.99 6.2666 130.158 5.82129 131.247 5.8208 cv
131.472 5.81934 131.719 6.07813 131.965 6.07324 cv
133.434 6.04297 134.348 5.81055 135.088 6.36768 cv
136.029 7.07959 136.033 7.8584 136.288 9.12988 cv
136.061 9.90723 136.879 11.4468 136.101 11.7236 cv
cp
ef
7.16211 167.019 mo
7.55371 167.409 7.91211 167.528 8.2168 167.229 cv
8.05371 167.765 8.60449 168.21 8.23828 168.769 cv
8.75586 169.047 8.38086 169.438 9.03906 169.698 cv
8.16895 170.435 9.97363 170.837 9.10254 171.574 cv
9.61621 172.024 9.62402 172.537 10.1367 172.987 cv
9.38379 173.538 10.6152 173.841 9.96875 174.378 cv
10.668 175.091 10.7725 175.878 11.6152 176.572 cv
10.7441 177.309 12.5488 177.71 11.6787 178.448 cv
12.1914 178.898 12.1982 179.411 12.7119 179.862 cv
12.4209 180.125 12.6377 180.328 12.459 180.578 cv
13.4209 181.486 12.915 182.577 14.1895 183.446 cv
13.5498 183.926 14.377 184.223 14.168 184.649 cv
15.4326 186.202 16.5186 187.781 16.4902 189.497 cv
16.1768 190.193 15.6846 189.458 15.3721 190.151 cv
14.7295 189.491 14.7813 188.741 13.916 188.107 cv
14.1416 187.278 13.5088 186.559 12.9453 185.829 cv
13.0391 184.79 12.2666 183.858 11.5527 182.919 cv
11.5605 182.519 11.3291 182.147 11.5723 181.717 cv
10.7803 180.939 10.6094 179.848 10.1807 178.808 cv
9.78223 177.839 9.0791 176.92 9.12598 175.855 cv
7.69238 174.55 8.29883 172.987 7.22559 171.638 cv
7.27734 171.232 7.41016 170.815 6.90918 170.478 cv
7.19824 170.156 6.98926 169.898 7.31055 169.572 cv
6.76953 169.011 7.20215 168.329 6.57129 167.778 cv
6.76758 167.525 6.96387 167.272 7.16211 167.019 cv
cp
ef
63.0127 113.584 mo
63.752 114.021 64.4365 114.015 65.2041 114.681 cv
65.6904 115.935 64.9189 117.343 65.1865 118.624 cv
66.4072 121.172 69.126 122.347 71.4717 122.292 cv
72.417 123.087 72.0205 124.05 72.1475 124.949 cv
73.3525 125.827 72.7188 126.934 73.8779 127.816 cv
75.1045 128.49 76.1094 127.398 77.167 126.72 cv
78.5703 128.704 75.0508 130.22 73.6455 130.073 cv
72.3223 128.927 72.5996 127.858 71.3887 127.101 cv
69.5664 125.961 68.1777 127.849 66.2842 127.396 cv
66.2764 126.542 66.7314 125.627 66.8115 124.761 cv
67.5225 122.72 64.5361 119.535 62.3594 120.692 cv
61.6191 121.413 61.5205 122.054 61.0742 122.737 cv
60.4053 122.87 59.6328 122.166 59.0068 122.654 cv
57.6602 123.68 58.9072 125.101 57.6592 125.564 cv
55.207 124.537 57.7412 121.457 57.4248 119.597 cv
55.5039 119.031 56.4346 117.709 55.1689 116.625 cv
54.1309 115.642 53.4199 117.261 52.4258 116.624 cv
52.6074 115.214 54.1904 114.705 55.0195 114.071 cv
56.2402 114.237 57.4609 114.415 58.583 113.797 cv
59.1729 113.936 59.8232 114.566 60.3965 114.598 cv
61.3496 114.909 62.1299 113.84 63.0127 113.584 cv
cp
ef
151.791 13.8701 mo
150.461 13.2275 151.533 11.6309 150.693 10.5806 cv
149.337 8.88867 147.704 8.97119 145.989 9.9707 cv
145.255 11.2617 145.299 12.4556 145.253 13.6611 cv
147.249 16.7808 149.595 19.8564 151.729 22.9614 cv
151.653 25.0532 151.639 26.6992 150.34 28.2749 cv
149.623 29.1431 147.857 30.3682 146.355 30.6582 cv
145.444 30.8359 144.302 30.4492 143.042 30.2178 cv
141.611 29.9517 140.211 29.9028 139.691 29.4365 cv
139.069 28.8833 138.818 27.2695 139.076 25.917 cv
139.184 25.3657 138.692 24.7681 139.689 23.9531 cv
140.016 23.6865 140.588 23.7354 141.376 23.7432 cv
142.693 25.1182 140.938 28.3164 144.076 28.8877 cv
144.226 28.917 144.542 28.7881 144.75 28.8037 cv
145.399 28.8525 146.893 28.6538 147.556 27.9385 cv
148.903 26.4834 148.124 24.9902 148.166 23.2358 cv
147.413 22.3594 146.592 21.4902 146.627 20.5146 cv
144.738 19.0371 144.19 17.3936 142.618 15.876 cv
142.044 13.5498 141.678 11.1973 144.428 8.45313 cv
145.996 8.18262 148.333 7.13574 150.312 7.54443 cv
150.866 7.65869 152.784 8.12109 153.371 8.70361 cv
154.597 9.91699 154.818 14.105 151.791 13.8701 cv
cp
ef
15.5361 175.053 mo
16.2617 174.457 17.1963 175.527 17.9834 175.431 cv
18.6797 175.522 19.3389 175.307 19.9648 174.839 cv
20.3096 175.413 20.9766 176.162 21.6328 175.83 cv
21.6055 176.6 20.0049 176.471 19.3545 176.801 cv
19.0107 177.244 18.666 177.688 18.3223 178.131 cv
18.0195 178.853 18.416 179.489 17.9014 180.239 cv
17.665 180.192 17.4316 180.143 17.2256 180.324 cv
16.1797 178.912 16.6396 177.313 15.4727 175.917 cv
15.4287 175.637 15.7637 175.31 15.5361 175.053 cv
cp
ef
64.5547 124.529 mo
64.2148 125.481 62.6309 127.063 61.582 126.787 cv
60.3555 125.459 63.3291 123.042 64.5547 124.529 cv
cp
ef
16.9531 190.468 mo
17.6387 190.37 17.0713 191.079 17.418 191.438 cv
17.5566 191.582 18.0684 191.479 18.3252 191.839 cv
18.4453 192.008 18.4668 192.422 18.6006 192.661 cv
18.915 193.231 19.7666 194.089 19.5713 194.938 cv
21.7588 197.178 22.2656 199.626 24.5498 201.853 cv
25.6563 204.313 26.8701 206.834 29.2959 208.285 cv
29.5928 209.161 30.4229 209.896 30.9414 210.478 cv
31.1514 210.713 31.166 210.976 31.3643 211.11 cv
31.5234 211.218 31.7256 211.04 31.8916 211.217 cv
32.1729 211.517 32.2686 212.053 32.5459 212.333 cv
32.835 212.628 33.1816 212.526 33.2617 212.585 cv
33.5732 212.815 33.7744 214.089 34.6338 213.957 cv
34.9238 215.805 37.7783 217.331 38.5371 219.122 cv
39.7715 219.862 41.2314 220.919 42.0381 222.454 cv
44.6318 223.994 48.752 228.315 52.2275 231.287 cv
51.792 231.911 51.2285 231.529 50.8135 232.32 cv
49.7637 230.938 48.043 230.758 47.5029 229.138 cv
47.0791 229.41 46.4795 228.267 46.0684 228.631 cv
45.9873 228.128 45.3789 227.688 45.3711 227.177 cv
44.5391 226.818 43.5225 226.021 42.7139 225.11 cv
42.0264 224.335 41.3252 223.54 40.8779 222.769 cv
39.8672 222.409 38.9082 221.927 38.3467 221.717 cv
37.5352 220.476 37.0898 220.087 35.8369 219.461 cv
35.2451 217.688 33.0811 215.852 32.6514 214.548 cv
30.9043 213.745 30.8447 211.983 29.002 211.406 cv
28.499 209.92 26.4912 208.322 25.7529 207.358 cv
24.5732 205.907 24.1328 204.36 22.7988 202.93 cv
23.1396 202.203 22.3066 201.621 22.207 200.947 cv
21.2891 200.618 21.3545 200.234 20.3516 199.81 cv
19.2305 197.837 18.1611 195.857 17.7148 193.8 cv
17.3242 193.22 16.4258 192.704 16.2998 192.093 cv
15.9521 191.907 16.1133 191.659 15.8789 191.459 cv
16.2168 190.972 16.5605 190.521 16.9531 190.468 cv
cp
ef
160.8 24.2217 mo
160.445 26.666 158.509 29.3091 158.65 31.6885 cv
160.332 32.8057 161.864 32.7217 163.438 32.9736 cv
166.493 30.8159 167.785 27.9707 165.587 25.5068 cv
165.137 25.0049 164.506 24.9385 163.918 24.5171 cv
163.249 24.0361 162.935 23.0967 162.021 23.0415 cv
161.617 23.4399 161.168 23.521 160.8 24.2217 cv
cp
163.939 15.0903 mo
163.81 16.1792 163.642 16.9453 163.264 17.916 cv
162.882 18.9038 161.932 19.7681 162.104 20.9736 cv
162.219 21.1309 162.477 21.2705 162.337 21.4604 cv
164.014 22.9932 165.449 22.5967 166.895 22.2588 cv
167.961 20.6934 169.529 19.9106 169.654 18.3159 cv
169.417 16.3447 167.129 13.814 164.824 13.9512 cv
164.572 14.3442 163.951 14.98 163.939 15.0903 cv
cp
160.31 10.7471 mo
161.653 9.70703 163.025 11.3945 164.761 12.0732 cv
167.088 12.9854 169.057 12.4946 171.444 14.835 cv
172.058 15.4326 172.297 16.2681 172.902 16.8799 cv
172.938 17.6748 172.791 18.4932 172.859 19.2852 cv
171.905 20.7754 170.844 21.4282 169.824 22.4067 cv
169.194 23.3154 168.354 22.5254 167.736 23.5254 cv
167.198 25.0049 169.162 26.0645 169.594 27.4043 cv
169.808 28.0684 169.39 28.5483 169.806 29.0918 cv
169.167 31.2393 168.065 32.356 166.156 34.1777 cv
165.003 34.5273 163.789 34.4219 162.637 34.7871 cv
161.191 34.1953 159.814 34.145 158.461 34.2827 cv
157.891 33.8408 157.321 33.3984 156.752 32.9551 cv
155.454 32.4268 153.436 32.5713 152.64 31.5854 cv
152.869 30.166 154.687 30.9736 155.549 30.1934 cv
155.973 28.3101 157.537 26.2871 157.573 24.4541 cv
157.818 24.1387 158.063 23.8232 158.31 23.5068 cv
158.99 20.2793 160.911 16.8965 161.366 13.6982 cv
160.599 12.877 158.962 11.2646 160.31 10.7471 cv
cp
ef
33.001 183.145 mo
32.0352 184.18 33.3271 184.933 33.001 185.887 cv
31.0967 188.573 27.4736 184.784 30.3643 182.618 cv
31.2148 182.564 32.0654 182.52 33.001 183.145 cv
cp
ef
33.2373 197.339 mo
33.7178 198.191 32.6875 199.235 31.8877 200.248 cv
31.4531 201.902 32.2285 203.404 34.167 204.762 cv
35.7148 204.806 37.3076 205.212 38.6582 203.685 cv
38.7373 204.154 39.8613 205.241 40.3242 204.675 cv
41.002 203.562 40.1963 202.636 39.9453 201.639 cv
40.4414 200.605 40.6816 199.604 40.4287 198.665 cv
41.8564 197.596 41.9805 195.452 42.2402 193.983 cv
41.8896 193.203 40.916 194.086 41.1436 193.435 cv
41.208 192.17 42.7158 190.724 43.7148 189.343 cv
45.8574 188.114 48.6914 188.354 50.9092 190.669 cv
51.417 191.201 51.9473 192.231 52.2158 192.905 cv
52.5156 193.651 52.7793 194.366 52.6592 195.076 cv
51.5791 196.029 50.6201 197.948 49.3906 197.712 cv
48.5264 196.688 49.3428 195.718 50.4033 194.846 cv
50.8037 193.389 49.9053 191.714 48.5459 190.965 cv
47.2334 190.242 45.8271 191.036 44.792 191.094 cv
41.0615 195.386 43.6543 198.889 42.3281 202.882 cv
41.2861 204.344 40.0498 205.63 38.8057 206.235 cv
37.8877 206.684 37.3154 206.86 35.9609 206.764 cv
34.9375 206.691 33.8096 206.538 32.7539 205.795 cv
32.2402 205.434 32.1289 204.873 31.7207 204.383 cv
30.8838 203.377 29.5352 202.446 29.4199 201.072 cv
29.5049 200.891 29.377 200.735 29.5264 200.545 cv
29.6094 200.363 29.4824 200.207 29.6309 200.019 cv
30.7852 198.747 31.7969 196.325 33.2373 197.339 cv
cp
ef
179.672 17.5742 mo
180.939 17.373 182.085 18.5679 183.301 19.1758 cv
184.444 19.7495 185.953 19.876 186.443 21.0098 cv
185.472 22.8379 184.081 21.3057 183.006 22.2979 cv
181.563 24.1348 181.087 25.8506 179.738 27.6758 cv
179.14 28.3809 178.26 26.8242 177.714 27.9297 cv
176.957 28.7095 178.284 29.2295 178.305 29.9111 cv
177.896 30.7012 177.815 31.7275 177.294 32.7803 cv
176.465 34.4482 175.487 35.0703 175.396 36.7886 cv
175.311 38.417 176.348 40.8301 178.707 39.9717 cv
179.115 40.022 179.53 40.1553 179.87 39.6548 cv
180.296 40.3364 180.562 39.7158 180.922 39.8652 cv
181.834 38.9507 182.157 38.1113 181.978 37.3335 cv
183.843 34.5874 185.577 31.8564 186.444 29.2349 cv
187.183 28.2852 187.92 27.3359 188.658 26.3867 cv
189.25 25.1704 187.906 24.1953 188.573 22.9707 cv
190.045 22.4058 192.439 23.4805 193.636 25.0781 cv
193.256 26.4766 191.543 25.7432 190.578 26.6611 cv
189.657 28.7188 187.985 30.8711 187.585 32.8613 cv
186.703 33.9063 186.71 34.6792 185.667 35.3291 cv
185.032 37.501 183.305 39.5903 181.471 41.5098 cv
179.935 41.8369 178.509 42.4785 176.558 41.9541 cv
174.707 41.459 172.873 39.8032 172.063 37.5488 cv
172.23 36.4414 172.01 35.3838 173.182 34.1523 cv
173.502 32.627 174.241 31.0493 175.668 29.3857 cv
176.005 28.7148 176.034 28.084 176.278 27.4248 cv
178.252 25.4634 178.282 23.7461 180.031 21.8135 cv
180.115 21.6309 179.986 21.4766 180.137 21.2852 cv
180.755 19.9517 177.839 19.0605 179.672 17.5742 cv
cp
ef
62.8486 206.651 mo
61.7588 207.975 60.7354 209.853 59.4746 209.817 cv
58.8467 208.981 59.5635 207.977 60.4873 206.947 cv
60.6494 206.299 60.7402 205.66 60.7607 205.028 cv
60.5156 204.888 60.4551 204.725 60.5293 204.544 cv
59.7686 203.953 59.0088 203.362 58.25 202.772 cv
56.9443 202.379 55.7051 202.521 54.4551 202.563 cv
53.1621 203.656 51.8232 204.363 50.5537 205.621 cv
50.124 206.46 49.6914 205.294 49.1621 205.453 cv
49.0625 205.482 48.9639 205.832 48.8662 205.833 cv
48.4014 205.835 47.7813 205.454 47.3271 205.854 cv
46.6875 206.448 47.4404 206.868 48.0215 207.308 cv
47.5957 208.009 46.9512 206.956 46.5684 208.005 cv
45.8193 208.557 46.9189 208.876 46.7383 209.354 cv
45.5713 210.871 44.5752 212.361 44.25 214.122 cv
44.2295 214.239 44.5049 214.515 44.4814 214.607 cv
44.3018 215.349 44.3701 215.647 44.7354 216.632 cv
44.9834 217.298 45.0557 217.782 45.4326 218.087 cv
46.5938 219.023 47.8213 218.396 49.417 218.444 cv
50.3594 217.757 51.2637 216.763 52.4541 218.063 cv
52.0596 218.781 52.2197 219.067 51.6123 219.54 cv
51.2471 219.823 50.6748 219.554 50.2617 219.709 cv
48.8369 220.244 47.627 220.383 46.0234 220.068 cv
45.2637 219.479 44.5049 218.888 43.7451 218.298 cv
42.335 216.082 41.5674 214.058 42.71 211.402 cv
44.4492 209.563 45.2539 207.472 46.6514 205.938 cv
46.9502 205.61 47.5654 205.427 47.916 205.094 cv
48.3086 204.724 48.4736 204.21 48.8018 203.956 cv
49.5947 203.344 50.6719 202.946 51.5215 202.415 cv
52.4268 201.853 53.2852 201.337 54.0537 200.729 cv
55.6416 200.636 57.2207 200.485 58.8193 200.474 cv
60.3477 201.425 60.875 202.5 62.2793 203.467 cv
62.4033 204.538 62.9063 205.559 62.8486 206.651 cv
cp
ef
198.721 34.208 mo
197.942 35.8232 196.045 37.7363 195.411 39.2495 cv
195.981 40.8301 197.283 41.4902 199.018 42.0537 cv
203.778 41.6641 205.395 35.0806 200.472 33.1318 cv
200.032 33.3955 198.973 33.6826 198.721 34.208 cv
cp
197.812 31.0654 mo
197.916 30.1963 196.284 29.5449 196.651 28.6416 cv
197.193 27.9492 197.854 28.207 198.444 27.9014 cv
199.729 28.6553 199.773 29.5645 200.469 30.3906 cv
203.681 31.9287 206.699 34.9414 206.883 37.8125 cv
206.245 39.1328 205.911 40.916 204.84 42.0098 cv
203.992 42.8726 202.856 42.7646 202.117 43.5508 cv
200.731 43.8945 199.203 43.0688 197.879 43.9102 cv
197.101 44.3643 197.515 45.0605 197.416 45.6807 cv
197.159 47.2881 196.744 48.9395 196.173 50.8076 cv
195.89 52.042 196.823 53.124 196.786 54.3281 cv
195.677 55.2764 193.749 54.6611 192.862 53.1055 cv
193.12 51.5869 193.954 49.999 193.663 48.5498 cv
194.893 46.0537 195.696 43.6123 194.65 41.4014 cv
192.688 40.7661 191.211 44.0352 189.529 45.6416 cv
189.046 46.8438 189.824 47.8892 189.951 49.0151 cv
188.352 50.3945 185.291 47.3804 183.94 46.1699 cv
183.438 45.9473 183.953 45.5957 183.666 45.3467 cv
184.787 44.2783 186.123 44.9111 187.334 44.5459 cv
190.776 40.2139 194.729 35.9844 197.812 31.0654 cv
cp
ef
141.633 109.218 mo
142.503 109.917 141.95 111.402 140.872 111.369 cv
140 110.669 140.554 109.186 141.633 109.218 cv
cp
ef
51.9092 224.644 mo
53.0439 224.123 54.3467 224.954 55.4727 224.368 cv
59.1416 220.97 64.0264 215.32 66.4355 210.656 cv
66.6416 209.661 64.7334 208.929 65.5693 207.854 cv
66.4805 207.046 67.6436 208.853 68.7119 209.687 cv
69.8018 210.537 71.6221 211.181 71.2646 212.28 cv
70.4111 213.22 69.3018 212.11 68.333 212.132 cv
66.2197 213.836 64.5967 216.384 62.6406 218.672 cv
60.8018 220.825 59.1895 223.272 57.3291 225.507 cv
56.4902 226.789 58.5889 228.501 57.1191 229.302 cv
56.084 228.517 53.5479 226.91 52.373 225.614 cv
52.0811 225.292 52.0322 224.995 51.9092 224.644 cv
cp
ef
148.169 109.428 mo
148.963 110.076 149.031 110.917 148.233 111.304 cv
147.247 111.247 147.169 109.681 148.169 109.428 cv
cp
ef
52.8809 232.404 mo
53.0225 232.159 53.1846 232.099 53.3652 232.172 cv
55.417 233.199 56.9766 234.942 58.8281 236.114 cv
60.8896 237.418 63.2334 237.978 64.208 239.382 cv
65.2539 239.549 65.9189 240.344 66.7813 240.772 cv
68.3037 241.532 71.0244 242.305 73.7412 244.356 cv
74.1904 244.751 74.5615 244.513 74.9854 244.715 cv
75.7324 245.379 75.9209 245.04 76.3145 245.747 cv
77.4404 246.069 78.6094 246.732 79.7109 246.864 cv
81.9961 249.142 83.793 247.544 86.0596 249.668 cv
86.6924 249.71 87.3682 250.091 87.9785 249.941 cv
89.916 251.724 91.5723 251.271 93.4209 252.344 cv
94.1797 252.465 94.9385 252.601 95.6777 252.575 cv
96.2773 253.258 96.7451 252.885 97.3418 253.563 cv
99.1025 253.937 100.839 254.113 102.573 254.28 cv
102.891 254.527 103.207 254.772 103.522 255.018 cv
105.902 255.327 108.296 255.74 110.714 256.345 cv
109.972 257.181 110.026 257.917 110.821 258.56 cv
110.197 258.609 109.518 258.192 108.859 257.947 cv
107.068 258.249 105.053 256.74 103.291 257.274 cv
102.858 256.598 102.876 256.926 102.152 256.39 cv
100.564 256.025 99.1045 256.688 97.4072 255.442 cv
96.6338 255.201 95.8926 255.212 95.1514 255.211 cv
94.1133 254.688 93.0342 253.827 92.1338 254.39 cv
91.7354 253.981 91.6543 253.534 90.9531 253.167 cv
89.9717 253.086 88.9619 252.786 87.9805 252.683 cv
87.4092 252.239 86.8408 251.796 86.2705 251.354 cv
85.3398 251.214 84.3955 250.981 83.5283 251.355 cv
83.1641 250.424 81.5771 250.299 80.7656 249.814 cv
80.5264 249.674 80.6523 249.3 80.1963 249.374 cv
79.6455 249.081 79.1162 248.96 78.6143 249.056 cv
77.8809 247.981 76.123 247.508 74.9863 247.456 cv
74.9111 246.43 72.8613 246.204 72.8564 245.495 cv
71.3447 245.327 70.1035 244.675 69.1855 243.556 cv
67.8174 243.122 66.377 242.099 65.0732 242.186 cv
64.4014 241.813 64.6689 241.321 63.8906 240.962 cv
59.7451 239.296 56.5547 235.96 53.0918 234.091 cv
53.6934 233.445 53.168 232.939 52.8809 232.404 cv
cp
ef
161.473 96.6211 mo
162.099 95.3477 163.445 95.9639 163.391 96.8965 cv
162.702 97.3462 161.867 97.4814 161.473 96.6211 cv
cp
ef
147.159 117.777 mo
147.887 118.496 147.576 119.948 146.4 119.929 cv
145.349 119.188 145.909 117.354 147.159 117.777 cv
cp
ef
73.4814 214.916 mo
73.9297 213.938 74.5518 214.347 75.082 214.029 cv
76.0127 215.011 77.4053 216.5 78.6475 216.497 cv
78.9658 217.389 77.6484 216.604 77.3818 217.339 cv
76.2793 220.049 72.4639 223.097 73.4404 225.545 cv
75.293 227.103 76.915 226.831 78.3975 225.437 cv
79.334 226.348 78.126 227.528 77.4287 228.644 cv
76.9932 229.624 76.9209 231.437 75.5098 231.112 cv
74.7832 230.346 75.6357 229.384 75.3604 228.559 cv
75.0547 227.456 72.9746 225.942 71.8799 226.767 cv
70.4111 227.877 69.1416 231.274 67.832 232.757 cv
67.2734 233.857 68.4004 234.745 67.541 235.881 cv
66.585 235.56 65.5752 234.794 64.585 234.192 cv
63.7041 233.683 62.6777 234.108 62.2021 232.95 cv
63.2119 231.437 64.5674 232.681 65.6826 232 cv
68.0938 228.441 70.875 224.838 72.4072 221.391 cv
73.1494 220.508 72.4834 221.974 73.3545 222.127 cv
73.8486 222.068 74.6006 221.103 74.5361 220.609 cv
75.1191 219.873 73.6074 219.833 73.8818 219.491 cv
73.8867 218.749 74.6553 217.909 74.7881 217.15 cv
75.1055 216.312 73.9014 215.663 73.4814 214.916 cv
cp
ef
221.712 50.8633 mo
220.822 52.542 218.863 55.9707 217.031 54.5327 cv
216.094 53.3926 218.307 51.8599 218.59 50.5698 cv
218.913 49.8994 218.14 49.3662 218.189 48.7314 cv
213.702 44.3765 210.261 48.3711 206.611 50.6982 cv
205.616 52.1943 205.201 52.9424 203.87 53.4404 cv
203.759 54.4258 202.772 55.5195 202.374 56.541 cv
202.288 58.4995 202.188 61.1025 204.106 62.1509 cv
205.416 62.8677 206.932 62.1318 207.733 61.0117 cv
208.756 59.5781 207.547 58.2246 208.765 56.9404 cv
209.979 56.6299 210.982 57.7642 211.233 58.8584 cv
212.371 59.6865 213.507 60.5142 213.447 61.4937 cv
212.309 62.8896 210.813 61.4434 209.59 62.1475 cv
209.096 62.7817 208.604 63.415 208.112 64.0469 cv
206.549 64.7852 204.875 64.6348 203.156 64.1543 cv
200.387 62.2168 199.756 60.0098 199.276 57.7856 cv
200.003 55.5107 200.87 53.1797 202.563 51.2051 cv
205.395 47.8999 209.527 45.6021 212.495 44.3057 cv
214.376 44.416 216.893 44.5884 218.904 46.2441 cv
220.405 47.4775 221.282 49.3125 221.712 50.8633 cv
cp
ef
156.605 111.112 mo
156.865 110.916 157.171 111.073 157.429 110.837 cv
158.309 111.667 158.729 112.988 157.767 113.537 cv
156.735 112.81 156.623 111.966 156.605 111.112 cv
cp
ef
79.5967 217.234 mo
80.8223 216.994 82.3604 219.229 83.6475 219.468 cv
84.042 220.758 83.6807 222.967 82.3193 223.919 cv
81.6387 222.633 82.1855 221.192 81.1367 219.954 cv
80.5674 219.511 79.998 219.067 79.4277 218.624 cv
79.5098 218.159 80.2266 217.611 79.5967 217.234 cv
cp
ef
220.549 40.2114 mo
220.616 40.7754 221.545 41.2305 222.109 41.7314 cv
222.721 42.5068 223.123 41.6074 223.733 42.3853 cv
224.428 43.4404 225.773 44.4121 226.182 45.5034 cv
229.131 47.7051 229.61 50.2158 232.024 52.4829 cv
231.697 53.2095 231.695 53.8955 231.941 54.5498 cv
236.067 57.0659 237.215 60.292 238.86 63.2793 cv
239.139 63.7803 239.142 64.2891 240.084 64.8398 cv
240.495 66.6733 242.488 68.3086 242.639 70.1733 cv
243.092 70.6895 243.408 71.2202 243.862 71.7344 cv
243.477 72.2988 242.933 71.6064 242.598 72.5771 cv
242.758 73.8145 244.611 74.8384 244.748 76.0781 cv
245.104 76.1895 245.559 77.0615 245.847 76.626 cv
246.11 77.9478 247.131 78.9907 247.661 80.168 cv
248.059 81.0557 248.156 81.8052 248.524 82.9736 cv
248.749 83.6821 248.585 84.5923 248.673 85.5254 cv
248.361 86.2197 247.869 85.4844 247.558 86.1792 cv
248.083 86.9688 249.138 87.6943 249.391 88.5195 cv
249.744 89.2993 250.717 88.416 250.487 89.0674 cv
251.521 90.8242 251.685 92.6885 252.366 94.4878 cv
251.806 95.0205 251.151 94.8169 250.616 95.5645 cv
250.753 96.6753 251.467 95.4063 252.051 96.0698 cv
252.57 96.3472 252.195 96.7378 252.853 96.998 cv
253.538 97.8818 253.094 98.9092 254.056 99.7598 cv
254.145 101.918 254.531 104.042 255.197 106.127 cv
254.585 107.289 255.404 108.272 255.092 109.397 cv
254.773 109.256 254.815 109.718 254.986 109.925 cv
254.566 110.676 253.951 109.868 253.532 110.62 cv
253.751 111.373 255.119 112.174 255.811 112.391 cv
256.138 113.438 256.035 114.533 256.38 115.575 cv
254.817 116.713 255.615 118.808 255.77 120.278 cv
256.213 120.624 256.655 120.967 257.099 121.312 cv
257.027 122.748 257.002 124.18 257.121 125.593 cv
256.816 126.339 256.294 125.378 255.918 125.574 cv
255.921 126.027 255.553 126.532 255.751 126.964 cv
255.365 127.526 254.703 125.896 254.318 126.458 cv
253.893 126.257 253.551 126.735 253.072 126.101 cv
253.551 124.155 252.389 122.417 252.881 120.469 cv
251.877 114.996 251.82 109.407 250.135 104.02 cv
250.259 103.447 250.63 103.396 250.64 102.586 cv
250.659 102.013 250.022 101.521 250.429 100.899 cv
249.771 100.639 250.145 100.249 249.627 99.9717 cv
249.754 99.23 249.455 98.8179 249.226 98.1382 cv
249.11 97.7949 248.86 97.0962 248.678 96.4912 cv
248.588 96.2036 248.646 95.7529 248.551 95.4795 cv
248.292 94.7373 247.851 93.9653 247.579 93.2026 cv
247.312 92.4424 247.255 91.7178 246.8 91.0713 cv
246.875 90.4902 246.85 89.9229 246.925 89.3428 cv
246.42 87.9795 245.648 86.6475 245.553 85.2314 cv
244.431 83.8857 244.104 82.4434 243.992 80.9707 cv
243.117 80.3857 243.584 79.7534 242.62 79.6011 cv
242.309 77.9351 241.475 76.3936 240.826 74.8574 cv
240.182 73.3286 239.562 71.7402 238.209 70.3867 cv
238.029 68.6392 236.399 67.0703 236.035 65.3447 cv
235.719 65.0996 235.404 64.8545 235.085 64.6094 cv
234.499 62.5688 233.23 60.7456 231.965 58.8311 cv
230.746 56.9868 229.326 54.9351 227.49 53.2222 cv
227.077 52.1323 226.438 51.0684 225.044 50.1025 cv
224.979 49.4248 224.18 48.8398 224.115 48.1626 cv
221.662 46.4121 220.954 44.4463 218.968 42.6382 cv
220.08 42.1709 219.904 41.1104 220.549 40.2114 cv
cp
ef
70.3008 237.418 mo
71.3643 236.323 72.6504 237.003 73.7813 236.47 cv
74.4141 235.591 75.0508 234.748 75.8271 235.014 cv
77.4521 236.47 74.124 238.489 73.0645 238.958 cv
72.2402 238.81 70.7021 238.541 70.3008 237.418 cv
cp
ef
87.0625 222.124 mo
87.249 221.776 87.498 221.938 87.6973 221.703 cv
88.915 222.313 90.0889 222.566 91.3242 223.304 cv
91.6768 224.604 90.8994 225.699 90.7344 226.804 cv
90.5723 227.897 90.6279 228.977 90.6309 230.075 cv
90.6367 232.272 90.8594 234.548 90.2744 236.801 cv
90.7539 237.77 90.1309 238.874 91.3271 239.752 cv
91.5586 239.771 91.791 239.795 92.0459 240.005 cv
93.958 238.29 93.5098 235.518 95.1426 233.278 cv
95.1865 232.587 95.5654 231.854 95.5654 231.169 cv
96.375 230.267 96.8525 229.409 96.9551 228.595 cv
96.9961 227.332 95.0928 226.317 95.8164 224.969 cv
96.4268 224.818 97.1113 225.268 97.8203 225.917 cv
98.5361 226.358 99.7871 226.208 100.014 227.013 cv
100.009 228.31 98.5596 227.541 98.0098 228.805 cv
97.5576 229.621 97.1104 230.508 96.8096 231.527 cv
96.6133 232.189 96.2744 233.163 95.9453 234.206 cv
95.7881 234.705 95.8086 235.321 95.6299 235.787 cv
95.0664 237.25 93.9453 238.533 93.2471 240.026 cv
92.7529 241.087 92.5859 242.455 91.793 243.464 cv
91.4463 244.642 91.6836 246.616 90.001 246.944 cv
89.8047 246.743 89.6318 246.724 89.4756 246.84 cv
87.7646 245.282 89.2559 243.327 89.3252 241.546 cv
89.2627 239.555 88.8945 237.602 89.4287 235.536 cv
89.1553 233.572 90.1523 231.448 89.1963 229.568 cv
87.1729 228.707 86.6445 232.775 86.1396 233.893 cv
85.7949 234.335 85.4492 234.777 85.1055 235.22 cv
84.7256 236.354 84.2695 237.495 84.3271 238.574 cv
83.8838 239.144 83.4404 239.713 82.998 240.283 cv
82.3789 241.503 83.6826 242.481 83.7578 243.614 cv
82.9609 244.089 82.0527 243.678 81.1221 243.089 cv
80.3652 243.299 79.0313 242.789 79.0762 241.802 cv
79.9004 240.632 80.9551 241.304 81.8389 240.599 cv
82.5615 239.311 82.752 238.086 82.9131 236.866 cv
83.6455 235.633 84.4688 234.388 84.5156 233.239 cv
85.915 231.808 85.6875 230.579 87.0869 229.147 cv
87.4111 227.905 87.751 226.665 88.498 225.371 cv
88.9521 224.173 87.0098 223.272 87.0625 222.124 cv
cp
ef
163.021 129.499 mo
163.122 129.372 163.219 129.247 163.317 129.121 cv
163.451 129.28 163.555 129.184 163.654 129.078 cv
163.779 129.175 163.907 129.274 164.034 129.373 cv
163.873 129.506 163.969 129.61 164.077 129.71 cv
163.979 129.837 163.88 129.962 163.781 130.089 cv
163.646 129.928 163.546 130.025 163.444 130.132 cv
163.316 130.033 163.19 129.935 163.064 129.837 cv
163.225 129.702 163.13 129.6 163.021 129.499 cv
cp
ef
169.112 122.054 mo
169.374 121.856 169.682 122.016 169.938 121.778 cv
170.705 122.258 170.246 123.403 169.473 123.551 cv
169.081 123.086 169.156 122.562 169.112 122.054 cv
cp
ef
219.102 68.3247 mo
216.357 65.915 221.142 61.7856 223.298 64.8857 cv
223.706 65.4766 223.627 66.8984 222.961 67.6709 cv
222 68.7832 220.555 68.3057 219.102 68.3247 cv
cp
ef
159.696 149.45 mo
160.396 150.278 160.597 151.165 160.708 152.064 cv
160.352 152.409 159.935 152.275 159.55 152.382 cv
158.45 151.545 158.307 149.557 159.696 149.45 cv
cp
ef
109.398 229.436 mo
109.694 229.856 108.707 230.436 109.568 230.785 cv
108.903 231.325 109.284 231.734 108.726 232.262 cv
108.488 234.806 108.384 237.332 107.292 239.98 cv
107.125 240.858 107.047 241.724 107.104 242.575 cv
106.415 243.862 105.772 245.141 106.029 246.309 cv
105.528 246.415 104.76 245.106 104.279 244.644 cv
104.613 243.059 105.156 241.447 105.227 239.898 cv
106.325 238.16 106.263 236.568 106.323 234.963 cv
107.222 233.536 107.543 232.181 107.354 230.891 cv
106.418 229.402 104.764 228.966 103.578 229.479 cv
102.443 230.296 102.492 232.243 101.322 231.989 cv
100.054 231.409 101.532 230.626 101.892 229.69 cv
101.993 229.426 101.718 228.653 102.545 228.067 cv
102.733 228.206 102.873 227.949 103.029 227.834 cv
104.279 227.78 105.646 228.659 106.867 228.381 cv
107.762 229.136 108.589 229.353 109.398 229.436 cv
cp
ef
224.104 82.2646 mo
223.892 82.5176 223.869 82.7505 223.851 82.9814 cv
224.041 83.1284 224.232 83.2769 224.421 83.4233 cv
226.52 83.3027 228.61 83.1396 230.557 81.7988 cv
230.559 80.7695 230.467 79.7529 229.164 78.8882 cv
227.378 79.2139 225.718 80.5483 224.104 82.2646 cv
cp
235.341 69.375 mo
236.014 70.1465 236.052 70.9995 236.164 71.8418 cv
236.727 72.5703 237.361 73.29 237.134 74.1201 cv
236.049 75.0269 234.745 74.2036 233.571 74.3936 cv
232.539 75.0791 231.784 75.2646 231.231 76.2295 cv
230.292 77.8691 231.545 79.6016 232.687 81.0166 cv
234.198 81.6743 235.543 81.0171 236.926 80.6572 cv
237.775 79.2319 238.722 78.5693 239.751 78.5889 cv
240.328 79.8887 241.718 81.0845 241.271 82.5117 cv
240.216 83.6475 238.916 82.8623 237.665 82.4482 cv
234.164 82.7764 230.716 83.5195 227.332 84.7725 cv
225.985 84.3418 224.701 85.0732 223.282 85.2803 cv
222.911 85.334 222.443 85.1748 222.079 85.2588 cv
221.264 85.4463 220.288 86.0898 219.465 86.2729 cv
218.784 86.4224 217.727 86.9551 217.208 86.0405 cv
216.636 85.6152 217.095 85.0674 217.229 84.8389 cv
217.922 83.6567 220.101 83.2178 220.982 81.9678 cv
221.552 81.4922 222.231 81.9023 222.817 81.5684 cv
225.213 77.5703 229.314 75.2627 232.706 71.5898 cv
233.327 70.1191 233.818 69.0464 235.341 69.375 cv
cp
ef
109.969 229.879 mo
111.363 229.158 112.957 230.019 114.524 230.679 cv
115.121 231.889 115.474 233.946 114.355 234.812 cv
113.292 234.03 114.104 233.016 113.343 232.196 cv
112.178 231.106 111.14 231.017 109.969 229.879 cv
cp
ef
222.146 92.6196 mo
223.041 93.1343 223.294 93.731 223.896 94.2852 cv
225.063 94.7681 225.884 94.0684 227.081 93.7144 cv
227.44 93.6074 227.747 93.7075 228.093 93.5859 cv
228.467 93.4551 228.846 93.084 229.21 92.9341 cv
229.771 92.7017 230.396 92.6338 231.192 92.3428 cv
231.788 92.124 232.2 92.0068 232.838 91.793 cv
233.795 91.4727 235.109 90.9053 236.274 90.5068 cv
237.626 90.042 239.171 89.7725 240.345 88.7974 cv
241.083 88.0195 240.611 87.3926 240.766 86.6885 cv
241.33 85.7119 242.022 85.7803 242.706 85.7588 cv
243.714 86.832 243.08 88.1113 243.318 89.2808 cv
243.939 90.46 244.965 91.5869 244.794 92.8667 cv
243.59 94.2197 242.304 93.1924 241.59 91.896 cv
240.049 91.0063 238.781 92.27 237.393 92.5938 cv
235.99 92.79 234.717 94.0259 233.281 93.9648 cv
230.651 95.3203 227.941 96.0273 225.247 96.856 cv
224.144 98.0537 225.226 99.7056 223.413 100 cv
222.013 99.0332 222.262 97.8584 221.979 96.7529 cv
221.331 95.9771 221.111 95.1475 220.818 94.3291 cv
220.773 94.0469 221.108 93.7207 220.881 93.4634 cv
221.253 92.7949 221.729 92.9307 222.146 92.6196 cv
cp
ef
100.062 249.283 mo
101.015 248.22 102.183 248.879 103.204 248.376 cv
103.563 247.876 103.801 247.389 103.711 246.941 cv
104.903 246.972 105.721 248.511 105.883 249.239 cv
106.797 250.272 107.982 249.604 107.972 250.862 cv
106.921 251.991 105.477 250.754 104.322 250.462 cv
103.532 250.265 103.126 250.203 102.403 250.189 cv
101.873 250.181 101.214 250.398 100.676 250.064 cv
100.215 249.837 100.272 249.543 100.062 249.283 cv
cp
ef
117.499 231.163 mo
117.683 230.813 117.931 230.976 118.13 230.74 cv
118.856 230.607 119.69 231.334 120.43 231.311 cv
121.672 231.643 122.709 230.353 124.078 231.709 cv
123.286 233.14 122.233 232.493 121.442 233.926 cv
120.988 235.066 121.08 236.14 121.338 237.193 cv
120.104 240.261 120.874 243.077 119.885 246.116 cv
119.901 247.712 119.21 249.397 119.466 250.966 cv
119.572 251.923 121.242 251.37 121.364 252.441 cv
121.224 253.388 119.663 252.95 118.813 252.589 cv
117.451 252.773 115.495 253.601 114.488 252.274 cv
115.331 250.792 116.461 251.612 117.355 250.545 cv
118.022 248.976 117.637 247.539 118.156 245.989 cv
118.041 244.171 118.477 241.959 118.745 239.746 cv
118.909 238.397 119.372 236.987 119.438 235.717 cv
119.489 234.824 119.301 233.889 119.102 233.019 cv
118.285 232.435 117.466 231.853 117.499 231.163 cv
cp
ef
229.656 100.588 mo
229.38 102.121 227.9 101.965 227.02 102.804 cv
226.272 103.753 226.201 104.619 226.492 105.44 cv
225.799 105.45 225.303 106.05 225.124 106.811 cv
226.331 107.794 227.344 107.215 228.349 106.578 cv
231.342 106.286 234.231 105.186 237.101 103.94 cv
239.325 103.327 242.551 104.32 244.102 102.376 cv
245.114 101.11 243.896 99.1626 246.085 99.0449 cv
247.947 100.466 246.735 102.275 247.202 103.874 cv
247.65 104.846 248.37 105.784 248.259 106.825 cv
246.794 108.286 246.043 106.972 244.864 105.71 cv
243.754 105.26 242.523 105.199 241.403 105.456 cv
241.027 105.544 240.825 105.829 240.435 105.921 cv
236.417 106.875 232.087 107.81 227.971 109.025 cv
227.468 110.23 227.608 111.354 228.395 112.398 cv
229.764 113.513 231.421 111.997 232.317 113.62 cv
231.983 114.986 230.565 114.785 229.554 114.824 cv
228.532 114.863 227.136 114.791 226.244 114.382 cv
225.317 111.757 225.862 108.946 224.216 106.411 cv
224.278 105.088 223.85 103.828 223.898 102.509 cv
224.441 101.545 225.893 100.809 227.063 100.399 cv
227.886 100.11 228.93 99.0752 229.656 100.588 cv
cp
ef
111.959 256.704 mo
113.394 256.191 113.876 257.23 113.899 258.515 cv
113.225 258.603 112.525 258.49 111.748 257.758 cv
111.575 257.436 112.288 257.005 111.959 256.704 cv
cp
ef
132.556 230.991 mo
133.709 231.873 133.297 232.954 133.274 233.983 cv
133.809 236.374 134.448 238.749 135.364 241.091 cv
136.033 243.464 135.995 245.924 137.453 248.197 cv
137.329 249.013 137.62 249.774 137.749 250.558 cv
138.602 251.253 139.793 251.901 139.731 252.71 cv
139.009 253.768 138.052 252.981 137.223 253.196 cv
136.381 253.307 135.603 253.936 134.628 253.005 cv
134.835 252.202 135.079 252.339 135.662 251.679 cv
135.993 249.58 135.481 247.588 133.213 245.813 cv
133.331 245.048 134.058 245.178 134.059 244.341 cv
134.005 242.347 133.504 240.409 132.476 238.54 cv
131.395 238.222 130.902 239.282 130.473 240.334 cv
130.041 241.384 129.571 243.294 129.966 244.507 cv
130.599 245.298 131.547 244.984 131.676 245.838 cv
131.009 246.456 130.237 246.213 129.587 246.956 cv
127.791 249.235 128.501 251.202 128.66 253.239 cv
127.921 253.765 126.258 254.063 125.918 253.241 cv
125.112 252.599 126.298 251.708 126.824 250.899 cv
127.328 249.465 127.796 248.035 127.667 246.683 cv
128.242 246.268 127.781 245.981 128.215 245.584 cv
128.234 243.583 129.451 241.431 129.333 239.447 cv
130.921 236.792 131.163 234.305 131.29 231.833 cv
131.65 231.06 132.125 231.196 132.556 230.991 cv
cp
ef
146.074 230.839 mo
146.172 230.712 146.271 230.586 146.369 230.459 cv
147.314 229.344 148.49 230.069 149.554 229.889 cv
152.045 228.354 154.685 228 157.333 227.714 cv
158.312 228.737 159.642 230.618 158.811 231.297 cv
157.689 232.214 157.215 230.183 155.858 229.612 cv
154.797 229.639 152.296 229.19 151.325 230.352 cv
150.546 231.281 150.969 232.292 151.179 233.283 cv
151.197 233.373 151.039 233.749 151.073 233.811 cv
151.645 234.892 151.794 236.858 152.254 237.775 cv
152.824 238.218 153.395 238.661 153.964 239.104 cv
154.007 239.498 153.656 239.941 153.269 240.39 cv
153.255 241.876 153.421 243.341 154.493 244.692 cv
154.516 246.105 154.177 247.771 155.674 248.656 cv
156.773 249.306 157.3 248.62 158.563 248.465 cv
159.653 248.128 160.422 248.26 161.178 247.454 cv
162.144 246.425 161.685 244.528 162.971 243.973 cv
164.02 245.213 163.712 246.62 163.478 248.021 cv
161.869 249.772 159.934 248.921 158.248 250.047 cv
156.913 249.877 155.654 250.321 154.347 250.364 cv
153.363 251.03 151.678 252.338 151.014 251.124 cv
151.018 250.151 152.312 250.333 152.826 249.184 cv
153.278 248.89 152.918 248.344 152.85 247.981 cv
152.792 247.691 152.78 247.192 152.722 246.97 cv
152.617 246.574 152.182 246.261 152.068 245.853 cv
151.983 245.55 152.01 245.145 151.94 244.84 cv
151.623 243.416 151.518 241.896 151.055 240.495 cv
149.83 237.735 150.057 234.794 148.457 232.083 cv
147.514 231.073 146.537 231.907 146.074 230.839 cv
cp
ef
172.685 221.677 mo
173.328 222.169 173.486 222.72 173.572 223.28 cv
174.74 224.048 175.582 224.856 174.922 225.853 cv
173.357 227.032 172.591 224.633 171.632 224.21 cv
170.772 223.829 169.292 223.702 168.448 224.779 cv
167.01 226.608 169.448 229.377 170.306 231.399 cv
170.627 232.161 170.595 232.903 171.087 233.53 cv
171.471 235.053 172.739 237.089 173.303 238.908 cv
173.56 239.738 173.66 241.249 174.884 241.965 cv
176.399 242.851 176.718 241.399 178.491 242.028 cv
178.265 244.485 175.023 243.66 173.495 244.539 cv
172.652 245.118 171.921 246.563 170.921 245.89 cv
170.046 245.044 171.576 244.112 172.206 243.843 cv
172.525 242.69 171.854 241.534 171.448 240.513 cv
170.992 239.373 170.156 238.203 169.97 236.926 cv
169.929 236.646 169.736 236.381 169.695 236.104 cv
169.505 234.819 168.279 232.638 167.374 231.255 cv
167.257 229.67 166.659 228.146 165.433 226.7 cv
164.56 226.115 163.813 226.544 163.029 226.658 cv
161.017 228.196 162.174 230.151 161.173 231.002 cv
160.342 231.056 160.597 229.936 160.287 229.399 cv
159.957 228.757 160.122 228.051 160.033 227.375 cv
160.182 227.186 160.33 226.997 160.477 226.806 cv
162.729 225.642 165.016 224.734 167.351 224.231 cv
168.189 223.173 169.141 223.021 170.071 222.69 cv
170.866 221.748 171.772 221.675 172.685 221.677 cv
cp
ef
158.032 234.651 mo
158.706 235.767 158.534 236.988 158.645 238.174 cv
159.354 239.17 160.324 240.135 159.215 241.359 cv
158.981 241.311 158.746 241.261 158.54 241.442 cv
157.953 240.398 155.917 239.325 155.46 238.743 cv
155.397 238.264 156.221 237.854 156.684 237.562 cv
156.991 236.589 156.517 234.746 158.032 234.651 cv
cp
ef
226.402 149.833 mo
227.839 150.566 227.042 151.579 227.752 152.406 cv
229.185 153.819 230.407 153.553 231.716 153.965 cv
231.288 154.589 232.437 155.016 231.927 155.652 cv
232.367 155.955 232.635 154.909 233.003 154.659 cv
233.558 154.972 233.925 155.168 234.646 154.112 cv
235.563 154.584 236.444 154.762 237.282 154.637 cv
238.063 155.48 239.292 155.18 240.3 155.459 cv
241.585 155.817 243.374 156.486 244.814 155.924 cv
245.661 154.936 246.434 153.353 247.448 153.708 cv
248.654 154.924 247.055 156.683 246.795 158.073 cv
246.551 159.414 247.276 161.622 245.387 161.848 cv
244.271 161.381 244.346 160.064 243.697 159.318 cv
242.256 157.665 240.696 158.173 238.72 157.884 cv
237.397 157.695 236.037 157.283 234.84 157.001 cv
231.997 156.329 229.356 155.889 227.118 155.568 cv
226.203 156.483 224.477 158.147 223.872 157.004 cv
223.178 156.12 224.519 154.979 224.694 153.988 cv
224.899 152.722 224.212 150.264 226.402 149.833 cv
cp
ef
223.054 176.471 mo
221.632 178.33 219.729 176.345 218.183 177.251 cv
217.589 178.41 217.578 179.057 216.412 179.531 cv
216.218 180.013 216.336 180.452 216.244 180.92 cv
217.347 181.604 217.652 181.806 218.712 182.839 cv
219.915 183.05 221.123 183.409 222.509 183.051 cv
222.789 182.979 223.229 182.541 223.628 182.396 cv
224.595 182.044 225.71 181.716 226.915 181.297 cv
229.434 180.425 230.661 179.794 233.37 180.831 cv
234.252 181.17 234.891 181.304 235.562 181.928 cv
236.768 183.048 236.764 184.294 237.42 185.809 cv
236.781 188.211 235.563 191.489 232.973 192.705 cv
231.552 192.518 229.371 192.869 228.332 191.231 cv
229.379 189.646 230.918 190.065 232.297 190.05 cv
232.767 190.042 233.437 189.699 233.687 190.216 cv
234.441 189.291 234.227 189.14 235.016 188.508 cv
235.771 188.87 234.784 189.452 235.185 189.857 cv
236.125 189.505 235.749 187.849 235.859 187.03 cv
233.704 187.065 234.199 184.382 231.598 183.11 cv
231.068 182.85 229.924 182.725 229.341 182.879 cv
229.155 182.925 228.914 183.268 228.708 183.3 cv
227.84 183.44 226.755 183.373 226.009 183.639 cv
225.605 183.782 225.534 184.202 225.081 184.44 cv
224.404 184.795 223.026 184.915 222.13 185.496 cv
220.431 185.619 218.693 185.421 216.941 185.117 cv
215.55 183.693 215.111 182.148 214.662 180.606 cv
215.273 178.644 216.414 176.617 217.845 174.551 cv
218.035 174.69 218.172 174.434 218.331 174.32 cv
219.198 174.41 220.019 174.116 220.968 174.845 cv
221.744 174.769 223.112 175.576 223.054 176.471 cv
cp
ef
202.331 203.911 mo
201.093 204.151 199.604 203.469 198.432 204.231 cv
196.954 205.188 196.902 206.914 196.239 208.618 cv
196.439 209.048 196.497 209.498 196.407 209.966 cv
197.247 211.06 198.114 212.989 198.794 213.952 cv
199.527 214.992 200.804 215.707 201.726 216.841 cv
202.01 217.192 202.064 217.671 202.38 217.957 cv
203.822 219.271 205.603 219.985 207.334 220.591 cv
209.209 220.041 211.688 219.758 212.396 217.216 cv
212.695 216.146 211.718 214.956 212.31 213.799 cv
211.645 213.427 211.719 212.96 211.803 212.493 cv
209.978 211.973 209.785 210.396 208.491 209.309 cv
208.822 209.212 209.137 208.995 209.419 208.51 cv
208.36 207.655 208.55 206.17 207.204 205.872 cv
206.272 206.349 207.198 207.45 206.361 207.349 cv
205.345 206.162 203.801 205.043 202.331 203.911 cv
cp
193.813 207.036 mo
195.631 202.86 199.352 202.018 202.184 201.359 cv
203.086 201.726 203.966 201.902 204.819 201.886 cv
206.567 203.064 208.416 205.058 210.095 205.681 cv
210.572 206.423 210.951 207.173 212.076 207.833 cv
212.819 209.568 214.228 211.218 215.114 212.937 cv
215.076 214.312 215.532 215.623 215.284 217.026 cv
214.555 218.032 213.503 219.077 213.262 220.021 cv
212.141 220.646 211.042 221.46 209.908 221.986 cv
209.156 222.58 207.991 222.461 207.061 222.513 cv
206.179 222.56 205.294 222.802 204.32 222.512 cv
203.732 222.338 203.358 221.871 202.654 221.522 cv
202.13 221.262 201.461 221.157 201.029 220.869 cv
197.65 218.611 195.098 214.695 193.581 212.034 cv
193.737 210.358 192.741 208.827 193.813 207.036 cv
cp
ef
212.85 185.288 mo
214.101 185.989 213.293 186.944 214.011 187.714 cv
217.215 190.202 221.521 192.585 223.736 195.575 cv
225.668 196.98 228.304 197.997 229.683 199.286 cv
229.681 201.279 227.354 201.771 226.036 201.628 cv
225.637 201.223 225.558 200.774 224.854 200.405 cv
223.166 200.144 221.437 199.572 219.771 199.498 cv
219.241 198.911 218.789 198.942 218.296 198.657 cv
216.113 198.568 213.73 196.867 211.589 197.099 cv
211.249 197.802 211.858 198.083 212.283 198.553 cv
214.313 200.788 218.186 202.216 221.164 205.151 cv
222.565 205.849 223.668 204.163 225.108 205.171 cv
225.392 206.167 223.905 206.667 223.233 207.977 cv
222.611 209.449 222.121 210.519 220.599 210.19 cv
219.839 209.317 220.606 208.249 220.069 207.346 cv
217.489 205.447 214.652 203.16 212.096 201.146 cv
211.249 200.48 210.159 200.008 209.29 199.271 cv
208.503 198.604 207.985 197.757 207.351 197.458 cv
205.974 196.811 204.832 198.046 203.701 197.058 cv
204.021 195.937 205.574 194.122 206.505 193.452 cv
207.51 193.269 208.592 193.7 209.712 194.419 cv
212.685 194.876 215.848 196.016 219.094 196.843 cv
220.01 197.075 221.172 197.78 222.026 196.989 cv
222.311 195.942 221.127 195.929 220.466 195.472 cv
218.417 194.05 214.646 191.179 212.388 189.801 cv
211.283 189.188 210.419 190.495 209.311 189.844 cv
209.065 189.703 209.003 189.54 209.076 189.358 cv
209.666 187.837 211.536 185.497 212.85 185.288 cv
cp
ef
32.0615 70.3398 mo
32.166 69.8701 32.9248 69.957 33.3691 69.8325 cv
34.6875 69.4639 36.5254 68.7871 38.0088 68.5664 cv
40.5039 69.2852 42.0898 70.019 43.2393 72.0234 cv
43.8516 73.0923 44.4258 74.8115 43.7891 76.4102 cv
43.6191 76.8389 43.0293 77.293 42.6074 77.9297 cv
41.5234 79.5674 41.2012 80.4268 39.3828 80.9028 cv
38.1533 80.4941 36.4043 80.7041 35.6074 79.4902 cv
36.0088 77.5547 37.9277 78.6914 39.1289 78.8789 cv
40.7139 78.1465 41.7002 77.4956 42.207 76.0947 cv
43.2051 73.3359 39.6045 70.4834 36.9551 71.0977 cv
36.6592 70.6768 37.6475 70.0957 36.7861 69.748 cv
35.7949 69.1426 35.0254 70.291 34.1279 70.4238 cv
33.46 70.5547 32.6865 69.8511 32.0615 70.3398 cv
cp
ef
20.3125 135.212 mo
20.7686 135.55 21.9688 134.897 21.7246 134.178 cv
23.498 133.744 25.3975 134.303 27.0391 132.828 cv
27.5938 132.098 27.0459 130.896 28.1357 130.634 cv
29.2598 130.953 28.9648 132.772 28.7041 133.819 cv
28.2461 135.42 30.166 137.44 28.623 138.627 cv
27.416 138.387 27.8887 137.047 26.7871 136.287 cv
23.4111 134.865 20.5117 137.262 17.1709 136.122 cv
14.7178 136.146 12.3633 136.963 9.85254 136.523 cv
9.51367 137.019 9.09668 136.879 8.73438 137.178 cv
7.56348 138.16 8.20801 139.628 6.81641 139.645 cv
6.1377 138.701 6.73438 137.6 6.77344 136.567 cv
7.10547 135.04 5.75391 133.725 6.89941 132.096 cv
8.04883 133.001 7.4834 133.775 8.39746 134.479 cv
10.0596 135.758 12.0889 134.286 13.8379 134.14 cv
14.0479 134.437 13.6895 134.292 13.543 134.52 cv
14.7275 135.775 15.6436 134.873 16.6221 134.476 cv
17.585 134.872 18.4287 134.31 19.3213 134.138 cv
20.0078 134.452 19.8613 134.87 20.3125 135.212 cv
cp
ef
180.45 161.929 mo
180.344 162.285 180.388 162.624 180.578 162.944 cv
181.193 164.492 182.36 166.08 183.194 167.412 cv
183.828 168.428 184.365 169.278 184.924 170.281 cv
185.731 171.729 186.741 173.088 187.688 174.561 cv
188.895 176.438 189.977 178.363 191.147 180.296 cv
192.275 182.153 193.312 184.402 195.241 185.61 cv
196.385 184.955 196.581 183.081 197.854 181.855 cv
197.772 180.313 197.006 179.112 196.145 177.786 cv
194.727 175.595 193.339 173.632 192.117 171.607 cv
190.92 169.625 189.573 167.163 188.086 165.429 cv
187.771 163.76 186.672 161.949 185.576 160.43 cv
185.149 159.843 185.105 158.959 184.205 159.063 cv
182.845 159.155 181.726 161.153 180.45 161.929 cv
cp
176.782 162.732 mo
177.924 162.709 180.104 161.128 180.007 159.759 cv
178.801 158.979 175.591 161.306 176.782 162.732 cv
cp
173.492 163.829 mo
173.975 164.912 174.868 165.943 174.927 167.076 cv
177.432 168.649 176.702 170.625 178.83 172.243 cv
179.245 173.905 179.755 175.554 181.488 177.05 cv
182.351 179.662 184.527 181.54 185.94 183.86 cv
186.036 184.019 186.071 184.465 186.216 184.685 cv
186.922 185.76 187.554 186.505 188.093 187.361 cv
188.848 188.562 189.376 189.936 190.58 190.818 cv
191.943 190.974 192.58 188.947 193.281 187.74 cv
192.049 185.724 191.651 183.602 189.439 181.71 cv
188.643 179.466 187.818 177.229 185.367 175.193 cv
184.511 173.243 184.08 171.244 181.908 169.458 cv
181.558 167.504 180.032 165.694 178.975 163.828 cv
177.834 164.295 176.726 165.028 175.496 164.777 cv
174.964 164.271 174.911 163.188 173.933 163.259 cv
173.785 163.45 173.639 163.64 173.492 163.829 cv
cp
192.61 131.79 mo
194.757 131.481 193.814 128.447 192.146 128.078 cv
191.106 129.464 191.979 130.612 192.61 131.79 cv
cp
171.382 157.925 mo
171.768 158.791 171.663 159.719 172.396 160.541 cv
174.288 161.075 176.057 160.596 177.623 158.514 cv
176.861 157.24 177.129 155.835 176.441 154.551 cv
176.793 154.163 175.834 153.94 175.64 153.622 cv
175.446 152.561 176.63 151.329 175.745 150.353 cv
175.028 150.564 174.32 150.843 173.701 151.809 cv
173.518 153.26 175.357 154.457 174.061 156.047 cv
173.053 156.337 172.634 155.279 172.159 154.571 cv
171.662 154.694 171.164 154.818 170.748 155.605 cv
169.799 155.789 168.743 155.094 167.859 155.795 cv
168.077 157.556 170.237 157.239 171.382 157.925 cv
cp
162.67 155.419 mo
162.11 155.504 161.558 155.663 161.068 156.305 cv
161.448 157.97 161.886 159.63 163.727 161.113 cv
165.639 166.071 170.046 170.716 171.893 175.685 cv
172.399 176.076 172.905 176.469 173.413 176.864 cv
175.077 180.08 176.191 183.368 179.065 186.437 cv
179.653 188.171 180.771 189.669 181.726 191.243 cv
182.682 192.83 183.512 194.584 185.058 195.968 cv
186.539 196.385 187.768 194.795 189.044 193.582 cv
189.106 192.09 188.569 190.671 186.807 189.406 cv
186.577 188.408 186.449 187.396 185.077 186.538 cv
185.152 184.988 183.135 183.698 182.988 182.175 cv
182.09 181.716 182.239 181.126 181.426 180.657 cv
180.021 177.415 178.019 174.325 176.151 171.38 cv
175.483 170.326 174.807 169.052 173.703 168.258 cv
172.989 166.634 172.262 165.015 171.044 163.45 cv
170.765 162.011 170.289 160.528 169 159.424 cv
168.067 158.627 166.568 158.598 165.667 157.443 cv
164.63 156.258 167.044 154.642 165.687 153.497 cv
164.494 152.64 163.604 154.2 162.67 155.419 cv
cp
187.676 125.212 mo
187.151 125.148 186.7 125.634 186.176 125.572 cv
185.784 126.077 185.389 126.583 184.996 127.09 cv
183.185 127.21 181.677 129.772 179.895 130.127 cv
179.39 132.01 177.206 132.176 176.794 134.114 cv
177.029 134.314 176.869 134.562 177.217 134.746 cv
178.304 134.292 179.604 133.615 180.611 133.121 cv
180.999 132.931 181.608 132.811 181.919 132.615 cv
182.237 132.417 182.36 131.898 182.657 131.667 cv
183.054 131.356 183.315 131.507 183.626 131.201 cv
184.562 130.284 185.11 129.002 185.987 128.164 cv
187.581 126.643 189.545 126.641 190.941 125.315 cv
190.712 124.831 191.296 124.243 190.584 123.819 cv
189.43 122.809 188.545 123.954 187.676 125.212 cv
cp
146.901 177.271 mo
147.547 176.161 147.281 175.168 146.184 174.276 cv
145.865 174.467 145.527 174.51 145.172 174.403 cv
143.245 175.911 145.461 178.108 146.901 177.271 cv
cp
174.728 131.29 mo
175.588 131.634 176.578 130.901 176.771 129.833 cv
176.38 129.597 176.521 129.294 176.16 129.053 cv
175.075 128.585 173.396 130.333 174.728 131.29 cv
cp
170.319 133.04 mo
170.539 133.798 171.77 133.485 172.303 132.451 cv
171.516 131.442 170.337 132.17 170.319 133.04 cv
cp
157.061 151.665 mo
158.339 152.476 158.957 153.372 159.95 154.217 cv
160.627 154.15 161.338 154.344 161.933 153.626 cv
162.876 152.766 161.559 152.188 162.501 151.326 cv
163.109 150.712 163.788 150.655 164.481 150.736 cv
165.682 152.093 166.624 151.408 167.731 152.042 cv
168.327 152.689 168.756 153.353 169.629 153.519 cv
171.533 152.863 172.419 150.029 170.579 148.773 cv
169.758 148.439 168.113 148.798 168.193 147.528 cv
168.889 146.247 169.84 146.979 170.702 147.044 cv
171.39 147.045 171.98 146.302 172.728 146.79 cv
173.153 147.843 174.611 149.334 175.639 148.139 cv
175.906 147.361 175.153 146.715 175.531 145.926 cv
176.509 145.522 177.554 145.627 178.652 146.218 cv
179.53 145.912 180.395 145.522 181.352 145.882 cv
183.023 147.371 184.502 147.318 185.78 145.669 cv
185.401 145.202 185.947 144.62 185.086 144.214 cv
183.714 143.751 182.583 145.206 181.185 144.531 cv
181.018 143.637 180.753 142.758 180.845 141.832 cv
181.375 140.752 180.604 139.066 181.626 138.479 cv
183.256 139.531 181.725 140.979 183.102 142.063 cv
184.104 142.296 184.985 141.58 185.908 141.198 cv
186.909 140.995 188.032 141.75 188.944 140.817 cv
188.994 139.784 187.899 138.892 188.226 137.824 cv
188.555 136.983 188.665 136.168 188.605 135.375 cv
186.402 134.759 186.796 132.148 188.583 131.095 cv
189.228 131.588 188.652 132.75 189.805 132.655 cv
190.742 131.395 190.207 130.321 188.707 129.366 cv
187.521 129.447 186.515 130.999 185.482 132.34 cv
185.276 133.336 186.063 134.208 185.674 135.229 cv
185.037 135.622 184.321 135.369 183.606 135.146 cv
182.167 135.993 180.897 135.186 179.979 136.286 cv
178.729 137.785 180.543 140.457 179.012 142.233 cv
178.134 142.251 177.982 140.98 176.967 140.946 cv
176.241 141.099 175.589 141.816 174.962 142.741 cv
174.183 142.953 172.71 143.201 172.325 142.214 cv
173.441 141.299 175.279 139.688 175.806 138.522 cv
173.912 138.075 170.885 139.82 170.448 142.277 cv
170.79 143.148 172.702 143.823 172.138 144.806 cv
170.752 146.062 168.948 143.971 167.434 144.197 cv
166.355 145.188 166.452 146.033 165.896 146.959 cv
164.759 147.283 164.322 147.842 163.598 149.134 cv
162.89 149.404 162.152 149.46 161.382 149.241 cv
161.206 148.575 161.26 147.884 160.453 147.3 cv
158.824 146.902 156.014 150.097 157.061 151.665 cv
cp
167.284 136.162 mo
167.544 135.952 167.836 136.01 168.063 135.551 cv
167.527 134.904 166.761 135.701 167.284 136.162 cv
cp
167.515 133.907 mo
167.664 133.716 167.81 133.525 167.957 133.337 cv
167.769 133.189 167.577 133.042 167.389 132.894 cv
167.24 133.084 167.094 133.273 166.946 133.465 cv
167.136 133.611 167.325 133.76 167.515 133.907 cv
cp
172.386 127.641 mo
173.4 127.647 174.698 126.404 173.481 125.447 cv
172.322 124.941 171.356 126.949 172.386 127.641 cv
cp
175.612 124.666 mo
176.01 123.817 175.785 123.046 174.978 122.348 cv
173.15 122.298 174.128 125.129 175.612 124.666 cv
cp
170.067 136.5 mo
169.576 137.133 169.083 137.766 168.593 138.398 cv
167.375 138.427 166.6 138.948 165.493 139.644 cv
164.509 140.262 163.797 140.743 163.047 142.005 cv
160.989 142.449 158.839 142.151 157.078 144.981 cv
155.835 145.252 153.312 147.003 154.612 148.546 cv
155.743 148.907 156.659 147.558 157.587 146.289 cv
158.448 145.892 159.318 145.514 160.2 145.275 cv
161.043 145.621 161.867 145.814 162.688 145.991 cv
163.431 144.609 164.349 144.656 165.179 143.965 cv
165.098 143.462 165.767 142.864 166.168 142.301 cv
166.954 141.734 167.826 141.855 168.593 141.139 cv
169.489 139.816 170.28 138.315 171.543 137.343 cv
172.546 136.571 174.21 136.735 174.412 135.613 cv
172.755 134.244 171.552 136.494 170.067 136.5 cv
cp
177.294 116.23 mo
176.655 117.053 176.016 117.875 175.376 118.698 cv
175.292 119.887 175.621 121.622 177.339 122.052 cv
177.576 121.658 177.88 121.799 178.121 121.439 cv
178.923 120.14 177.04 119.175 177.844 117.875 cv
178.381 117.152 179.107 117.938 179.595 116.799 cv
179.697 115.986 179.39 115.226 178.623 114.521 cv
177.771 114.482 177.262 115.483 177.294 116.23 cv
cp
123.475 183.121 mo
122.559 184.697 124.645 185.999 126.11 186.388 cv
126.988 186.102 127.913 186.185 128.727 185.375 cv
129.981 185.372 131.305 185.897 132.311 183.898 cv
132.5 182.729 130.823 181.8 131.213 180.608 cv
131.602 180.102 132.128 179.579 132.057 179.132 cv
131.538 178.854 131.912 178.465 131.254 178.203 cv
130.314 178.151 129.708 179.498 129.294 180.335 cv
128.604 180.313 127.789 179.266 127.143 179.575 cv
126.257 180.429 126.789 181.106 126.236 181.917 cv
125.306 182.234 124.323 182.151 123.475 183.121 cv
cp
161.547 136.881 mo
160.463 136.425 159.412 136.247 158.427 136.587 cv
158.28 136.776 158.132 136.966 157.983 137.157 cv
157.814 138.208 159.084 139.592 160.389 139.94 cv
161.321 139.871 162.364 139.044 163.257 138.208 cv
163.541 137.945 164.236 137.731 164.227 137.746 cv
164.682 137.017 164.57 136.468 164.161 135.868 cv
163.275 136.08 162.437 136.672 161.547 136.881 cv
cp
157.666 133.254 mo
157.899 133.454 157.739 133.703 158.087 133.888 cv
158.88 133.818 159.697 133.965 160.492 133.929 cv
161.196 134.071 161.95 134.614 162.558 134.013 cv
162.007 131.8 158.177 130.856 157.666 133.254 cv
cp
166.521 124.606 mo
167.132 124.456 167.808 124.838 168.441 124.879 cv
169.116 124.813 169.898 125.59 170.509 124.962 cv
171.426 124.613 172.611 122.763 172.532 121.968 cv
172.089 120.462 169.51 118.922 168.249 119.249 cv
166.306 120.592 165.684 123.06 166.521 124.606 cv
cp
126.508 177.255 mo
128.921 178.13 132.73 173.931 129.438 171.919 cv
128.464 171.895 128.386 172.842 127.773 173.671 cv
126.824 173.854 125.882 174.069 124.969 174.536 cv
124.87 174.663 124.771 174.79 124.674 174.915 cv
125.285 175.695 125.885 176.478 126.508 177.255 cv
cp
120.141 178.396 mo
119.159 179.433 118.919 180.378 119.804 181.18 cv
120.728 181.515 121.646 181.098 122.503 180.843 cv
123.359 180.587 124.525 180.521 125.223 179.302 cv
125.929 178.105 123.455 174.913 121.91 176.117 cv
121.351 176.645 122.797 176.921 122.08 177.468 cv
121.481 178.161 120.723 177.569 120.141 178.396 cv
cp
174.066 110.98 mo
170.966 110.494 169.159 115.594 169.767 117.688 cv
171.1 117.837 172.63 119.577 173.924 119.393 cv
174.351 118.597 174.254 117.867 174.49 117.097 cv
173.258 115.909 171.256 113.996 172.783 113.026 cv
174.4 113.252 173.752 115.708 175.377 115.958 cv
177.213 114.627 176.199 112.364 174.066 110.98 cv
cp
167.657 117.267 mo
167.913 117.03 168.22 117.19 168.481 116.993 cv
168.271 116.733 168.327 116.44 167.87 116.213 cv
167.479 116.604 167.358 116.962 167.657 117.267 cv
cp
150.139 137.454 mo
149.939 137.688 149.69 137.526 149.505 137.877 cv
149.742 138.131 149.583 138.437 149.78 138.698 cv
150.677 140.298 151.135 141.956 153.114 143.421 cv
154.48 143.386 155.834 143.255 157.036 141.902 cv
156.97 140.539 156.088 139.279 155.179 138.022 cv
153.502 137.869 151.888 138.196 150.139 137.454 cv
cp
171.894 105.94 mo
172.437 106.844 171.68 107.909 172.759 108.745 cv
174.15 109.055 175.339 109.206 176.725 110.304 cv
177.104 110.605 177.205 111.22 177.568 111.569 cv
178.445 112.413 178.953 112.78 180.059 112.286 cv
179.801 111.519 179.788 110.721 179.087 110.009 cv
178.688 108.917 179.688 107.648 178.663 106.633 cv
177.423 107.001 177.755 108.392 177.271 109.208 cv
176.33 109.359 173.681 107.588 174.53 106.468 cv
175.143 105.882 175.965 106.976 176.512 105.877 cv
175.299 105.302 174.818 104.471 173.897 104.146 cv
173.258 104.719 172.865 105.425 171.894 105.94 cv
cp
121.278 173.799 mo
120.352 173.707 119.471 173.97 118.578 174.137 cv
118.432 174.327 118.284 174.517 118.136 174.707 cv
118.203 175.375 118.558 175.741 119.317 175.929 cv
120.196 175.653 121.006 174.822 121.933 174.917 cv
122.662 174.461 124.185 174.186 123.407 173.019 cv
122.662 172.989 121.942 173.181 121.278 173.799 cv
cp
121.698 171.69 mo
122.294 171.523 123.476 171.514 123.449 170.612 cv
122.759 169.608 121.038 171.135 119.969 171.564 cv
119.87 171.69 119.772 171.815 119.673 171.943 cv
120.468 172.804 121.03 171.825 121.698 171.69 cv
cp
174.886 102.481 mo
175.109 102.807 175.528 102.714 175.983 103.028 cv
176.548 103.419 177.063 104.43 177.607 103.683 cv
177.602 102.198 176.244 100.882 175.709 99.4644 cv
174.28 99.7612 174.132 101.374 174.886 102.481 cv
cp
155.831 133.656 mo
155.745 133.096 156.686 132.407 155.957 131.927 cv
155.93 131.172 154.949 131.01 154.438 130.746 cv
152.915 129.96 152.549 130.059 151.318 130.451 cv
150.588 130.684 150.368 130.539 150.009 130.958 cv
149.248 131.856 149.345 132.826 149.716 134.08 cv
151.9 136.016 153.882 136.332 155.705 135.386 cv
155.978 134.779 155.723 134.242 155.831 133.656 cv
cp
165.402 119.776 mo
165.006 118.043 162.461 116.396 160.931 116.909 cv
159.156 118.127 158.417 120.479 158.824 121.972 cv
160.064 122.766 161.27 123.264 162.451 123.573 cv
163.124 122.233 161.055 121.235 161.986 119.863 cv
163.137 119.549 163.013 120.834 164.075 121.485 cv
164.756 121.38 165.2 120.337 165.402 119.776 cv
cp
168.142 111.551 mo
166.729 110.288 165.373 109.519 164.133 109.653 cv
163.977 109.769 163.839 110.024 163.649 109.886 cv
162.773 110.663 162.854 111.376 162.702 111.89 cv
162.324 113.147 161.477 113.928 161.88 114.905 cv
163.363 115.37 164.896 116.182 166.414 116.908 cv
167.447 115.293 164.099 114.229 165.188 112.607 cv
166.354 112.115 166.859 113.618 167.91 113.808 cv
168.867 112.945 168.161 112.29 168.142 111.551 cv
cp
144.209 129.8 mo
143.866 130.243 143.521 130.687 143.179 131.13 cv
143.211 132.87 147.126 136.182 148.831 135.218 cv
148.642 134.328 147.908 133.505 148.155 132.562 cv
150.021 129.142 146.024 129.036 144.209 129.8 cv
cp
166.409 100.459 mo
166.252 100.573 166.112 100.829 165.924 100.69 cv
165.63 101.07 165.333 101.45 165.039 101.831 cv
165.13 103.761 163.629 105.891 165.082 107.65 cv
165.858 108.369 166.479 107.867 167.233 108.409 cv
168.321 108.834 168.918 109.737 169.659 109.991 cv
170.609 109.36 170.286 107.553 168.562 106.702 cv
168.476 105.679 167.658 104.239 168.855 103.579 cv
169.68 104.228 170.527 105.059 171.239 104.824 cv
173.119 102.006 168.357 100.024 166.409 100.459 cv
cp
170.604 94.2788 mo
170.048 94.4038 169.438 94.0879 168.874 94.1514 cv
168.719 94.2666 168.577 94.5234 168.39 94.3848 cv
168.046 94.8271 167.701 95.271 167.357 95.7148 cv
167.709 96.6387 166.657 97.7422 167.548 98.6035 cv
168.828 99.2559 170.021 99.2002 171.322 100.015 cv
172.721 98.5259 169.499 97.6162 169.993 96.2402 cv
171.454 95.5117 171.754 96.9092 172.945 97.9272 cv
174.514 96.416 171.78 95.4443 170.604 94.2788 cv
cp
169.001 92.4229 mo
168.938 91.9053 167.962 91.0728 167.566 91.918 cv
167.654 92.6406 168.546 92.792 169.001 92.4229 cv
cp
153.379 114.087 mo
154.95 115.215 156.448 115.777 157.999 116.763 cv
158.492 116.604 158.892 115.686 159.41 115.729 cv
159.703 113.979 160.426 112.176 160.464 110.458 cv
158.381 108.874 156.403 108.131 154.58 108.623 cv
153.661 110.511 153.881 112.254 153.379 114.087 cv
cp
156.836 100.629 mo
156.389 102.022 155.663 105.562 156.16 106.198 cv
157.381 107.263 158.503 107.551 159.641 107.99 cv
160.761 108.676 162.28 108.503 162.595 106.935 cv
161.438 105.677 159.204 105.228 159.724 103.182 cv
160.67 102.977 161.831 104.492 162.741 104.003 cv
164.63 100.69 157.668 98.0249 156.836 100.629 cv
cp
165.056 92.4033 mo
166.228 91.4702 165.04 90.0605 164.17 90.8018 cv
164.135 91.3765 164.124 91.9482 165.056 92.4033 cv
cp
160.27 93.8594 mo
160.021 95.2612 159.27 96.7266 160.104 97.9941 cv
161.544 98.5566 163.061 99.7148 164.404 99.5107 cv
165.911 97.7227 165.432 96.1826 165.163 94.6162 cv
163.353 92.9321 161.732 92.7607 160.27 93.8594 cv
cp
120.404 146.319 mo
120.936 145.625 120.495 145.052 119.667 144.528 cv
119.472 144.796 119.253 144.874 119.034 144.95 cv
118.91 145.812 119.521 146.37 120.404 146.319 cv
cp
141.488 123.116 mo
139.797 121.921 138.11 120.777 136.701 121.83 cv
136.273 123.083 136.045 124.313 136.974 125.394 cv
137.755 125.701 138.452 125.32 139.231 125.626 cv
139.427 126.4 138.42 127.328 138.517 128.114 cv
139.506 129.708 141.569 130.279 142.734 128.956 cv
143.167 128.218 142.402 127.628 143.156 126.848 cv
143.764 126.699 144.55 127.946 145.159 127.797 cv
145.84 127.209 145.512 126.378 146.34 126.277 cv
146.951 126.829 146.878 127.468 147.753 127.986 cv
148.568 128.115 149.287 127.471 150.115 127.689 cv
150.702 128.28 151.237 128.442 151.781 128.68 cv
152.415 128.728 152.838 127.091 153.532 127.604 cv
154.321 128.02 153.939 128.581 154.563 129.019 cv
155.522 129.362 156.268 128.027 157.223 128.342 cv
157.164 129.009 157.468 130.242 158.488 130.239 cv
159.79 128.991 157.896 128.142 158.93 126.928 cv
159.182 127.122 159.361 126.731 159.604 126.844 cv
161.024 127.866 159.98 129.195 160.554 130.323 cv
161.835 130.058 163.303 131.285 164.667 131.694 cv
165.244 131.28 165.798 130.692 166.375 130.281 cv
167.921 130.301 169.564 131.107 170.867 129.203 cv
170.451 128.512 170.472 127.767 169.411 127.157 cv
167.857 126.428 167.71 129.177 166.396 129.076 cv
165.6 128.263 166.373 127.252 165.382 126.463 cv
164.651 126.554 164.013 127.371 163.253 127.242 cv
162.249 125.536 160.306 125.913 158.824 124.714 cv
157.835 124.568 157.083 126.313 156.062 125.917 cv
154.04 124.365 152.08 123.327 150.367 124.23 cv
149.743 125.063 149.789 125.797 148.808 125.454 cv
148.129 123.615 145.824 122.898 144.461 123.6 cv
143.563 124.487 143.641 125.85 142.459 125.393 cv
142.198 124.625 142.11 123.836 141.488 123.116 cv
cp
160.649 91.4116 mo
161.252 91.2988 162.436 91.6309 162.674 91.1606 cv
163.011 90.4912 161.503 89.0918 160.88 89.1567 cv
159.89 89.6099 159.689 90.7158 160.649 91.4116 cv
cp
119.265 142.692 mo
119.78 142.699 120.316 142.881 120.763 142.333 cv
121.289 141.469 121.137 140.687 120.128 140.014 cv
119.973 140.13 119.799 140.11 119.602 139.908 cv
118.539 140.471 117.896 141.924 119.265 142.692 cv
cp
158.435 91.5195 mo
159.139 90.6885 158.712 89.999 157.991 89.3462 cv
156.349 89.2549 156.948 91.5322 158.435 91.5195 cv
cp
147.157 104.07 mo
148.604 105.566 151.576 108.704 153.168 106.916 cv
153.763 105.222 149.542 103.284 151.182 102.023 cv
152.123 102.69 153.125 103.835 153.947 103.563 cv
154.212 102.387 154.996 101.146 154.199 100.104 cv
152.44 99.2979 150.754 99.0566 149.157 99.5356 cv
147.787 101.136 147.098 102.648 147.157 104.07 cv
cp
151.791 89.0957 mo
153.118 89.6602 154.421 90.0205 155.587 89.3066 cv
155.795 86.502 149.838 86.166 151.791 89.0957 cv
cp
135.306 105.213 mo
136.035 106.038 136.596 105.506 137.265 105.824 cv
137.767 106.178 138.27 106.548 138.657 105.992 cv
139.339 104.878 137.641 104.063 136.927 103.124 cv
135.859 103.089 135.553 104.397 135.306 105.213 cv
cp
97.5664 148.668 mo
96.9453 148.981 95.6943 149.146 95.71 150.271 cv
97.0156 151.569 97.9902 150.236 99.2119 150.86 cv
99.2295 151.736 97.6875 152.046 98.1152 153.053 cv
100.032 154.209 101.703 153.423 103.451 153.242 cv
105.331 151.635 104.454 149.735 106.36 149.107 cv
106.31 148.428 106.622 147.703 105.769 147.125 cv
104.607 146.776 104.82 149.336 103.533 148.433 cv
103.31 147.547 104.246 146.516 103.533 145.691 cv
102.378 145.587 101.431 147.139 100.243 146.789 cv
99.4668 146.055 98.7959 146.171 98.1777 146.706 cv
97.6836 147.396 98.0605 147.977 97.5664 148.668 cv
cp
147.172 86.418 mo
146.143 85.9614 145.243 86.5278 144.281 86.6099 cv
142.288 89.9658 147.97 90.7939 149.091 89.4346 cv
148.031 88.7026 146.489 88.7603 147.107 87.2842 cv
147.973 86.877 149.059 88.2495 149.852 87.2817 cv
149.445 86.1079 147.926 86.0029 147.172 86.418 cv
cp
140.402 88.4658 mo
140.136 89.4692 141.185 90.3101 140.592 91.3564 cv
139.683 92.3521 138.866 92.8296 139.201 93.9297 cv
140.086 95.124 141.792 93.6226 142.323 94.2227 cv
142.756 94.7095 142.021 95.9121 142.092 96.4805 cv
142.66 97.1514 142.956 97.8574 142.535 98.6523 cv
141.435 99.4902 140.327 99.4023 139.752 101.058 cv
139.447 100.892 139.189 101.12 138.888 100.994 cv
137.962 100.481 138.104 99.835 138.149 99.2021 cv
138.944 98.7197 139.812 98.7881 140.573 98.042 cv
140.643 97.0918 140.187 95.7759 138.887 95.5117 cv
137.099 96.0669 136.447 98.707 136.208 100.13 cv
137.69 101.6 138.819 103.115 140.027 104.62 cv
140.172 105.763 139.68 108.882 137.795 108.669 cv
137.469 108.21 137.285 107.36 136.611 107.447 cv
134.882 108.125 135.977 109.77 135.495 110.843 cv
133.011 113.041 134.194 114.776 136.023 116.432 cv
135.589 117.229 135.582 117.974 135.792 118.689 cv
137.132 119.797 138.297 119.536 139.526 119.763 cv
139.972 119.091 139.385 117.981 140.476 117.759 cv
141.485 118.49 140.998 119.406 142.31 120.1 cv
142.943 120.148 143.367 118.509 144.06 119.024 cv
144.706 119.628 144.243 120.371 145.324 120.923 cv
146.565 121.239 147.793 121.471 149.06 121.995 cv
149.849 121.281 148.913 120.215 150.008 119.991 cv
150.718 121.268 151.999 122.258 153.255 121.3 cv
153.456 120.531 152.4 119.921 153.486 119.042 cv
155.567 119.628 154.38 122.883 156.44 123.469 cv
157.41 123.262 156.908 122.142 157.052 121.509 cv
156.778 120.743 157.251 119.885 157.094 119.105 cv
155.7 117.853 154.732 116.816 153.148 116.342 cv
152.19 116.448 151.355 117.549 150.346 117.208 cv
148.823 116.01 147.314 114.904 145.914 114.68 cv
145.22 115.057 144.606 116.092 143.911 116.471 cv
142.445 116.396 140.698 115.862 139.524 114.28 cv
138.682 114.401 137.965 115.513 137.057 115.104 cv
136.823 114.276 136.948 113.403 137.246 112.509 cv
137.169 111.733 137.076 110.476 138.194 110.504 cv
138.665 111.132 138.437 111.846 139.124 112.444 cv
140.266 112.451 141.548 113.552 142.751 114.047 cv
143.848 113.012 142.514 111.899 143.952 111.325 cv
145.661 113.117 147.138 113.039 148.634 113.139 cv
149.395 113.729 150.152 114.319 150.913 114.91 cv
151.895 114.458 151.285 113.453 151.482 112.61 cv
151.921 111.643 151.856 110.735 151.817 109.826 cv
150.12 108.565 148.497 107.939 146.819 106.854 cv
145.347 107.358 145.883 109.926 144.459 109.892 cv
142.754 107.705 143.656 105.194 141.546 103.06 cv
141.687 102.426 141.187 101.306 142.156 101.099 cv
143.059 102 143.471 103.729 145.089 103.986 cv
145.945 103.022 145.628 102.206 145.951 101.309 cv
145.508 100.564 144.581 99.8813 144.981 99.0303 cv
145.643 98.3706 146.509 99.3574 147.195 98.9243 cv
148.611 96.7485 144.311 95.2881 145.95 93.084 cv
146.644 93.9502 147.753 94.5566 148.461 95.3394 cv
148.933 95.8623 148.978 96.3984 149.496 96.752 cv
150.842 97.6724 152.155 97.4072 153.565 97.7842 cv
154.566 98.0229 155.634 98.791 156.413 97.2554 cv
155.705 96.292 152.874 95.2402 153.732 93.6514 cv
154.653 93.418 154.633 94.167 155.588 94.7891 cv
156.336 94.8174 157.145 95.3481 157.804 94.6821 cv
157.898 92.4312 153.476 90.0005 151.855 90.9722 cv
150.847 91.8408 151.256 92.5332 150.611 93.3555 cv
150.306 93.1904 150.048 93.4199 149.746 93.2939 cv
149.201 92.6758 149.196 91.9912 148.144 91.437 cv
146.975 91.2319 145.831 91.2158 144.728 91.522 cv
144.094 92.4043 143.467 93.333 142.641 92.6406 cv
141.447 91.1914 143.681 89.3115 142.047 87.917 cv
141.484 87.9863 140.893 87.8169 140.402 88.4658 cv
cp
97.0791 140.675 mo
95.5811 142.246 97.8008 144.028 99.4619 144.66 cv
101.371 144.38 104.741 141.201 102.055 139.366 cv
101.012 139.235 100.051 139.773 99.1885 141.096 cv
98.5205 141.242 97.7461 140.529 97.0791 140.675 cv
cp
93.9385 144.324 mo
92.665 144.351 90.5186 146.146 92.1045 147.467 cv
93.8857 147.563 95.6807 147.748 97.2275 145.967 cv
97.2217 144.84 96.6768 143.208 95.1182 142.805 cv
94.3262 143.188 94.5977 143.564 93.9385 144.324 cv
cp
94.4629 138.945 mo
93.624 139.283 92.8525 139.748 91.9971 139.77 cv
91.8486 139.958 91.7012 140.148 91.5537 140.339 cv
91.9287 140.634 91.3926 141.044 92.0176 141.308 cv
93.6777 141.888 96.5947 140.678 96.7822 138.313 cv
95.9678 137.845 95.2051 138.647 94.4629 138.945 cv
cp
95.8545 136.373 mo
96.3936 136.569 96.8652 136.243 97.3516 136.013 cv
97.1699 135.809 97.2207 135.574 97.2666 135.339 cv
96.8574 134.799 96.5908 135.419 96.2139 135.128 cv
95.8164 135.578 96.0547 135.948 95.8545 136.373 cv
95.1572 135.867 93.4014 136.651 93.9561 137.639 cv
94.751 137.736 95.6836 137.441 95.8545 136.373 cv
cp
82.0205 138.106 mo
81.7324 138.859 81.3555 139.769 81.4521 140.405 cv
81.877 141.323 82.5361 142.21 83.3291 143.082 cv
83.5879 143.906 83.6113 144.761 83.4775 145.635 cv
84.6816 146.912 85.0908 148.288 85.5244 149.662 cv
85.3076 150.546 84.6396 151.486 85.335 152.256 cv
85.4678 153.173 86.374 153.162 87.0449 153.583 cv
87.7412 154.024 88.5029 154.785 89.2803 155.017 cv
90.4346 155.364 91.626 154.726 92.5479 155.122 cv
92.6172 155.742 92.7051 156.36 93.626 156.872 cv
95.958 156.922 96.7412 153.669 94.7627 152.273 cv
93.916 151.449 93.3203 152.615 92.5059 152.044 cv
91.9512 151.37 93.3857 150.448 92.4004 149.828 cv
91.4961 149.46 90.8086 150.808 89.8486 149.978 cv
89.8359 149.399 90.2822 148.651 90.2686 147.868 cv
90.2607 147.399 89.876 146.795 89.7197 146.224 cv
89.4971 145.399 89.6514 145.061 89.1719 144.578 cv
88.25 143.653 87.2432 143.755 85.9229 143.272 cv
85.0557 141.89 85.0928 141.021 86.0273 140.001 cv
86.9863 138.959 88.5127 139.708 89.3184 138.906 cv
89.4199 137.978 89.6289 137.038 90.665 135.994 cv
92.0225 135.41 93.4756 135.617 94.6943 133.948 cv
95.8545 133.634 97.0557 133.648 98.2158 133.334 cv
98.9766 132.121 99.8154 131.522 100.789 131.984 cv
102.261 133.398 100.7 135.193 101.717 136.666 cv
102.741 137.076 103.779 137.616 104.818 138.164 cv
105.888 138.209 106.933 136.921 107.961 137.255 cv
108.493 139.217 104.376 140.7 106.042 142.465 cv
107.529 142.746 108.548 141.325 109.775 140.797 cv
111.145 140.209 112.523 140.349 113.781 139.953 cv
115.599 138.034 117.614 137.727 119.602 137.167 cv
119.994 136.661 120.388 136.155 120.781 135.647 cv
121.56 135.482 122.261 134.685 123.06 134.678 cv
124.367 132.815 125.979 133.376 127.298 131.576 cv
127.182 131.42 127.201 131.246 127.402 131.049 cv
127.312 130.204 126.711 129.423 125.567 128.708 cv
124.875 126.739 124.157 124.773 122.106 122.974 cv
121.635 121.148 120.657 119.385 118.879 117.724 cv
118.39 116.299 117.849 114.883 116.305 113.589 cv
115.8 111.997 114.961 110.445 113.499 108.972 cv
112.351 108.817 111.653 109.627 110.735 110.176 cv
109.188 111.101 107.396 111.852 105.972 113.171 cv
105.601 114.622 104.823 115.844 103.928 117.37 cv
103.428 118.216 103.042 119.055 102.493 119.604 cv
101.387 120.712 99.8809 120.755 98.9932 121.756 cv
97.6924 121.878 96.3623 121.739 95.0928 122.075 cv
94.6982 122.58 94.3037 123.087 93.9111 123.594 cv
93.5645 124.722 95.2725 125.593 94.4814 126.777 cv
93.5996 127.525 92.5752 127.005 91.4863 127.495 cv
91.2461 127.603 90.959 128.039 90.5586 128.297 cv
90.1611 128.554 89.7266 128.694 89.4404 128.952 cv
88.46 129.836 87.7246 131.206 86.5947 132.221 cv
86.2266 133.353 86.3516 134.422 86.1533 135.532 cv
84.4824 135.609 82.7344 136.237 82.0205 138.106 cv
cp
96.0391 114.588 mo
95.8281 114.329 95.8867 114.035 95.4268 113.807 cv
95.2783 113.998 95.1318 114.188 94.9834 114.378 cv
95.375 114.768 95.7334 114.885 96.0391 114.588 cv
cp
97.4492 110.812 mo
97.5771 110.91 97.7031 111.009 97.8301 111.106 cv
98.2979 111.064 98.9375 110.243 98.8623 109.778 cv
98.0664 108.736 96.583 110.026 97.4492 110.812 cv
cp
93.5908 111.467 mo
95.2959 113.054 96.5723 110.479 95.5518 109.337 cv
94.3662 109.083 93.917 110.487 93.5908 111.467 cv
cp
149.711 42.4043 mo
148.373 43.311 146.471 43.8828 145.473 45.5068 cv
143.376 46.0957 141.359 47.3096 139.444 49.3457 cv
136.32 50.4209 133.457 53.5439 130.313 54.4312 cv
128.467 56.564 126.372 56.7207 124.512 58.7568 cv
124.75 59.0117 124.593 59.3164 124.789 59.5791 cv
125.612 60.8223 126.197 61.8809 126.94 63.0781 cv
127.154 63.4243 127.352 63.5215 127.553 63.8584 cv
127.705 64.1187 127.7 64.4785 127.826 64.6807 cv
128.193 65.2715 128.866 65.8027 129.24 66.3892 cv
130.647 68.5977 131.632 71.2046 133.691 73.2002 cv
133.897 74.2031 134.59 75.1421 134.746 76.1523 cv
136.289 77.3647 136.838 78.9214 137.659 80.2417 cv
138.704 81.9248 140.042 84.2666 141.665 84.8809 cv
141.901 84.9707 142.233 85.2119 142.573 85.2832 cv
144.363 85.6484 146.333 84.2383 148.648 84.52 cv
149.503 84.624 150.048 85.1255 150.798 85.2803 cv
151.522 85.4258 152.289 85.1016 153.014 85.1729 cv
153.84 85.2534 154.527 85.5576 155.313 85.7422 cv
156.526 87.501 157.607 86.5186 159.172 87.8281 cv
161.664 87.6514 164.099 87.0396 166.934 89.5967 cv
168.142 89.6616 169.322 89.5195 170.624 90.3359 cv
171.268 90.9966 171.215 91.7456 172.079 92.3799 cv
173.129 92.5459 174.261 93.3794 175.413 94.3613 cv
175.895 95.1572 175.827 96.0225 176.573 96.7866 cv
180.916 99.9551 179.298 103.87 181.826 107.267 cv
181.783 108.128 181.879 108.973 181.638 109.859 cv
182.193 110.818 182.517 111.807 182.693 112.813 cv
181.633 114.488 182.406 115.933 182.083 117.516 cv
180.577 119.245 180.707 121.643 179.574 123.485 cv
178.949 124.504 177.916 125.199 177.362 126.332 cv
178.985 129.24 181.205 126.356 182.95 125.804 cv
184.123 124.223 185.418 123.608 186.617 122.259 cv
187.242 122.013 188.043 121.894 188.94 121.626 cv
189.893 121.341 190.45 120.695 191.448 121.14 cv
193.41 122.017 193.232 123.808 193.052 125.737 cv
193.683 126.216 194.246 126.151 194.908 126.876 cv
195.263 128.379 195.804 129.695 195.605 131.072 cv
195.477 131.973 195.521 132.58 195.184 133.182 cv
195.002 133.506 194.646 133.991 194.298 134.321 cv
193.404 135.169 191.81 134.825 191.092 136.094 cv
190.922 136.397 190.563 137.205 191.158 137.969 cv
191.318 139.153 192.703 138.517 193.392 139.403 cv
193.383 140.089 193.206 140.797 193.309 141.47 cv
192.333 141.875 191.323 142.019 190.483 143.538 cv
189.764 143.724 189.046 143.909 188.396 144.655 cv
188.055 145.67 189.622 146.443 188.925 147.501 cv
188.377 148.151 187.723 147.929 187.175 148.579 cv
186.754 149.327 187.071 149.86 186.183 150.244 cv
184.938 150.789 183.509 149.869 182.196 149.888 cv
181.38 149.294 181.406 148.719 180.491 148.559 cv
179.184 148.527 178.076 150.415 177.791 151.639 cv
177.957 152.532 178.356 153.396 178.805 154.253 cv
177.567 156.117 180.568 158.498 182.031 156.763 cv
182.297 155.378 181.808 153.822 181.522 152.713 cv
181.421 152.307 180.801 151.767 181.355 151.364 cv
183.114 151.066 183.462 152.746 184.583 153.873 cv
185.137 153.746 185.749 154.063 186.311 153.999 cv
187.591 153.638 187.195 151.987 188.082 151.722 cv
189.602 151.986 191 151.313 192.342 150.158 cv
192.498 149.282 192.037 148.484 192.194 147.606 cv
191.893 146.634 190.517 145.538 191.095 144.317 cv
191.487 143.493 192.204 142.9 193.331 143.009 cv
194.083 144.216 193.5 145.473 193.987 146.868 cv
194.536 148.451 196.633 149.93 195.632 151.803 cv
193.958 152.571 192.354 153.907 190.592 153.977 cv
189.196 155.599 187.648 155.999 186.207 157.269 cv
186.403 158.548 187.117 159.727 187.684 160.852 cv
188.303 162.074 188.738 163.497 190.028 164.5 cv
190.542 166.55 192.539 168.412 193.339 170.426 cv
194.232 170.941 194.487 171.538 195.09 172.091 cv
195.257 172.868 195.674 173.616 195.723 174.408 cv
197.241 175.556 197.76 178.193 199.795 178.184 cv
200.884 177.247 200.12 176.545 200.511 175.695 cv
201.476 174.719 200.889 173.935 201.375 173.017 cv
201.815 172.446 202.26 171.878 202.703 171.309 cv
202.926 170.194 202.921 169.11 203.144 167.998 cv
204.197 166.321 203.883 164.819 204.767 163.168 cv
204.494 161.268 205.329 159.282 205.292 157.79 cv
205.264 156.528 205.177 155.516 205.206 154.373 cv
205.229 153.584 205.406 152.835 205.44 152.116 cv
205.479 151.318 205.167 150.496 205.48 149.714 cv
204.891 146.644 204.302 143.575 204.149 140.454 cv
203.43 139.474 203.371 138.278 203.051 137.165 cv
202.727 136.042 202.239 134.964 201.953 133.875 cv
201.814 133.343 201.896 132.741 201.742 132.188 cv
201.243 130.395 200.354 129.063 199.084 127.381 cv
198.601 125.499 197.958 123.637 196.678 121.854 cv
196.48 121.026 196.389 120.179 196.193 119.347 cv
195.026 118.18 194.517 116.928 194.187 115.656 cv
193.247 115.169 193.086 114.067 192.691 113.273 cv
191.008 109.917 189.379 106.273 187.669 103.278 cv
187.146 102.364 186.513 101.635 185.981 100.747 cv
184.992 99.1025 184.354 97.2432 182.794 95.8354 cv
182.174 93.2285 180.52 90.751 179.27 88.2231 cv
177.676 85.7393 176.619 83.1855 174.733 80.7383 cv
174.749 79.8789 174.003 79.1167 173.91 78.2715 cv
173.045 77.8086 172.968 77.2461 172.349 76.7529 cv
171.644 74.3594 170.342 72.0996 169.249 69.7725 cv
168.153 67.4478 166.943 65.1387 166.146 62.7939 cv
164.814 61.3042 164.13 59.7334 163.676 58.1338 cv
162.147 56.7827 162.294 55.2217 160.913 53.853 cv
160.339 51.5249 159.606 49.2188 157.661 47.0635 cv
157.608 46.4409 157.317 45.8506 157.261 45.2275 cv
155.228 43.6553 155.452 41.7998 153.887 40.168 cv
152.197 39.9409 151.063 41.4873 149.711 42.4043 cv
cp
118.928 62.0264 mo
118.843 62.3223 118.795 62.6143 118.864 62.8906 cv
118.873 63.9629 119.86 64.9824 120.445 65.9482 cv
123.082 70.2861 125.96 74.877 128.59 78.9785 cv
128.913 79.4849 128.987 79.9502 129.285 80.4346 cv
129.892 81.4126 130.761 82.25 131.354 83.2607 cv
131.962 84.2983 132.105 85.6699 133.273 86.2754 cv
134.077 88.2207 134.926 91.6353 137.788 92.2217 cv
139.484 90.6943 139.103 88.0996 139.433 86.188 cv
138.396 84.6738 137.602 83.0908 136.624 81.5718 cv
136.369 81.1719 135.854 80.8809 135.634 80.4951 cv
135.413 80.1094 135.509 79.665 135.317 79.3369 cv
135.078 78.9307 134.604 78.6953 134.325 78.2612 cv
134.107 77.9165 134.048 77.2715 133.819 76.9531 cv
133.284 76.2109 132.539 75.7417 132.025 74.9492 cv
131.458 72.7949 129.361 70.8301 129.008 68.6465 cv
128.112 68.1299 127.858 67.5332 127.26 66.979 cv
126.862 65.6504 125.863 64.667 125.105 63.48 cv
124.358 62.3115 123.857 60.8521 122.764 59.832 cv
121.392 59.834 120.196 61.2192 118.928 62.0264 cv
cp
113.214 67.0249 mo
114.241 69.2578 115.793 71.2813 117.097 73.3936 cv
119.806 77.791 122.399 82.1152 125.05 86.2764 cv
126.397 88.3994 127.886 90.5303 128.782 92.8359 cv
132.121 95.3555 131.181 98.9512 134.564 100.678 cv
135.594 100.22 134.98 99.2158 135.47 98.3379 cv
135.604 97.4072 136.312 96.4043 136.145 95.5098 cv
135.092 93.5156 134.434 91.5854 132.537 89.9653 cv
131.572 86.9463 128.986 84.1279 127.494 81.1729 cv
125.652 78.2627 123.612 75.377 122.451 72.3799 cv
120.823 71.5 121.165 70.3701 119.857 69.4482 cv
119.512 67.5684 118.391 65.0049 115.912 63.9458 cv
114.852 64.2354 113.136 65.6836 113.214 67.0249 cv
cp
107.645 69.0952 mo
107.563 69.3916 107.514 69.6816 107.581 69.9595 cv
108.284 72.4414 110.874 74.6875 111.4 77.1924 cv
111.843 77.5366 112.289 77.8804 112.729 78.2246 cv
113.554 81.0322 115.409 83.6035 116.972 86.0898 cv
117.536 86.9888 118.278 87.8643 118.851 88.7676 cv
119.098 89.1602 119.107 89.71 119.356 90.0752 cv
119.641 90.4951 120.241 90.8276 120.538 91.2988 cv
120.789 91.6973 120.817 92.189 121.043 92.6055 cv
122.377 95.0723 124.306 96.8008 124.967 99.312 cv
126.455 100.724 127.249 102.224 127.585 103.779 cv
129.633 105.18 129.711 106.828 131.066 108.314 cv
131.552 109.11 131.834 110.652 133.091 110.802 cv
134.47 110.049 134.09 108.25 134.165 107.069 cv
134.167 107.052 134.127 106.776 134.124 106.731 cv
133.988 105.409 134.765 104.115 134.185 103.125 cv
133.522 102.4 132.961 102.464 132.329 101.987 cv
131.557 100.199 130.127 98.4917 129.776 96.6523 cv
127.965 94.3105 126.503 91.7119 124.901 89.2085 cv
123.274 86.6626 121.535 84.1758 120.702 81.6816 cv
119.461 81.0283 119.024 79.7773 118.677 79.1943 cv
118.115 78.2451 117.948 77.4648 117.518 76.7686 cv
117.12 76.125 116.4 75.5742 115.914 74.9131 cv
115.154 73.8789 114.328 72.4644 113.952 71.5601 cv
113.354 70.1201 112.71 68.4619 111.039 67.4697 cv
109.853 67.5581 108.7 67.9404 107.645 69.0952 cv
cp
102.079 73.9038 mo
102.063 74.7593 102.663 75.7305 103.281 76.668 cv
103.574 77.1064 104.146 77.4233 104.463 77.8887 cv
104.789 78.3662 104.885 78.9097 105.159 79.3452 cv
106.302 81.1519 107.618 83.0361 108.578 84.7422 cv
109.06 85.6016 109.371 86.4614 109.93 87.3145 cv
110.51 88.207 111.233 89.1182 111.807 89.9932 cv
113.022 91.8525 113.896 93.6797 114.887 95.4326 cv
115.688 96.8496 116.661 98.0469 117.419 99.2295 cv
117.689 99.6514 117.866 100.278 118.114 100.685 cv
118.68 101.608 119.405 102.409 119.992 103.362 cv
120.532 104.234 120.994 105.224 121.532 106.082 cv
123.842 109.756 126.294 113.187 128.03 116.919 cv
127.782 117.407 128.906 117.724 129.212 118.144 cv
129.725 120.39 131.351 122.148 132.526 124.067 cv
133.522 125.698 134.937 127.839 135.753 129.319 cv
136.407 130.502 137.292 131.723 138.096 132.965 cv
139.683 135.42 141.262 138.312 142.631 140.451 cv
143.019 141.058 143.495 141.417 143.855 142.01 cv
144.137 142.474 144.262 142.991 144.553 143.465 cv
145.245 144.599 145.765 145.481 146.283 146.333 cv
146.603 146.859 147.166 147.355 147.506 147.894 cv
147.803 148.363 147.89 148.862 148.2 149.35 cv
148.551 149.892 149.066 150.333 149.426 150.909 cv
150.307 152.322 151.283 154.194 152.042 155.379 cv
152.745 156.479 153.271 157.42 153.772 158.247 cv
154.091 158.772 154.655 159.271 154.995 159.807 cv
156.201 161.714 157.551 163.724 158.16 165.922 cv
158.887 166.574 159.226 167.273 159.953 167.926 cv
161.171 171.713 164.749 175.207 166.642 178.909 cv
167.215 180.944 168.944 182.47 170.061 184.307 cv
170.284 184.681 170.366 185.249 170.567 185.615 cv
171.458 187.24 172.733 188.359 173.33 189.897 cv
173.398 190.459 174.327 190.914 174.891 191.415 cv
175.434 193.985 177.338 196.491 178.712 198.646 cv
179.257 199.507 179.581 200.479 180.546 200.988 cv
181.53 200.75 183.133 199.331 183.435 198.056 cv
183.224 196.538 182.134 195.133 181.008 193.733 cv
180.372 192.303 179.17 190.735 178.626 189.747 cv
177.482 187.682 176.223 185.755 175.164 184.012 cv
174.5 182.92 173.513 181.97 173.54 180.617 cv
172.297 179.744 172.5 178.691 171.133 177.834 cv
170.308 174.756 167.826 172.231 166.175 169.715 cv
165.462 168.629 164.879 167.494 164.402 166.51 cv
163.712 165.076 162.946 163.969 162.019 162.526 cv
160.463 160.106 159.022 157.882 158.053 155.482 cv
157.326 154.707 156.73 154.974 156.007 154.198 cv
155.35 153.08 155.214 151.897 154.382 150.803 cv
153.592 149.988 152.93 150.153 152.188 149.707 cv
152.327 148.339 152.764 146.965 152.017 145.616 cv
151.541 144.752 150.46 144.219 149.844 143.317 cv
149.79 143.235 149.824 142.76 149.761 142.643 cv
149.565 142.283 149.271 142.152 149.148 141.862 cv
148.898 141.277 148.898 140.77 148.601 140.216 cv
147.921 138.966 146.951 138.161 146.491 137.054 cv
145.792 136.377 144.87 136.428 144.107 135.812 cv
143.214 135.09 142.821 133.885 141.892 133.175 cv
141.156 132.614 140.757 132.823 140.458 132.669 cv
138.277 131.557 138.125 130.208 137.399 128.77 cv
136.919 127.819 136.168 126.86 135.858 126.049 cv
135.775 125.835 135.998 125.409 135.921 125.184 cv
135.815 124.862 135.388 124.724 135.309 124.405 cv
135.046 123.329 135.371 122.191 135.268 121.324 cv
134.272 120.304 134.165 119.263 133.873 118.415 cv
133.741 118.031 133.492 117.747 133.409 117.445 cv
133.074 116.235 133.194 114.907 132.606 113.775 cv
132.048 112.7 131.005 111.798 129.821 110.697 cv
128.606 108.107 126.706 105.604 125.096 103.064 cv
124.027 100.4 122.391 97.8057 120.517 95.2422 cv
119.353 93.335 118.163 91.2725 117.057 89.5059 cv
116.855 89.1846 116.812 88.9258 116.593 88.5352 cv
116.424 88.2349 115.975 87.9175 115.792 87.6084 cv
115.046 86.3428 114.385 84.9985 113.598 83.7715 cv
112.765 82.4746 111.598 81.3271 111.551 79.7432 cv
108.341 76.9473 107.841 73.8115 105.307 70.9302 cv
104.218 71.1709 101.899 72.1709 102.079 73.9038 cv
cp
96.7236 77.6611 mo
96.707 78.7002 97.8623 79.6563 98.4531 80.5273 cv
99.4189 81.9507 100.236 83.418 101.028 84.6602 cv
101.363 85.1865 101.436 85.6582 101.724 86.1152 cv
102.352 87.1123 103.17 87.9619 103.792 88.9409 cv
104.931 90.73 106.091 92.6387 107.062 94.5283 cv
108.088 96.5234 109.154 98.2861 110.332 100.117 cv
113.91 105.677 117.372 111.346 120.819 116.795 cv
121.935 118.561 123.204 120.361 123.753 122.424 cv
124.258 122.818 124.766 123.211 125.271 123.605 cv
125.578 124.767 125.73 125.946 126.896 127 cv
128.153 129.702 130.206 132.171 131.621 134.635 cv
132.144 135.542 132.345 136.651 133.163 137.354 cv
133.509 138.399 134.021 138.984 134.66 139.736 cv
134.913 140.033 134.912 140.395 135.123 140.706 cv
137.603 144.35 139.808 147.691 141.917 151.163 cv
141.985 151.727 142.913 152.181 143.479 152.683 cv
144.258 155.31 145.848 157.545 147.299 159.915 cv
148.758 162.303 150.169 164.785 151.645 167.251 cv
153.388 170.166 155.535 173.461 157.216 176.151 cv
158.867 178.802 159.888 181.366 162.427 183.552 cv
163.243 184.992 163.526 186.496 165.189 187.831 cv
165.346 189.476 166.317 190.772 167.278 192.196 cv
167.334 192.281 167.284 192.759 167.363 192.871 cv
167.54 193.12 167.957 193.207 168.123 193.462 cv
168.615 194.222 168.82 195.104 169.284 195.888 cv
169.536 196.315 169.957 196.485 170.274 196.961 cv
171.024 198.091 171.699 199.641 172.47 200.8 cv
172.817 201.326 173.293 201.839 174.031 202.318 cv
174.114 202.841 174.343 203.8 175.063 203.73 cv
176.285 203.442 177.467 202.841 178.648 202.254 cv
178.721 201.64 178.097 201.459 177.806 200.989 cv
177.555 200.586 177.531 200.092 177.3 199.682 cv
175.752 196.943 173.593 194.378 172.677 191.52 cv
171.558 191.106 171.244 189.642 171.031 189.326 cv
170.729 188.879 170.298 188.64 170.041 188.252 cv
169.809 187.904 169.735 187.298 169.534 186.945 cv
168.621 185.349 167.575 184.021 167.065 182.285 cv
166.142 181.706 165.344 180.639 165.082 180.134 cv
164.74 179.474 164.435 178.704 164.154 178.194 cv
162.723 175.612 160.888 173.618 159.659 171.045 cv
159.333 169.945 158.118 168.954 157.886 167.841 cv
153.789 161.564 149.932 155.081 145.903 148.78 cv
142.83 143.972 139.761 139.131 136.915 134.485 cv
136.884 134.433 137.042 134.038 137.021 133.956 cv
136.811 133.189 135.824 132.751 135.417 132.102 cv
134.901 131.283 134.721 130.25 134.067 129.53 cv
131.902 126.773 130.188 123.625 128.537 120.968 cv
127.244 118.883 125.659 117.147 125.417 115.19 cv
124.679 114.712 124.204 114.201 123.854 113.673 cv
122.894 111.223 121.629 108.812 119.36 106.525 cv
118.988 104.709 117.763 103.236 116.703 101.718 cv
116.359 101.227 115.956 100.334 115.816 100.116 cv
114.07 97.3765 112.32 94.7314 110.71 92.186 cv
110.358 91.6299 110.141 91.0923 109.823 90.5835 cv
107.691 87.167 105.608 84.1758 103.979 80.8633 cv
102.002 78.9414 101.714 76.8066 99.4648 74.917 cv
98.5029 75.0571 96.4639 76.2529 96.7236 77.6611 cv
cp
46.6299 129.174 mo
46.2822 128.817 46.6455 128.373 46.6514 127.973 cv
46.2539 127.538 45.9697 127.999 45.5547 127.424 cv
45.0117 128.423 45.873 129.611 46.6299 129.174 cv
cp
190.049 101.781 mo
190.254 101.594 190.323 101.825 190.24 101.928 cv
190.618 102.796 191.041 103.655 191.931 104.459 cv
192.535 106.039 193.384 107.589 194.06 109.16 cv
193.613 109.902 193.727 110.573 193.974 111.228 cv
194.477 111.582 194.98 111.95 195.367 111.396 cv
195.988 113.088 197.366 114.688 197.543 116.434 cv
198.336 117.021 199.115 117.609 199.145 118.291 cv
199.796 118.835 198.981 118.607 198.934 119.346 cv
199.082 119.727 199.553 120.068 198.913 120.547 cv
199.646 121.421 200.22 122.248 201.234 122.655 cv
201.941 124.624 202.773 126.577 204.02 128.476 cv
204.297 130.497 205.17 132.444 205.791 134.422 cv
205.729 134.961 204.869 135.25 205.139 136.046 cv
205.536 136.682 205.902 137.32 206.741 137.9 cv
207.109 139.455 206.9 141.081 207.333 142.625 cv
207.034 142.969 206.604 142.27 206.322 142.753 cv
206.547 143.582 206.547 144.437 207.819 145.136 cv
207.988 146.486 208.513 147.789 207.99 149.228 cv
208.253 152.851 209.211 156.385 207.992 160.191 cv
208.611 163.142 206.402 166.445 205.233 169.621 cv
204.771 170.592 205.394 171.429 205.233 172.362 cv
204.581 173.032 204.571 173.972 204.18 174.893 cv
203.87 175.628 203.269 176.404 202.938 177.275 cv
202.595 178.172 202.654 179.311 202.115 180.294 cv
201.644 181.157 200.788 181.919 200.197 182.762 cv
198.721 184.857 197.518 187.188 196.045 189.276 cv
194.691 191.198 193.03 192.606 191.532 194.3 cv
190.92 194.99 190.536 195.782 189.908 196.389 cv
188.979 197.286 187.806 197.889 186.745 198.498 cv
186.091 199.151 185.857 199.751 185.945 200.311 cv
184.566 201.151 183.229 202.351 181.771 202.546 cv
181.424 202.99 181.079 203.435 180.737 203.877 cv
179.957 204.043 179.211 204.461 178.418 204.508 cv
177.532 205.648 176.485 205.506 175.633 206.913 cv
174.431 207.107 173.635 207.946 172.576 208.496 cv
171.596 209.005 170.483 209.305 169.477 209.743 cv
168.426 210.199 167.457 210.848 166.42 211.325 cv
166.313 211.375 165.977 211.174 165.893 211.221 cv
165.253 211.558 164.255 212.258 163.362 212.909 cv
161.302 213.331 159.233 213.694 157.269 214.87 cv
156.004 214.81 154.781 215.086 153.601 215.674 cv
149.755 216.004 145.946 216.603 142.084 216.772 cv
139.178 215.921 136.422 216.264 133.543 215.615 cv
132.188 214.907 130.66 214.74 129.282 214.436 cv
127.871 214.124 126.53 213.7 125.063 213.591 cv
124.812 213.396 124.558 213.2 124.305 213.003 cv
121.278 212.545 118.066 210.636 114.983 209.716 cv
114.539 209.37 114.096 209.026 113.655 208.684 cv
112.832 208.515 111.973 208.024 111.166 207.968 cv
110.469 207.426 109.771 206.885 109.077 206.343 cv
108.55 205.788 108.124 206.037 107.642 205.837 cv
104.667 203.371 101.018 200.983 98.6777 198.563 cv
98.2666 198.14 97.9805 197.8 97.833 197.298 cv
96.0391 196.765 95.5635 194.776 94.2471 193.294 cv
93.1016 192.004 91.4561 191.232 91.2295 189.729 cv
90.1465 189.065 90.0527 188.278 88.9102 187.622 cv
88.8799 186.425 87.0908 185.45 87.2852 184.227 cv
84.4277 181.786 83.4238 179.112 80.3447 176.699 cv
80.0254 175.141 78.0635 173.787 77.7275 172.23 cv
77.2217 171.836 76.7148 171.442 76.209 171.049 cv
76.1494 169.972 74.6875 169.069 74.626 167.991 cv
72.1865 165.611 70.751 163.107 69.0781 160.633 cv
67.9902 160.026 67.9053 159.295 66.9473 158.672 cv
66.9434 157.701 65.749 156.88 65.7451 155.91 cv
63.9893 154.701 63.4932 153.336 62.3486 152.051 cv
64.3066 150.998 65.3506 154.185 65.8496 155.383 cv
66.3877 156.046 66.9268 155.65 66.9893 156.268 cv
68.7002 158.566 70.7344 160.825 72.3057 163.142 cv
73.2891 163.418 71.7344 164.014 72.2852 164.344 cv
73.1602 165.778 74.7197 166.503 75.7861 167.675 cv
76.54 168.502 76.9629 169.734 77.7061 170.69 cv
78.6689 171.93 79.9688 172.813 80.6807 173.916 cv
81.2295 174.767 81.3057 175.977 81.8848 176.678 cv
84.8838 178.521 86.3516 180.826 87.833 183.13 cv
88.2236 183.737 89.0273 184.057 89.7744 184.942 cv
90.7393 186.085 91.627 187.685 92.6846 189.034 cv
93.7275 190.361 94.9053 191.462 95.7441 192.935 cv
96.3916 193.356 95.5605 193.551 95.5332 193.988 cv
95.5137 194.349 95.7324 194.671 95.8506 195.149 cv
96.6338 196.337 98.0527 195.487 98.1924 196.055 cv
98.7783 196.495 98.1152 197.093 98.8877 197.509 cv
101.722 198.83 103.828 201.859 106.671 203.56 cv
107.199 203.874 107.812 203.908 108.296 204.214 cv
111.336 206.135 113.73 208.714 116.544 208.493 cv
117.204 209.215 117.769 209.151 118.398 209.63 cv
121.143 210.425 123.411 211.968 125.991 212.792 cv
127.237 213.188 128.485 213.364 129.681 213.527 cv
130.884 213.694 132.085 213.594 133.183 214.119 cv
134.15 213.629 135.19 213.714 136.178 213.399 cv
137.703 214.172 139.144 214.272 140.586 214.39 cv
141.453 214.474 142.252 214.019 143.096 213.903 cv
146.366 214.946 149.251 212.893 152.48 213.586 cv
154.468 212.583 156.615 212.849 158.532 211.284 cv
160.251 211.327 161.863 210.519 163.551 210.313 cv
165.639 208.285 168.036 208.728 170.11 206.578 cv
171.289 206.422 172.447 206.097 173.546 205.291 cv
173.97 204.61 172.684 204.143 172.133 203.583 cv
171.991 202.515 171.028 201.553 170.887 200.484 cv
170.443 200.138 170.003 199.796 169.559 199.452 cv
169.621 198.928 169.137 198.476 169.199 197.954 cv
168.757 197.608 168.313 197.264 167.869 196.921 cv
166.513 193.663 163.59 190.601 162.554 187.305 cv
160.396 185.576 160.714 183.537 158.608 181.804 cv
158.112 180.608 157.998 179.365 156.456 178.302 cv
156.273 178.218 156.119 178.345 155.93 178.196 cv
154.931 178.434 154.007 179.268 153.019 179.59 cv
151.052 182.12 148.974 183.776 146.947 185.834 cv
144.962 186.858 142.788 186.376 140.937 188.473 cv
140.853 188.653 140.981 188.81 140.832 188.998 cv
140.566 189.774 141.411 190.412 142.288 191.043 cv
142.403 191.886 142.912 192.678 142.774 193.554 cv
141.084 194.7 138.881 194.854 137.333 196.634 cv
136.011 198.157 135.934 200.56 134.214 201.823 cv
132.736 200.959 131.26 200.253 130.228 201.466 cv
129.414 202.421 129.798 203.481 130.461 204.693 cv
130.298 205.341 130.208 205.979 130.187 206.61 cv
130.508 207.313 131.565 207.923 131.305 208.698 cv
130.202 209.927 129.186 207.919 128.879 207.117 cv
126.782 204.968 124.993 205.274 123.228 205.771 cv
122.508 205.955 121.947 207.403 121.182 207.225 cv
119.072 205.775 122.989 203.572 123.247 201.826 cv
123.309 200.962 122.836 200.164 121.75 199.443 cv
120.776 198.527 120.118 200.102 119.113 198.917 cv
119.752 198.085 120.367 197.071 121.116 197.124 cv
121.924 197.536 121.679 198.082 122.487 198.495 cv
123.515 198.954 124.384 198.126 125.376 198.303 cv
126.743 199.188 128.017 199.32 129.215 198.851 cv
130.572 196.909 130.544 195.144 130.752 193.347 cv
131.568 192.573 132.498 192.688 133.41 192.671 cv
134.362 191.612 135.466 191.76 136.51 191.426 cv
137.461 189.649 138.625 188.378 140.346 186.489 cv
141.262 185.484 142.088 184.396 142.474 182.966 cv
142.531 181.962 141.928 181.261 141.167 180.731 cv
140.179 180.045 139.108 180.568 138.34 180.059 cv
138.341 179.314 139.607 178.413 139.246 177.716 cv
138.083 177.021 136.917 177.531 136.484 178.92 cv
135.84 179.7 135.042 179.258 134.397 180.038 cv
133.983 181.154 134.759 181.558 135.326 181.979 cv
136.43 182.793 138.356 181.787 138.721 183.094 cv
138.542 184.12 136.864 183.313 136.105 184.106 cv
135.45 184.762 136.315 185.222 136.317 185.794 cv
136.414 186.539 135.495 186.166 135.052 186.64 cv
134.595 187.21 134.88 187.688 134.736 188.22 cv
133.607 188.837 132.47 188.507 131.913 190.289 cv
131.276 190.238 130.548 189.433 129.949 189.678 cv
129.288 189.866 128.756 191.085 128.052 190.942 cv
127.213 190.474 127.527 189.345 126.491 189.425 cv
125.216 189.581 125.904 192.089 124.382 191.745 cv
122.557 191.356 124.71 189.109 124.593 187.949 cv
123.686 187.097 122.854 186.828 122.104 187.232 cv
121.52 188.219 121.828 189.095 121.767 190.016 cv
121.921 191.196 121.364 191.896 122.106 192.716 cv
123.106 193.821 124.694 192.921 125.354 194.023 cv
125.052 195.688 123.175 195.453 122.063 195.119 cv
120.75 193.597 119.953 192.188 118.182 191.493 cv
116.454 190.816 114.709 191.794 113.227 191.601 cv
112.594 192.012 112.014 192.864 111.33 192.866 cv
110.601 192.083 111.156 191.095 111.561 190.61 cv
112.289 189.74 113.85 190.17 114.513 189.556 cv
114.972 188.429 114.278 186.67 112.739 186.349 cv
111.554 186.091 110.871 187.727 110.105 188.564 cv
109.647 189.065 109.047 189.384 108.735 189.937 cv
107.991 191.241 108.688 192.899 107.618 193.333 cv
106.595 192.26 106.893 191.023 107.342 189.768 cv
106.817 188.462 106.876 187.085 106.835 185.718 cv
105.433 184.98 106.007 183.995 105.146 183.188 cv
104.037 182.202 102.817 184.11 102.175 182.704 cv
102.894 180.51 105.237 181.183 106.728 180.763 cv
107.813 181.212 108.852 181.303 109.892 181.395 cv
110.741 180.882 111.531 179.888 112.379 179.369 cv
114.067 180.757 113.572 182.417 112.972 184.094 cv
114.263 185.86 116.496 186.821 118.16 187.214 cv
118.852 187.376 119.337 187.681 119.89 187.339 cv
120.739 185.976 120.205 184.786 119.763 183.585 cv
119.129 183.084 118.556 183.065 117.99 183.122 cv
117.589 182.163 118.214 180.997 117.948 180.042 cv
117.824 179.604 116.832 177.847 116.26 177.512 cv
114.517 176.492 111.406 179.557 110.649 176.501 cv
111.336 175.603 112.234 176.381 112.969 175.867 cv
113.749 175.084 112.878 174.509 113.728 173.717 cv
114.741 172.688 115.972 173.394 117.018 172.619 cv
117.633 171.799 117.732 171.045 118.6 170.194 cv
119.89 169.086 121.445 170.129 122.584 167.809 cv
123.56 167.396 124.646 167.87 125.662 167.766 cv
126.755 166.465 127.927 165.771 129.162 165.614 cv
130.611 167.032 129.971 168.711 129.756 170.337 cv
130.629 170.939 131.458 171.176 132.371 172.066 cv
133.622 172.674 135.447 171.457 136.208 172.614 cv
135.103 173.821 133.98 174.89 132.793 175.44 cv
133.653 178.341 135.711 175.439 136.843 174.934 cv
137.416 174.678 138.278 174.62 139.014 174.489 cv
140.065 174.305 140.834 174.344 142.009 173.772 cv
143.759 172.919 146.409 171.509 148.187 169.741 cv
148.908 169.585 149.612 169.266 150.315 168.962 cv
150.846 167.865 149.482 167.01 149.262 166.01 cv
148.651 165.058 147.722 164.145 147.53 163.141 cv
147.152 162.847 146.771 162.552 146.392 162.257 cv
144.744 157.778 140.674 153.605 138.922 149.141 cv
136.356 146.377 135.328 143.422 133.058 140.622 cv
131.833 139.961 130.836 141.124 129.852 142.396 cv
128.021 143.028 127.408 143.857 125.804 145.643 cv
125.533 145.943 125.086 146.148 124.876 146.444 cv
123.573 148.29 123.509 150.881 122.179 152.267 cv
120.966 153.529 119.388 153.099 118.152 154.313 cv
116.846 154.385 115.529 154.358 114.293 154.97 cv
113.127 156.37 115.217 157.365 115.095 158.638 cv
114.858 159.608 113.189 159.438 112.332 159.84 cv
111.876 160.921 110.808 161.081 110.182 161.823 cv
109.185 163.006 108.903 164.691 107.462 166.105 cv
106.865 166.923 107.49 167.587 106.894 168.404 cv
105.8 168.797 104.554 167.968 103.52 168.828 cv
102.924 170.615 102.78 172.347 103.141 174.015 cv
104.141 175.158 105.748 175.393 106.179 176.376 cv
105.732 177.738 103.541 176.025 102.425 176.503 cv
101.937 175.823 102.134 175.056 101.643 174.373 cv
100.884 173.783 100.125 173.194 99.3662 172.604 cv
97.9658 172.372 96.6709 172.979 95.3154 173.11 cv
94.7334 173.926 94.1514 174.746 93.46 174.713 cv
91.873 173.309 93.9336 172.097 95.0215 170.748 cv
95.7031 169.901 95.9131 168.906 96.6436 168.66 cv
96.7236 167.621 96.3984 166.635 95.251 165.749 cv
93.8906 164.916 92.9297 167.273 91.5391 166.215 cv
92.5283 163.459 95.3799 164.164 97.2979 164.294 cv
99.0771 166.695 101.654 167.32 102.336 164.862 cv
102.715 163.502 103.03 161.07 102.715 159.674 cv
103.579 158.811 104.594 159.169 105.52 158.809 cv
105.927 158.411 106.374 158.329 106.743 157.627 cv
108.483 157.401 110.016 155.486 111.655 154.441 cv
112.374 153.667 111.872 153.044 112.414 152.291 cv
114.327 150.817 115.305 148.531 114.816 146.849 cv
113.771 145.752 112.305 147.192 111.802 146.026 cv
111.776 145.151 113.587 144.678 112.706 143.686 cv
111.652 142.572 110.87 143.622 109.966 143.687 cv
109.31 145.293 107.684 144.896 107.52 146.049 cv
107.589 147.897 110.659 147.989 111.126 148.853 cv
110.406 149.939 109.408 148.815 108.66 149.677 cv
108.201 150.247 108.486 150.726 108.344 151.258 cv
107.814 152.061 107.066 151.09 106.509 151.66 cv
106.092 152.34 106.215 152.953 106.236 153.58 cv
105.554 154.067 104.787 153.871 104.105 154.359 cv
103.607 154.937 104.116 155.386 103.45 155.983 cv
102.811 156.781 101.895 155.403 101.195 155.752 cv
100.301 156.439 101.017 157.438 100.058 157.608 cv
99.1748 157.634 99.5898 156.397 98.6436 155.901 cv
97.2568 155.979 97.1641 157.892 95.9443 158.981 cv
96.248 160.315 98.1982 158.9 98.4766 160.033 cv
98.1982 161.068 96.6533 162.424 95.6924 162.438 cv
94.9814 161.843 95.3135 161.115 94.4268 160.542 cv
93.3154 160.146 92.4482 159.414 91.5166 159.193 cv
90.1035 158.857 88.7363 159.497 87.3828 159.025 cv
86.3535 157.452 86.5625 153.402 83.5225 154.197 cv
82.8379 154.968 83.3721 155.586 82.4258 156.39 cv
81.4482 156.792 80.3594 156.303 79.3896 156.771 cv
78.4277 157.8 79.4902 159.314 78.2305 159.829 cv
76.0732 158.756 77.9648 155.393 79.4521 153.164 cv
79.6963 152.734 79.2275 152.392 79.4727 151.962 cv
77.8232 151.084 77.8076 150 76.8779 149.031 cv
75.5469 147.98 74.5801 149.838 73.2295 148.632 cv
74.7344 145.237 79.2725 148.976 81.8535 147.723 cv
82.749 145.668 81.4463 143.89 80.7988 142.029 cv
79.9453 141.15 79.3086 141.995 78.5 141.461 cv
77.7539 141.436 76.959 141.013 76.2432 141.229 cv
75.5342 140.58 74.8477 140.128 74.2393 140.279 cv
73.2109 141.275 73.1289 142.96 71.8359 142.98 cv
70.6973 140.364 74.0762 138.007 75.7988 136.315 cv
76.2295 135.101 75.5508 134.419 74.8271 134.038 cv
73.4219 133.298 72.501 135.383 71.3057 134.65 cv
71.04 133.787 72.4082 132.334 73.1826 131.845 cv
74.7979 131.513 76.5869 132.573 78.3486 133.425 cv
79.5059 133.541 80.5342 132.624 81.6387 132.328 cv
82.6729 130.685 82.6533 128.369 84.041 126.886 cv
84.9082 125.961 86.4375 125.559 87.585 125.071 cv
88.6094 123.221 89.8496 123.096 90.958 121.906 cv
91.5986 121.197 91.6289 120.566 91.5684 119.945 cv
93.1807 118.632 94.0703 116.305 92.8105 114.82 cv
91.9697 114.023 91.2539 114.251 90.5127 114.252 cv
90.0723 113.622 90.6348 112.866 89.9229 112.27 cv
88.458 111.289 86.373 111.915 85.4297 110.604 cv
86.4785 108.687 89.1455 109.618 91.0801 109.211 cv
91.5752 109.106 91.6836 108.545 92.2412 108.894 cv
97.2744 106.214 102.278 103.301 107.169 99.4844 cv
107.857 98.0527 106.272 96.9224 105.503 95.7515 cv
104.716 94.5566 103.995 93.334 103.687 92.21 cv
100.893 88.7891 98.79 85.2832 96.8926 81.75 cv
96.3867 81.3584 95.8809 80.9634 95.374 80.5713 cv
95.3174 79.835 94.9287 79.1406 94.5947 78.4404 cv
92.3193 78.1367 90.4141 80.0586 88.4355 81.269 cv
87.9404 81.5723 87.3232 81.8599 86.834 82.1548 cv
86.3721 82.4336 85.8242 82.5938 85.3789 82.8511 cv
84.7842 83.1958 84.4385 83.7891 83.8184 84.0747 cv
83.7119 84.125 83.377 83.9248 83.292 83.9697 cv
83.0576 84.0933 82.7842 84.5771 82.3213 84.4346 cv
81.8291 85.0518 81.2666 85.1299 80.8037 85.9937 cv
79.5488 86.0049 78.4561 87.3281 77.2197 87.4717 cv
75.4033 89.3936 73.3828 89.6768 71.5684 91.6069 cv
70.3711 92.0879 69.1592 92.4409 68.0674 93.7583 cv
66.3857 94.0015 64.9063 95.8691 63.2607 96.418 cv
62.8672 96.9243 62.4736 97.4307 62.0801 97.9365 cv
61.2998 98.1035 60.5527 98.521 59.7598 98.5703 cv
57.29 100.156 54.7383 101.548 52.0859 102.959 cv
51.5234 103.258 50.8506 103.521 50.1455 103.887 cv
50.0098 103.957 49.6758 104.108 49.6592 104.119 cv
48.5781 104.888 47.833 106.175 46.7725 107.051 cv
45.8457 107.817 44.6895 108.065 43.9463 109.119 cv
43.2646 109.153 42.6533 109.747 41.9648 109.709 cv
40.0283 111.575 37.8955 111.878 35.9336 113.551 cv
35.958 115.146 38.8311 116.385 38.8867 117.978 cv
41.083 119.225 41.7305 121.739 44.0352 123.502 cv
44.3154 124.037 43.9893 124.649 44.2451 125.189 cv
44.9082 125.913 45.4707 125.849 46.1016 126.327 cv
47.2305 128.642 49.623 130.799 50.8916 133.095 cv
51.2012 134.007 50.0225 134.04 50.4277 134.866 cv
50.7031 135.859 51.2197 135.042 51.4814 135.078 cv
52.0498 135.155 51.835 135.409 52.3896 135.479 cv
54.0439 136.984 54.4219 138.65 54.7119 140.329 cv
55.7734 142.086 57.752 143.098 59.0137 144.586 cv
59.7813 145.493 60.2363 146.809 60.7861 147.792 cv
61.3525 148.803 62.4873 149.784 62.0322 150.892 cv
61.7471 151.486 61.1826 150.585 60.9355 150.344 cv
59.7676 149.21 58.8506 147.428 58.1709 146.063 cv
55.918 144.574 56.2236 142.766 53.9736 141.277 cv
53.1123 139.685 52.1895 137.762 50.9346 136.174 cv
50.5234 135.653 49.7969 135.217 49.374 134.657 cv
49.293 134.551 49.3438 134.059 49.2891 133.981 cv
48.8574 133.37 47.8516 132.934 48.0225 132.083 cv
44.9219 129.902 44.7813 127.35 42.1787 125.105 cv
41.9307 123.993 41.0205 122.965 40.7451 121.857 cv
40.2383 121.465 39.7314 121.07 39.2256 120.677 cv
38.6045 119.956 38.3975 119.182 38.2549 118.4 cv
35.9063 116.752 35.1074 114.911 33.4863 113.172 cv
34.7168 111.584 36.1523 111.654 37.4717 110.787 cv
38.8008 109.536 40.1279 108.279 41.6045 108.213 cv
43.2705 106.006 45.1582 105.576 47.0039 104.795 cv
48.248 102.872 49.7236 102.803 51.1367 102.221 cv
53.0566 100.225 55.0625 98.9136 57.165 98.3828 cv
60.1328 95.1553 63.5225 95.3193 66.4639 91.9033 cv
68.3662 91.1152 70.2324 90.0635 72.0107 88.2959 cv
73.1436 88.2192 74.1299 86.9805 75.2578 86.8613 cv
77.3047 84.5039 79.668 84.6792 81.6885 82.1133 cv
82.7559 81.9736 83.7197 81.0107 84.7881 80.8691 cv
85.082 80.4902 85.3779 80.1094 85.6729 79.7295 cv
86.1943 79.7939 86.6484 79.3066 87.1709 79.3721 cv
87.584 78.5625 88.1279 78.8081 88.541 77.999 cv
90.6533 77.5352 92.5498 75.3418 94.6563 74.834 cv
95.9424 73.3687 97.7559 72.6113 99.2314 71.6904 cv
100.785 70.7227 102.131 69.4316 103.85 68.8857 cv
104.241 68.3789 104.638 67.873 105.031 67.3652 cv
106.304 67.1118 107.054 66.6421 108.425 65.7402 cv
109.868 64.792 112.304 63.5015 114.012 62.4712 cv
115.092 61.8193 116.137 61.0059 117.175 60.3608 cv
118.245 59.6968 119.568 59.2676 120.338 58.251 cv
121.181 58.1357 121.963 57.541 122.805 57.4287 cv
123.358 56.8262 123.955 56.5713 124.47 55.6782 cv
127.433 54.2227 130.263 51.7529 133.263 50.6353 cv
133.608 50.1904 133.952 49.749 134.297 49.3057 cv
138.096 48.1797 141.512 43.9775 145.324 42.9551 cv
145.619 42.5752 145.916 42.1953 146.21 41.8149 cv
147.834 41.5615 149.231 39.4912 150.87 39.3457 cv
151.215 38.9033 151.56 38.4595 151.902 38.0176 cv
153.048 37.583 154.056 36.0605 155.298 36.3926 cv
156.372 37.1729 156.414 38.0801 156.649 38.9644 cv
158.518 41.0146 158.486 43.3047 160.532 45.333 cv
160.874 46.7173 161.374 48.085 162.576 49.3604 cv
161.896 49.2227 161.728 49.7017 161.504 50.3525 cv
162.009 51.2603 162.566 52.1611 163.381 53.0283 cv
163.827 52.5161 163.213 52.1367 163.21 51.6816 cv
163.829 51.7813 164.113 53.3896 165.047 54.0205 cv
165.103 54.6411 165.392 55.2339 165.447 55.8555 cv
167.263 57.7412 167.76 59.7925 168.76 61.7803 cv
169.049 62.3721 168.332 63.0908 168.823 63.6582 cv
169.193 63.8755 169.627 64.5869 169.878 63.8682 cv
172.355 68.4126 174.604 72.9863 176.904 77.5527 cv
177.77 77.9019 176.652 78.498 177.412 78.8594 cv
177.378 79.8965 178.207 80.6221 178.614 81.623 cv
178.656 81.7285 178.466 82.0688 178.51 82.1494 cv
178.75 82.6074 178.76 82.5205 178.782 82.9727 cv
178.8 83.2949 178.988 83.9326 179.143 84.4697 cv
179.218 85.1064 178.793 84.9624 178.404 85.4189 cv
179.197 85.6572 179.093 87.4717 180.388 87.5693 cv
180.62 87.5874 180.555 87.209 180.871 87.3374 cv
181.308 87.5142 181.57 88.0615 182.012 88.2217 cv
182.274 88.3184 182.566 87.8853 182.876 88.2852 cv
184.642 91.207 185.577 94.2295 187.919 97.0786 cv
188.188 98.3003 188.625 99.5049 189.733 100.62 cv
189.386 101.486 188.789 100.368 188.426 101.125 cv
188.704 101.777 188.854 102.446 189.69 103.024 cv
190.087 102.576 190.207 102.162 190.049 101.781 cv
cp
ef
34.1338 164.84 mo
33.3115 164.2 32.4893 163.561 31.665 162.922 cv
30.1113 162.365 28.791 163.678 27.2803 163.47 cv
26.4072 164.303 25.3223 164.568 24.2227 165.054 cv
21.3418 166.324 18.3184 167.65 15.2607 168.746 cv
14.3809 169.599 15.0195 170.262 14.0166 171.129 cv
12.917 170.938 12.8896 169.86 12.5615 169.085 cv
12.8438 168.469 11.7861 167.137 12.6455 167.017 cv
13.4395 166.062 14.5352 167.516 15.4287 167.354 cv
17.3691 166.445 20.3438 164.877 23.5264 163.599 cv
24.7637 163.1 26.2373 162.671 27.6377 162.226 cv
30.2656 161.392 33.3115 159.979 35.168 163.511 cv
35.9531 165.005 36.1504 166.8 35.9912 168.72 cv
33.2959 172.376 29.1621 172.79 25.9336 174.607 cv
24.5176 173.788 23.168 173.507 21.9482 174.248 cv
21.7598 174.045 21.9902 173.976 22.0957 174.059 cv
23.0264 173.283 24.0488 173.237 24.9619 172.329 cv
26.5957 172.455 29.1602 170.815 31.1621 169.838 cv
31.9512 169.454 32.6846 169.338 33.1025 168.91 cv
34.1143 167.872 34.6973 166.376 34.1338 164.84 cv
cp
ef
218.387 221.265 mo
217.637 221.815 218.738 222.134 218.555 222.613 cv
217.742 223.3 217.262 224.479 216.108 224.976 cv
214.849 227.577 212.506 228.741 210.67 230.798 cv
210.226 230.905 209.725 230.537 209.278 230.631 cv
208.372 231.145 207.555 232.384 206.602 232.509 cv
206.225 232.71 207.256 233.512 207.358 233.098 cv
206.492 234.383 204.126 235.546 202.764 237.443 cv
201.119 237.994 199.582 239.408 197.999 240.44 cv
197.744 240.243 197.491 240.047 197.238 239.851 cv
196.389 240.362 195.661 241.843 194.71 241.538 cv
194.085 242.132 195.019 242.526 194.393 243.119 cv
193.329 243.216 192.578 244.06 191.483 244.512 cv
191.162 244.642 190.736 244.525 190.469 244.638 cv
189.153 245.199 188.019 246.222 186.591 246.497 cv
186.141 247.357 186.135 247.366 185.41 248.015 cv
183.187 248.948 180.909 249.472 178.725 250.737 cv
176.409 250.952 174.225 252.184 172.039 253.459 cv
170.664 253.413 169.332 253.72 168.076 254.641 cv
166.281 254.895 164.494 255.232 162.764 255.993 cv
160.65 255.999 158.612 256.601 156.498 256.606 cv
156.112 256.705 155.769 257.161 155.382 257.261 cv
153.328 257.274 151.303 257.529 149.351 258.359 cv
146.422 258.241 143.621 259.12 140.768 259.604 cv
139.004 259.206 137.319 259.437 135.664 259.901 cv
135.215 259.505 134.845 259.744 134.42 259.544 cv
132.342 259.828 130.153 259.225 128.157 260.158 cv
127.639 259.675 127.239 260.135 126.722 259.651 cv
126.029 259.594 125.355 259.679 124.698 259.906 cv
124.265 259.445 123.587 259.649 123.115 259.59 cv
122.548 259.516 122.048 259.353 121.534 259.274 cv
120.503 259.117 119.438 259.1 118.37 258.642 cv
117.938 258.397 117.567 258.628 117.168 258.62 cv
116.379 258.553 116.858 257.139 115.375 256.617 cv
117.588 256.046 119.99 256.99 122.293 257.122 cv
122.807 257.519 123.434 257.166 124.021 257.247 cv
124.607 257.329 125.237 257.671 125.793 257.712 cv
126.905 257.791 127.987 257.296 129.063 257.817 cv
129.602 257.565 130.188 257.679 130.707 257.268 cv
133.279 257.742 135.654 256.638 138.256 257.349 cv
141.771 256.816 145.241 256.424 148.865 255.85 cv
150.573 255.577 152.254 255.373 154.074 255.025 cv
155.19 254.812 156.18 254.41 157.554 254.077 cv
158.169 253.927 158.661 254.014 159.24 253.866 cv
159.819 253.716 160.412 253.283 161.033 253.127 cv
161.817 252.926 162.634 252.996 163.542 252.64 cv
163.849 252.52 163.746 252.45 164.027 252.408 cv
164.372 252.358 165.469 251.966 165.967 251.479 cv
167.193 251.696 168.272 250.723 169.489 250.868 cv
171.068 249.929 172.741 249.494 174.381 248.883 cv
175.944 248.299 177.788 247.994 179.229 246.562 cv
183.175 245.214 186.929 242.36 190.912 241.327 cv
191.519 240.235 192.281 240.394 192.914 239.533 cv
194.068 240.076 195.106 239.692 196.143 239.303 cv
196.767 238.71 196.741 238.198 196.457 237.72 cv
197.255 237.503 197.29 236.789 197.826 236.349 cv
198.695 235.638 199.868 235.547 200.697 234.618 cv
201.157 234.099 201.288 233.52 201.833 232.763 cv
202.556 232.592 203.258 232.281 203.964 231.981 cv
204.077 231.739 203.687 231.56 203.88 231.309 cv
205.726 230.091 207.502 228.308 209.384 227.36 cv
209.791 226.46 210.461 225.505 211.449 224.706 cv
211.813 224.409 212.234 224.352 212.565 224.05 cv
213.231 223.449 213.771 222.634 214.528 221.92 cv
215.375 221.119 216.562 220.466 217.163 219.704 cv
217.586 219.169 217.74 218.521 218.153 218.038 cv
218.597 217.524 219.264 217.319 219.714 216.814 cv
220.29 216.169 220.352 215.124 221.146 214.579 cv
225.476 211.442 228.949 205.049 232.785 200.782 cv
233.187 200.161 233.035 199.608 233.246 199.011 cv
235.146 196.919 235.693 194.284 237.211 192.345 cv
237.826 191.56 238.748 190.886 239.276 189.688 cv
239.485 189.214 239.396 188.576 239.591 188.104 cv
239.741 187.748 240.175 187.512 240.329 187.155 cv
240.485 186.804 240.541 186.278 240.689 185.911 cv
241.137 184.78 241.882 183.489 242.628 182.242 cv
242.603 181.731 243.228 181.138 242.943 180.662 cv
243.226 180.173 243.541 179.956 243.87 179.859 cv
244.002 179.271 244.09 178.688 243.997 178.128 cv
244.531 177.829 245.056 177.456 245.558 176.905 cv
245.705 176.087 246.121 175.235 245.262 174.545 cv
246.161 173.503 246.152 172.083 246.526 170.96 cv
246.91 169.793 247.709 168.797 247.644 167.561 cv
248.684 166.23 249.18 164.75 249.351 163.408 cv
249.377 163.2 249.587 162.942 249.602 162.689 cv
249.63 162.308 249.361 161.724 249.434 161.341 cv
249.581 160.555 250.051 159.931 250.193 159.191 cv
250.376 158.225 250.415 157.218 250.339 156.259 cv
250.587 155.494 250.784 155.799 250.887 155.16 cv
250.773 154.434 251.343 153.62 250.78 152.948 cv
252.016 149.993 252.598 147.122 251.938 144.403 cv
252.887 142.286 252.859 140.29 252.379 138.352 cv
252.923 137.256 252.762 136.249 253.011 135.188 cv
252.92 134.114 253.003 133.019 252.778 131.963 cv
252.857 130.876 252.37 129.708 253.601 128.948 cv
254.417 129.54 254.393 130.117 255.309 130.274 cv
255.337 131.3 255.31 132.332 256.702 133.186 cv
256.299 133.636 256.531 134.007 256.681 134.388 cv
256.236 134.951 255.686 134.647 255.226 135.084 cv
255.113 135.727 255.243 136.339 255.965 136.875 cv
256.282 137.405 255.873 138.029 256.851 138.478 cv
256.605 139.688 256.818 141.436 256.451 142.127 cv
256.191 142.337 255.853 141.915 255.544 141.726 cv
254.993 142.252 255.606 142.633 255.713 143.076 cv
255.417 143.45 255.009 142.915 254.743 143.541 cv
255.274 144.124 255.742 144.225 256.178 144.045 cv
256.845 145.29 256.174 147.272 256.432 148.811 cv
255.959 149.729 255.78 150.607 255.903 151.449 cv
254.969 153.451 254.626 155.379 254.749 157.249 cv
254.022 158.516 254.133 160.277 253.8 161.993 cv
253.653 162.753 253.277 163.677 253.085 164.482 cv
252.861 165.414 252.936 166.187 252.515 166.781 cv
252.047 167.439 251.196 168.356 250.131 168.28 cv
249.873 169.404 250.849 169.322 251.25 170.366 cv
250.503 172.859 248.917 175.457 248.764 177.875 cv
248.425 178.372 248.007 178.23 247.646 178.529 cv
247.265 180.234 246.21 182.022 246.404 183.653 cv
245.35 185.442 244.377 187.22 243.812 188.95 cv
242.716 190.171 242.324 191.307 242.02 192.43 cv
241.104 193.791 240.128 194.669 239.173 195.698 cv
238.763 196.524 238.063 195.046 237.676 196.056 cv
237.249 196.351 237.297 196.735 237.275 196.963 cv
237.236 197.39 237.506 197.405 237.551 197.786 cv
237.6 198.218 237.063 199.134 237.908 199.284 cv
236.732 200.632 236.555 201.854 235.822 203.145 cv
235.299 203.526 234.804 204.142 234.219 204.031 cv
234.049 204.335 234.734 204.536 234.494 204.852 cv
234.141 205.683 233.518 204.351 233.143 205.021 cv
232.899 205.396 233.696 205.636 233.609 205.99 cv
232.661 206.536 231.898 207.36 231.688 208.459 cv
230.503 208.748 230.007 209.915 229.434 210.969 cv
229.128 211.71 228.605 210.745 228.273 211.286 cv
227.719 211.814 228.523 212.169 227.77 212.721 cv
227.066 213.598 227.507 212.161 227.158 211.942 cv
226.605 212.543 226.009 212.796 225.493 213.692 cv
225.306 213.968 225.656 215.008 225.953 214.661 cv
226.142 214.938 225.839 214.844 225.661 215.042 cv
224.612 216.209 223.368 218.343 221.971 219.787 cv
221.28 220.499 220.247 220.747 219.968 221.58 cv
219.34 220.655 218.971 221.834 218.387 221.265 cv
cp
ef
233.585 126.484 mo
234.91 127.925 235.857 126.371 237.087 127.076 cv
240.394 126.573 243.789 126.77 247.063 125.997 cv
247.887 124.837 248.711 123.659 249.739 124.118 cv
250.589 124.869 250.257 125.768 250.226 126.628 cv
250.208 127.488 250.685 128.284 250.035 129.222 cv
249.093 130.348 247.847 129.054 246.642 128.105 cv
244.402 128.028 242.17 127.998 240.04 128.761 cv
236.585 128.083 233.253 128.384 229.938 128.827 cv
229.777 129.911 228.976 131.304 227.788 130.811 cv
227.038 130.204 227.275 129.308 227.344 128.636 cv
227.439 127.728 227.516 127.053 228.25 126.297 cv
228.941 125.583 230.086 125.668 231.201 125.241 cv
232.353 124.803 233.131 124.094 233.963 124.038 cv
234.296 123.493 234.74 123.858 235.167 124.059 cv
235.769 123.635 235.791 123.608 236.053 122.92 cv
236.707 123.573 237.306 123.81 237.865 123.721 cv
238.584 123.117 238.034 122.671 237.843 122.182 cv
239.298 121.462 241.543 121.339 242.314 119.566 cv
240.002 117.973 238.092 119.598 235.924 119.166 cv
233.851 119.482 231.708 119.256 229.662 119.778 cv
228.934 121.225 228.263 121.883 226.983 121.657 cv
226.54 120.97 226.522 120.23 226.877 119.441 cv
226.731 118.718 226.242 118.038 227.109 117.186 cv
227.794 117.176 228.462 117.039 229.261 117.944 cv
231.128 118.261 232.869 117.583 234.7 117.605 cv
236.447 117.419 238.242 117.602 239.951 117.119 cv
241.116 117.753 242.11 117.029 243.263 117.561 cv
245.308 117.933 247.097 116.248 249.146 116.654 cv
249.762 117.262 249.819 117.939 249.738 118.637 cv
249.288 119.887 248.126 119.591 247.314 119.795 cv
247.086 119.851 246.931 120.153 246.68 120.218 cv
246.428 120.283 246.063 120.094 245.816 120.155 cv
243.407 120.767 240.708 123.578 237.865 123.721 cv
237.416 124.233 236.903 124.242 236.453 124.756 cv
235.542 125.142 233.796 124.901 233.585 126.484 cv
cp
ef
244.262 143.312 mo
244.464 143.124 244.534 143.354 244.452 143.457 cv
245.88 144.069 246.045 142.989 247.215 142.255 cv
247.806 140.639 247.435 139.143 247.148 137.638 cv
246.042 136.305 244.711 136.648 244.152 135.614 cv
245.042 133.067 247.794 134.955 249.639 135.612 cv
249.564 135.965 249.768 136.282 250.1 136.581 cv
249.783 139.307 249.61 142.013 248.901 144.785 cv
248.688 146.015 249.56 147.102 248.838 148.391 cv
248.269 148.405 247.749 148.815 247.153 148.603 cv
245.919 147.957 246.781 147.05 245.845 146.368 cv
243.951 145.317 241.847 145.389 240.044 145.209 cv
238.167 145.025 236.378 144.79 234.475 144.537 cv
233.783 144.479 233.109 144.563 232.451 144.79 cv
231.308 144.312 230.235 144.416 229.14 144.347 cv
228.188 144.953 227.36 146.546 226.23 145.743 cv
225.572 145.254 226.217 144.602 226.695 143.97 cv
226.694 143.092 226.544 141.771 226.607 140.553 cv
226.625 140.269 226.797 139.795 226.821 139.499 cv
227.037 136.671 226.675 134.241 230.087 134.12 cv
230.926 133.978 231.695 133.264 232.64 133.971 cv
232.748 134.417 232.805 134.864 232.807 135.322 cv
231.903 136.29 230.794 135.658 229.855 136.378 cv
228.436 138.569 228.153 140.528 229.668 141.713 cv
230.582 142.428 231.935 142.071 233.314 142.112 cv
233.591 142.121 233.599 142.243 233.843 142.217 cv
234.429 142.157 236.047 142.671 236.688 141.689 cv
237.36 140.69 236.769 139.85 236.352 138.99 cv
235.567 138.003 234.359 138.5 234.116 137.555 cv
234.03 136.89 234.839 136.377 235.297 136.038 cv
236.023 135.914 236.822 136.368 237.596 136.606 cv
238.95 136.932 240.151 136.035 241.582 136.963 cv
241.475 137.319 241.517 137.658 241.709 137.977 cv
240.481 139.121 238.967 137.982 237.872 140.171 cv
237.583 141.063 238.66 141.785 239.032 142.594 cv
239.783 143.269 241.246 142.362 241.034 143.543 cv
241.27 143.591 241.503 143.642 241.71 143.459 cv
241.523 143.128 241.907 143.244 241.71 143.459 cv
242.158 143.86 242.53 143.63 242.911 143.48 cv
243.123 143.778 242.763 143.633 242.616 143.86 cv
243.154 144.053 243.596 143.458 244.155 143.838 cv
244.359 143.641 244.377 143.467 244.262 143.312 cv
cp
ef
232.354 172.734 mo
232.561 172.044 234.434 172.958 235.329 173.219 cv
236.897 173.429 238.401 173.112 239.905 172.817 cv
242.035 171.315 242.231 169.128 240.958 167.543 cv
239.889 166.467 238.61 166.477 238.447 165.288 cv
238.649 165.091 238.668 164.918 238.554 164.761 cv
239.321 163.601 240.304 164.149 241.21 164.085 cv
242.983 165.633 243.847 167.297 244.397 168.997 cv
244.188 170.978 243.649 172.647 241.654 174.481 cv
240.723 174.788 239.773 174.966 238.892 175.685 cv
237.065 175.696 235.295 176.146 233.368 175.348 cv
231.823 175.319 230.221 174.848 228.664 174.738 cv
227.839 174.146 227.168 173.622 226.24 173.158 cv
225.739 172.911 225.075 172.819 224.614 172.503 cv
222.157 170.819 221.274 168.559 220.922 166.284 cv
220.996 165.802 221.458 165.428 221.617 164.998 cv
222.034 163.884 221.904 162.287 222.544 161.454 cv
223.637 160.033 225.018 160.097 226.846 160.23 cv
227.761 160.345 229.55 160.321 229.609 161.77 cv
228.465 163.571 226.926 162.219 225.602 162.613 cv
224.731 161.578 224.109 162.572 224.083 161.433 cv
223.515 162.074 223.586 162.638 224.295 163.121 cv
222.12 164.781 224.498 167.308 225.057 169.193 cv
226.207 170.165 227.29 170.6 228.346 170.838 cv
229.213 171.186 228.095 171.782 228.854 172.147 cv
230.239 172.715 231.617 173.228 232.927 173.179 cv
233.071 172.901 232.553 172.487 232.354 172.734 cv
cp
ef
185.466 222.476 mo
184.415 223.692 186.332 224.538 185.361 225.745 cv
186.624 226.671 187.574 227.638 188.294 228.634 cv
189.2 228.577 190.212 229.36 191.078 228.972 cv
193.449 231.022 195.6 231.327 197.596 230.382 cv
198.364 229.504 198.36 228.534 199.366 228.104 cv
199.429 227.263 198.525 227.196 198.331 226.689 cv
198.007 226.104 197.793 225.501 197.932 224.856 cv
198.592 223.753 199.414 223.93 200.208 223.886 cv
201.308 225.319 201.592 226.777 201.138 228.567 cv
201.038 228.957 200.938 229.539 200.779 229.812 cv
199.408 232.144 196.523 232.906 194.559 233.505 cv
193.33 233.278 192.076 232.841 190.867 232.768 cv
188.768 231.259 187.066 229.701 185.319 228.147 cv
184.877 226.947 184.282 225.767 183.169 224.649 cv
182.965 223.188 182.38 221.776 181.607 220.389 cv
181.663 218.954 181.79 217.509 182.258 216.021 cv
184.574 212.624 187.126 211.094 189.934 211.634 cv
191.217 212.731 192.965 213.769 192.76 215.05 cv
191.545 216.743 189.94 215.325 188.354 214.061 cv
187.264 213.577 186.334 214.36 185.358 214.777 cv
184.502 216.769 185.249 218.561 185.212 220.451 cv
185.98 221.497 186.475 222.577 186.985 223.656 cv
186.781 223.844 186.713 223.614 186.796 223.509 cv
186.434 223.08 186.117 222.378 185.466 222.476 cv
cp
ef
76.9941 114.403 mo
77.1846 115.097 78.5928 115.114 78.0703 116.153 cv
77.6523 116.465 77.1777 116.33 76.8057 116.997 cv
76.8135 117.567 77.5664 118.044 77.0176 118.683 cv
76.3799 119.335 75.6035 118.874 75.4561 119.907 cv
75.8164 120.582 76.6133 121.202 77.3555 121.383 cv
77.9492 121.107 78.543 120.827 79.1055 120.307 cv
79.9775 120.165 81.2383 120.957 82.1836 120.265 cv
82.9648 119.692 83.2207 118.692 83.5752 117.691 cv
84.2207 116.73 85.3008 116.479 85.0088 115.455 cv
83.9365 114.645 83.21 116.592 82.1621 115.984 cv
81.7549 114.915 83.6279 114.573 83.2158 113.452 cv
81.835 112.466 80.9258 115.24 79.5479 114.254 cv
78.9521 113.873 79.2969 113.372 78.7012 112.989 cv
78.0938 113.057 76.9531 113.388 76.9941 114.403 cv
cp
78.2588 108.077 mo
77.4541 108.047 76.6504 108.008 75.9385 108.709 cv
75.123 109.84 76.0244 110.754 77.3311 111.619 cv
78.7725 111.736 80.1504 111.333 81.3574 109.572 cv
81.6123 108.033 79.4512 106.605 78.2588 108.077 cv
cp
72.1846 108.837 mo
73.0215 109.138 73.8311 109.206 74.5039 108.204 cv
74.4541 107.867 74.4111 107.53 74.377 107.192 cv
73.3623 106.226 70.9033 107.538 72.1846 108.837 cv
cp
62.167 109.578 mo
63.0654 108.998 64.1621 110 65.0566 109.387 cv
66.1309 107.48 67.3926 107.055 68.6631 106.708 cv
69.0479 106.146 68.9287 105.646 69.3145 105.084 cv
70.2021 104.414 71.127 104.05 72.0771 103.881 cv
73.4971 101.99 75.1465 101.93 76.7373 101.413 cv
77.1318 100.138 78.0957 99.7207 79.1201 99.9131 cv
80.9648 101.567 78.7773 103.727 80.3242 105.417 cv
81.8359 106.542 83.1982 106.479 84.6689 107.272 cv
84.9795 108.413 83.6094 108.784 82.9404 109.889 cv
82.5137 111.873 85.5322 112.412 86.9268 112.987 cv
87.0166 113.833 86.1172 114.802 86.7383 115.581 cv
87.6699 116.642 88.3428 115.635 89.2695 116.635 cv
88.8516 117.404 88.335 117.382 87.8555 117.669 cv
87.5156 118.282 88.0674 118.785 87.3936 119.44 cv
86.6299 119.285 85.8486 118.971 85.1777 119.546 cv
84.1328 120.592 85.6953 121.311 84.8428 122.331 cv
84.3203 122.289 83.8408 121.199 83.0273 121.529 cv
82.1133 122.33 82.7461 122.937 82.2686 123.682 cv
81.6348 123.631 80.9053 122.826 80.3076 123.069 cv
79.085 123.979 79.7832 125.322 78.917 125.644 cv
77.9678 125.707 78.2627 123.724 77.3135 123.788 cv
75.8301 123.673 76.2676 125.761 75.2051 126.108 cv
72.8799 124.515 76.0098 122.237 74.3389 120.563 cv
73.3799 119.736 72.6279 120.582 71.7871 120.71 cv
71.1387 119.42 73.7969 117.716 72.293 116.535 cv
71.2461 115.941 70.4219 117.095 69.4453 117.062 cv
69.0762 116.48 68.9004 115.874 69.3809 115.186 cv
70.0918 114.468 70.9346 114.82 71.7852 115.228 cv
73.8906 115.29 76.3652 112.563 74.8008 110.565 cv
73.7725 110.111 73.0361 111.993 72.0381 111.769 cv
71.1338 113.217 70.0166 112.962 68.9375 113.014 cv
68.2529 111.122 65.9326 110.273 64.8047 112.846 cv
64.4043 112.84 63.9893 112.713 63.6016 112.825 cv
62.2734 111.964 62.5859 110.896 61.8721 109.958 cv
61.9707 109.831 62.0693 109.705 62.167 109.578 cv
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Michael Poeltl) ()%%Title: (Uni_Aug_Siegel_32Grad_schwarz.eps)%%CreationDate: 4/13/10 5:20 PM%AI9_DataStream%Gb",Kl#uVgZJ`@qmf9f$g!MF'2g2FA/)GJ.gDC?dV5gSGgo$QQ\A.1`IBeXMPX#kE&;EC!4_IN\cXj"P)3L&dB84k'ch&TuB"Rf"%l2N!mAL519$]J0FGd#&i*l#J>^2/eQI:<LS<j6(-Q3@;8F"p-]'(?5A9CSGSn)aD*a`jdE4s0J;XjJQOn+MO3Uc6c)2*)e.qFGuc%[(EG,J,!:gHP8+<gK<l$1MM'&Vj$RqCRF`$]R\9).s_#<<;U>T^#XCkI+2qR-dC4&N7hqeIDb(W5*0-nn($!6$oe>cS4E;6^9#@$%l".qcX>c6sB=oV]miMInpK<4W6N8`%U&P9;cYK:Q$P4>%>.s)AKmhMJ*cu2X(*O!N:gtW1JVioS,+JR2qnm5!q32`>bH_q?Q[fBg%79QJs$HHY76Mo*mfD;8uqD7A!WAWDCEI[UPWH$d4:bno'j(eI`5Su4!`].+c]SaME?o8Ypr,U5&%Bk-G0dT6a-p\(tkr2gP5^b[c%Tj'lnBk3Y2U`HUQ_iN@cGbO#cN8+;;d]5(e,?V*@mB>)[#2j=El<X($#i8F0@:3s[TEM%kJr6Yr9dm*0PK<MSn!-<V)G=793\1bm%6YKs3+oUT.Y%PZG8%Y*e0p>t&_fg+0ehZDgkRW8m9[Wf3B`BKH0]DQ3ePi^Wk0'@?`W8guW<1"cYF4d-j%9;iq(jT&%;aP]J'_iW%hoQOVI57JJPJ:I#qp6:J%EA%1OseE<H$9=NMSoF(E7B7'HNNGD^Y\OQf>aF**j&ai'_JDBl/"q>eS]b0H697qoO0MTNW8h1Dbdmj%UXK.:'fC)he_5YK,E/ZH1=:mOXT$abN"Ja3:n*DI4l*<hlD-R\/KUtH5jAflRGh]Kl+QBV]2Q);K@W9A[I0^D)n!7([#NCL>Jn`N%>Eb+t4)htS6Wb#m&;D?X_Z.aS[!M2s<hn],7bLtSg\r&@#+t:;($=W2o9L^!>)2k:F8&Tm-Nrb+odFIt6U-utTS#,W8T-Hb%tFq#%b8sgk9Z_c4XQj0MomXA5qOTFPY(clCaFB$/HQ.3PkU#d^*=&i:FU#:[2?)bU3#t[H4Is1D<WV8bn*oU97VHT%M<!]8G>;F<gV)N;%G]/*F6Yo%f>VK3feuK7nUg8VK+5_Fp"2:dX`pH"'hmG)aB;co',=2-#`tr)KA*\8X2!V0DQ[U)DT:en"s4%9s,[Tp3s6Pk4]LboW%Yr]&\R^HSq3TuHpf"PAFLaQMGK.G?tqCpb^&#3=e%fCM7d4B=kUY04uHhS?SE=BU06.;H4_0b0iHtL#cBYD%MTH1^]HK&K3hHc1$%%Z:Mj-Q'^bB)!sJj>i;8Um`EG?ME)47>TC51Zp6Y2`qRf(7e%;A*&9XS*-1gH5[RB&AQX7N=?SoRm-*,Rq61LqM5J&%eIHbAf/V=%BJ[/UXQJ[,C?(c'ru0Mg#"HDCg(!\^C;[e;s5kVGr3B>gH38e'ZP`mPo"Qs:GQnkG2t1)lF_DGh22qh=Z)Le6<!mIDT.(7Zj:-V\%MpWkKD/&XS6e\gR_KY'8:W@hOAIWcBGb1cE@;=XbD#fH+eGc%iMZjA^nK>_XO4nPXn&)/M)sE4.kOH0JashS3Q?*5Ns7l$Ui,KI4%bckBFN*@donapd&;^q>l*b#T=lZtEP_.jB_.X<lICJXK@pof6@hnXDRo_M'p38+P\;2*E6NAG\TUXkuLIBe32e#s![B=aIFa2i`m%FaF!mb6;=cIIQ![DCD:Q>SCWHG$ai"$+sCWEs(QTpu@T4@e'Bg^"9Xh.oLtAUkGfE[qkYSb73Jb>h/j"5u7L=>1BhChosJ-]`uCU%rU7L&PPshB0F8dY3-8i^6,_Qaj1ehO!1/0[<;p6dda@ras2NXbD\dt&\)$gTf>X8u`)omq1cO0,Y+Miia/9m@ReHZ+PqXT.0pZ>&%7J$A^h&LpUR?lRsn"&!N@q*9Uro$Hbs6eQ6G?5R(jtA["q<RL@bqoX4Rmt(U#+)"2H6:W6^7/9M^[lAOre]L4p*[aIMenm]mIhX'%eDH8&GACH!Jig=h*f1X%fPISP'fXpElYK14JE#(MH/#)XD?G4N\2+*eWWWtQ9l;]?ERGbR:(ns",N>9]UcAqBks6<CT8^H*2"sQu%"(N2GCbd%s#Nt&7:>ci@r/6p5%^f\G&k--6n&`F?20pnA3ZXI6obn?V^!WJWMq[q6VU]R18(0$;68W>j(O#`o[PY^$Lo@I0CKQDa%@;F@2rmC:C[JhoSk*taXXkrKSa+$fb9cXrE:31Vi)phfgofa_1O-]OQ5L>]Kn9EA&O1VN&bF>*9GQ6j@8!Dd7k(9d`m058;`fsNa%WS<]?+[p/4SH\J.k$bpkduM4'h0-!`*K>jQNhuq^S'I"2HN42bd,c@REZ`(Y,Bq%dJMte`%l?'8s(DiHQjD6(@<<dE^G.##*;uY_%(rH^2CY`0t0pPJkr^MCiCc/1mf,HJ`r3S[H4>of4rk++$6h%h<j#pU:d`$n&!Z6La-&g0/:E4SFcZ=fl>\c06pP=J@(68g/km\Ec%aE1XgAqnqu,GnM4Z`n[>kYZZ):<Oqe<.e`YTYLsCaVN7RYl/uJ)g4]2?(G+eEgl^Tq`AbA@G(U7\bt,&FtREFo2:dhN?N<Jjh9Je%c"QN578;jlNFBS.)q3gP;k+ka&#r$%!MEo4h,BT2i:,;h*u+W#bd1mVWXYP;AD@r2&R6G!Y_u(iVU')8j!\1=&]p^cI.=i[T$C\a%-HZ%_9Cp(X:@'k`;Qg%4O(MJ;,B00_@*Z*&aml$G*H][Y@WDVN_RTR$D@M*5cn8jte$2m`oT>R*ZH\>6W_l&e7!!^4Z&\8cSF)YX%3C9EdmmcsfV9cs-b5o9@057Mi7TGF*4K$2FVL"aMeO2Gk\m*@G$QmiCeVl7=p[448\WdT1G<MHa_a_Q073qAIe-0[m/gmlQ<587s%Y_M'MG$Bqd,Ah?Q@#aZ__IAIHp0WlW'5aY-LcV57]/9YF\_$I3gF]TeUK4u3$P-1TF(!jNX8S$UU=tUQf!+=kLHo?4+`\.![(Wm8%a9s,b\UK>/R5$ginL$?TjK6;W!+==Ik4M)3]^U=Fe4[h"%K>O?j3arO:CkCuDpgNHrsdiS?XTi;_u@]\pAOCW'Ai_$baXH7O*X'V%p'5&4)Zo0+RbmN5q<u<Nr^+W?It6(is88MW\./GEMBsB%qWFKQ7Yc)YW(_O1<i=LnES3>6g*peGgB3)kZbR`RWeeW"FcM@n&#oEb%8f&F\WOddY#9GJ!:.(t6>&joe[Eo;fGFYOOg%nh;+4?!u`k$$;nXuf63JImhSuS7JH.uNV,m:<"/V\c"`0t&k9nTD0_`]C#ejRp1%Z6;f!X6-?f;#FNbSFk>gfjXIR603FB,4>MfBguPD3gT33'+eR%_4]nA(C8K$C;[T<c`2&/;FbNXmu8tt9tHTFG>:I:N=G*.X3\n3%]iSun?$OP7pi`jI\>pB)k`d2:$t'CI[/iu@Zs0m8*I*;7#2,uhR1H#PDu+,cY?(<Kro0l#%ahJ/4bgtY2P/*ZRC`pDVL^ArE)8%:%D:E81lJPTam+DBN%9r&1[LbP!5pDJ!_%US(rAkin02?4Fj^=a4A^!nrQr=Ch'1on:/G4N_$([(TW',%OO?AFB8QPLT0(g9BaX_bu%GY[i<FkI]hLdT0O(/<F[cRjT5*VGBJ;)]a6BlB)8YeTZkkT&.EZ\k]?03+*_i8g&f83Y56aYTbcm--4]f9/kaOc'_-P$YN%CP't%%b>O;5[?tJ4`6]hb*fOR'cPf?,/mu0TKg'Mfe?VH[pQ%Va&D((,.eH"KgKmLG6\!JH0Bb*10Ku:"F7T4T#mTTRqV/pM&-t&U2-_#I%dMlFWmDu'1Xs:XDE>3cb283SX!(@'\m=YCSH4+B)b;:SnT)qO51G?pCJfNm8*5`%X_$0AJGAKO^'k;:>e-D!4bjU$d+aC8\dqINr%2-]OW8U!:ire2l&ibN</fj_L;B@'$ZG'gBS)Dk_1:=jF\#-1i5dpO#.@lPLpcCBRl4ia"`0?USAcf*(c<>]L[T(];P;EpK$Tn.Xl%m$#B+U2HU#DO1"*8Kt7)F)mV7I9bL;\o#!^UQ1*Mqpe1/p@u8^TRO*qm5(9i(Rl5$mL]:59Snc!8@&DufQ1g%lWAMtd!+-$onR3*%((^g7^4S?Bljs,qZA2.-iaOmfPlrREfW>TlT.^$>@?91$j1>t?p$e'.48C$Q:][#eVOMd;ai<`<FT$'N2UW=.)BAq9+V@r.dI1mI%F"+QRL,>&tYY]FZ(k0u4iJ4g$`f>36oKepfqS>V`Z"#9!fQV#M"YAr@<tgl;9[XqS/Oi42?$)ZIm@pcoCDXZYb&)#jhL"9bZTB#<%pNoYe$a*98(6LZO"79anP,pSU^qCSRQ&BcO'RG5<;+'PH;(XVr$VIMtd63p%*f`O4/PQOoKN)T0j:K6B:P/kJNUOWPFPj00J,H;A%!gWroS$U1C_EOt;=7p(?=ui7DRjeM0i9YdSO3IiKP@<M#HSoWIlQeRehX7dU\E2tRZXB#ho:Ba8KTCc5D)l8%81/H'_3I2Qlf[X2%U)f`6T_8S!pp&J-5bC8_W>Or-UIMB?d`,JCcbUaO:4o]JY+,-!oL;S$Kg'!P50I!aO0Gp*5p)h2(YOeAVB`3>VJ=>Z,aNjJPI`Y&%.lSR"=1@imX6Z_Bl>;J4*P:rI+(,KVE1/^8<,gN:c@*9?K;:Z4Z8?9tV_1c?'kl_:d2V#F>.oWM6(_]:8*6&WEPLp)UQ9MjI6?!0%U??VUHZZ'>\J@dE4qnLQ[NED6\,/8![CaL7^O6mBUkZkWcf@UBG?jW+!^#(Y/N2=GY"O%S1RYg,*h3Lkai`)X8SU5!aFua#UA.kW%fOU@HmOS#D@CB(G0<n>g0/=B@7V+4?nY^O\^7j-BGb"RX>uX^K6E?PlmiOB,Z.R@B*2lL$*oP/NJj1\K'Z[bfkD\mANMO>dPu7CV%3rTO08=Pf0:>!/&I!'XN4oX4uF'Q0oCeIO9b;U5u:[+orm)C*F^0gFk[FZiiVimh-G;pE/:C;Y^oA/FS`%&F5SkX7ocaRqlS*JiV%h_Unbm&0cs)T_HWSSPHpT@D`Vc7L%A:`a1T5$n*Tg\+G2W-RII7$XsXF>^Y_UH%&ZRM1`HnJ)<gndY+5OSol"GPBO7IQO&[NP'sD%fq%Fq[P\@3g`16]mPYuk%fY#hkMIe^'JdkMC\"^Cop0F/*&fZZs5?^p(k.pL/(O#/`'9XC4oXM*IVJQ=3L0"iG.tlk-bFBoqe<es%bONtAT,onNfPi4[:.K-]N^l#n2L22HhssGsg!7TQYeKJGINTPCA\.I.2k@d5`Lk9om;:_B,7/>mlZ2VGD'$dOr_%M)VYQV?lC6+1%fRob;-?LAa2K;;0V-E2YLNGSuFFmCiA^-]VKjgT4:NH!ZhKH^OIMa7C#p6gA;+MLaT;c`K$0:jM6"*RfD=9AiVVSS@r#6Z8]B>3)%Fmk^e_*L9%jUONKeT#L$pNE$5V_;R,V[11bB,OR#!hD*e;Zr\)#dAmY9C1.@8=ShdjB`.lF03i`+?`8&NV$6=/"CsIQ[eS6g<N_g%WaB*YcM_t=l*G3g4SN0!s.k+8P91iq7_$3ZV8RbCRLf3q2LL]#ma>a%gt1q/[f%MkGMg16+,0'.L]mi$]ZK_UZTj)?<.DX*l*F!\%>f[)<AP*o$d$495ouD^;7JQALp-U3L+=X_JmaZP,I<@ZDbYQJO=WJNiKt&)u[%XKB3G7$Ma.IipqEML!]u(ggGY7LZ"npgH$9@%)%:aDRq-XP#4AYcDV@C:f^S9+HcRLgsb>kE,!Xq]?ga"62:^$oG(XUo_1a3r2geH6WCHJ,'L(s*pq/eb?R@!`I/IS,rtI(0e>bW$=?%i4b6jVODEILSd>8^:.NcS&+I3B7;,p2Qe^^ncO)O?A%iIpVno\7PQ!Ee.YkUP3B9q=cYdqFj^\NL,hfc16q`s't0p9Y$^^*IKuRg%Esu+a:?FQLHsR)MGBXETnUV&i']5W+s(l!qX2]K0T+g=F'Ks&O$7EiZDB]3s0)da7A\Q1/mnC37dna>!hJL(?jm[AB5sE^]jU0a>%q([<nrj`-74`=u/E939ub@'adV^);OrD0Eso/Ck>9n`\"o(*T'8:Bj^Tn7d;eV2?(oX2Fg1A9Ht?X>m=Q*5(IO(bng+TNpskP\n&%0@L49g4d3a)pmjCLW`Lg:D9rY3b?Pkogq?Os)U9.1o@1daap_p!U-qkF3g,\nF"]f*AhqL;p;J0mUNj)G+;R)-IQh3]i$`m?/BHa%$WOPjm).mA?(G4,Z_sTTkV6cG:(8/aD7Wnsq2Cj2*M-hhZ<XPL1<5sO6`(h?'];J;_j&hdRQ8+>:XJ"_KAb]7r)V8fi,AAjTTF@g%lga`[`aM)>LqqhtmN)-O>>&[[,*^cb":BPd*s<8?l4<S=9=bZ_?TIL6]VAs+G\@q1n%sUrj+72Di!$rHkI!l*2S,TN)$4A-=03,V%Z.$qA@5c#m:5qp[rsWM>lFRR2-Q79\V]*M[-l"W`()^/Jr:0PuO1okoGtdPE+_(bR1Q=FLk8@D.pu@.#;h1U&;p4APbRX4?m^(H2%;M*>7apc;OehMtQ0pOeDWMLAPDE/ed'oh=6(t-rYMj]H^T&+P<VT8dV<$'rCB3fI^VTV,lb=\g2L*D+^KQ_rV((3`f.8P/_V^`D+%=4ElS6jO9`RY8M0WP$G/,CD6e9Vo%WP[*4,n;]EiZ[K``KER)]-*K@rWIc8^/4FV,qaPSU1!&uE`3@Z0<bLDaTNLm:PLVotX#:X3%"0RnimS-p2O.#?1q9l\GR!>&r"A,TY9]cC3X)YE[Nf1Dj#%^CqU'5.t<`8uS."o_]S&/>m)*Q,=qWas5/#7>l<tIX0F*]p48GBn&%IoHbn-hk`70,4:o>4n\c\Id.?Nuo@9>UO[+H2WkB^V$H7NR#j.[?*F&73%rS7nJ#F-@BSN-&$@]dGQ2@.*ms+:G^I6#i_5reBL`2%Oo:eT530lJT8\4cRFbL9ZBmXG<F:K'Lpas"1R'R"8WouFpN8.c<p7l$e#2_qi$61K2hQK&EYZnk&MC'k8(gT7,M*:a90/F,l?JJZ%Oi??^S\$929K-%dDZUM(L<PKlU&T!f":T5s^h_>Hr8dDtNHdl8":uYe&J+[79?00<7m,ua/K=:4*V"YuM3F]s\07Ysl-'2NV&LA>%e2=c0G>u';mPmSH@j@PoTo@q;nbUfYYaE9BjKX2#^d=c:/P%BT6"Ej<836eo=O16J*^c>'s7;V&g!"GuPqD3q%rhm0+%YKqmc[<H%RE26<5M[gj-f9"r=6['W19`i2V\p5]=G>2p5a"H4!@VQkd`8+3W0hn83^d1b\RNV:!qEkS_d#b8IZ'/CK8k1$&`+6tNPee5@\:=S%!]43MVS_ija,e9e2D,Nd\C@o>Ta&;6Tb\3?,:pn^E"AMam,sQc#q3R&C9.@SKB^CuREeA@U7:au6(JAr1PtYA9;]Voqdtndm*6lG%hd$GQl.?Pn9:<Y'r[B`?1V*#G*82t)H]pD6TD2G8?U_E_Nul%[2_)k9Mt>FY(VKc3<=teWqpQ@ZeJeqU[0O0J]ZLZ]D+<qelK:iP%&F1*%B<@j`A<5UTp?I_sL+K-T_p<+Z?V$dD*YJIbbi.t/#)udJ4cqnUNI<_+PVU*$_m#9hOjC69O"]b9DE0b+E$bG#g1bf#O/.LL%a/)*N(_JlZ:fk+;2FX&tYYLO=_J@NmM0%cWHhE_3lLlF7SbrmtgL1!n?\HaJg3G;(;MsUsLS6X?^JNSgP^W?0g2eaYL;?JXDPWV_%dbCc*1e99%jE^R_B=Z6Sr)u[q%M=q3LbS_pg%M?rjkcbni,n(1Z=H(GG18tO5WA%`%kP1:]f]NCQFiqcP#Zn-L#Dq*3*j72S!m+/%0:t.Dc0n%gA&#e`K`?g$/mI&*oSiKl#;MZSTI/rI?VIob[Tb5P9'>_<2g3<[YgqUSm7<gT/'n%C(]P`%OF6h$5FIkRe7*i$q$sd7%[,hNb,`^76I,sV`LUPTc+WC6?U]aYD?24JT3Z1n0QJ:Glop#4GHn55;<dt;1A/?!+HSF=_1J_^.OLP8oGcOYJ5R#JPVY1M'[rY's%mDk01Eu.JVK[)g1QWN-4d9h9e1EEna,`W4&-$<4d6.q=^NZK\oF>baC-d^.c<@d-qX6m$(iH95=55,QZb&ioN8FAGK%*Y4\eW9Lp%G<fKgUVt1?qc<AgmiSMo"Yc[;UO5$H^$Eo^Y1;Gfo9-]<)NUeX/$Qr65&"7N>\:pT=EO7eXT"6@3I37EWC'AH.nTZ1I(d9BgH-3!%i6k'BL"q)*A2Q535;BhJgja^?F\s`rU!l_,5&KYXRE!os]`^DB4dS;0fPTdrr<F)pUWB=5@c=lm4V$je^FuTqN''M@Mp2jdP*8],%I2kk'`U%=4k&BV;WE_hM7>ANHE1;>0@?FJQ3q#o,#UTc:]cE2?'r)#7Y!EKWZRe]FKqHe"Y$2KN:9_<g0:T]2HhFM5D/X6I^t?M,%\p&,C[ogp8A\#-r@urZqO5n9Ic]\*EC,[rqHep5aH\'[#R[BaC:8R(8k%X6HnJ9G8[)UiIH7$@\4',ha?gcDAca/^i<P\$<q-DG<%1d`=G3]thFd)!H7>;8[CPKmO3jhrHb)dd[T(S``c'Ip73Zsq_\o1'snqRA(nmB]=I7(e^AF],iI6XQg^X.rj,0/qHj".FIU,F,oY%IAE+Dn5YhCe3h?!_%9a$i1fg=dp-a&9&7,t+um_OZ$Z$^5*1]!eBc&#rH+H(-TAg3,L$-o!-`g-Vf(@p-G$GmUuP$!G1hhOP,DY-%ST>9*Y,%%D0<=O)9Z?ZPbuHOV@/KRX,62PX)uj`f]P40B?$;JQV6`aroJ.?H,5"9O0=^,Y#%"tBaaB^$M"CObYlP'1o8r5'Z2r<m%Jfbu?X#Sh"X!%UmbknkE!fogsDaf/l=&'2`?cKYNr\.s#YR.P&+$n[;\gq=K&,CM@H'U1sHON`t`@>][IC0qfm!RrQ#Q>LK(^Z%r%FrN@NUZo"pKtpRW(5'dXe.Ho8f%pdh$Bq\s8+N?=:_AJp\)7o7^JJ7h$kHe?@4/I,0\FmuU?2ZrDp>e0#\FcrO:JFIHs2Jp02PNM%AgjG_61^qg>lg!hfqaToV3c+V4b+N3"YGP<PEr6s"^$ESo5m4q5,[i]$IHJfO9&b^kD'=npV_G):W!$>qW_hMk=SXCf\YXI0`Eo,%c\t/GYBjo;4"OV:;nXp]`r/`XV+Q@^X`L;!/tGC5WHb'#P5Rr2?%hs5+(d7^,OSZ6$I>-CSD#0\KXsAtiLY`CR\7C)9Ldq6L=;RU%;\1=Q+Hu&5#B/`)hIs99^[f!Bce"Su*PEPsN[W9[l#*VWRiS!.#K3Dkqiu.REq[u34Jg>6MYG?/&1H</`eO*o4BCkGL5!9\=Y^j/%q58=;+bB4PqtKeB"R]W[d2+Q`!%4GEo._bEU%-=UVqA]-LX1.\5er_bQ/0g`*LqWsQF?j7+m'(+2RV-g":6GOI;ndc<<p&:&cTnD%jqD[_TH&n3&i92O-F=l)#i9'=EpE28gRH;JeYUeW'jeLl$$;um:!%T$q6X$>NH%HO=pQ*<DmJa&pLq%$h#<$g?O$1b%t;5m0Cl?p%12G')>,`#rF@Lg0gkUek$%0EMZhlq#%F(o^+3MQFDbRJjKP@5(2GjWr]36VY5#PZkrQ/&\1&jiklm7n338aoVk`u=#AFCdLNMKrf%5!hCGCZZS"NRtNMNGSYCK0q&TfF,o#YE]\\c),T(rHtB]LY5T!o<GiW1"Jg/mt-&2Q-4LndlhC9CV,;SG!<>2HjriKHk?RpcUE:$%T]I7V?ut31l-$5SCJ_mU]@86R[ui0_o?Z[dAnGGX.]S#4_#PWZJZ(!]i$WW:CLh5=_<+)OG[jK]:"@cn;b`P,PMqJ:q1F(f[Q29f%/!Sb9@G[e%B%5+TV..T+.rd3)gYr*Q^'V`j9&JbpK]`grdl=0s9%#>)44!`$,e$(AKf3TS6rR1_A@'t!8tNcH-\]%maX<\OfKkMi%":j#]-Kb/F4(%f=7fC/4`'09t'J6+6I7*[@L1+36m8or9MoS:-WBLJth^,W3D+U[-^M@+e^:k(L`N*&GHaQ,,;#)_NHQ.WH_>6b!%qB]Cs&t4JU[qqo\AZpt%b1/@!\2PB\%rl:HVm'699YGF-b"igdUe^J)0Lf[,PHN6$EKJl>LbX&X)\=T;9#HS8+bks1QjirsT3&%<%r4qV7-b8ED=N8ir3@fQT<C)ci*c_GGi5'_UWVi0p88h';@FUKOq.e9`bZ`>gkW/C/),Ef[<knJI:Rd&'3MWCrb+W$%VpbhSg)6C<%c"&R)Sf-t?9XV>#XrHQ#S1isg&"MGep!dmT%(mr7EgJl]]ebE8q#r`--\WS&^J[oh43EIlp1Eb;T5;81513NC;+MK3JJJ(%kVZn(%%+:L$GoEa1"=gjn]]XJGW=%CM)(caOkP$0a>eL]Ynce+/p=2;<#-\]eHTcZt^I0/7\$8:Ybn$:c/e$?&9l_>F:Kqq>;XX2pQEq`F%Uf8R.Ar9r:-ZbPWP5P9aoh>lfq)4]C?0!(WB+M^!oDTXkM4Zp/Lo>ufKos^eBC\%s!GjB_0_)UY0`+Amc\hWFr(+JTo-`K"pt_>k%ONPBB$pjCF^CI,rnr0L2Eoc7qUdRlg[-u8`opV-bn'5"7c#*b?IZkf`!7Gf9A,VnjbX8C:oduKmpVI0pRiFW)WQ1EOp`pP;r#G>'%)^juX,l-\WMs50@_(L4^29pa,;!aE)0DB8GmiP5qJg.gk5(,`2[-rpmG:l%-?hg;#k6mkF,^ba#2EZ;4O86YVACVJV\]afCbR)>.%p[81e]]dNC08'or!c'+E3l9k/gB!pDGQiKPmg#$B+pZ2$:RTXH/*l^9LBm_LFC]?:S15mU#>/_!2HK$+#WMS<dfYe\.,8/Ep=&mJ%(>Oe=$AIBK#\Tp+97U*+m&!E'']U^#/YLa$Voi[4g`9Z$ON8"I(TMQq1X&<\@=5u+oK1f$F.4J;cXt')T:+(JN3,dj#=[N.R5e?9%>UL:/.7HPug&6LeMd:T)5%b#p1jhK4]!)BBP[DAid7_[rkf_O+paRVp1S@XX>kD5&h=Cf),M#)d#("QY#od,)1^!%5cbPQa+t$5,%T]0UW[WA(M"tJEc0a/nG@L7.OcicG9"V07ceQeNZeSWS9W3keRYGTcl5i7sgk/6j#-op`W"^?q_G)kjm4%fW>IFTSXkkWMaM7icS%\D&8oJJ[Wtj-ng,-U2[mV[,1?^T+P/@K.Sl#,";4Ng3rE$FW4=mb,U)#'@l,'PqX]ZL,E3!Es/-]cDs="?K.>o6*Al5dC=KIG]@R%HQ.O`Nk@N^!]ljaZ2S.hnF>0=-rW[t%q\'-MK)Y*W].h$CS8QC1K/NN?!>NqUG1EpGN(P]/"khV'dJo@S%2.\40=RnRE\ERn_n/#%^4eg>F6("_KF[+.mf\0`"-;>%f8?*/=+T3u""'[=[F2UZ5k@dBJmkMe.Al['(Ti46r1f8"cUdJ??:Y4#)<aY*fX:sPlF^`X2F&@:%9JtKA&YR3T-3BO/:ZZ1=1:@<hI6HAn"a^#E3mLh.7EmJJAso-Z42mAu)jSZ>oqUAC/:lYWfY/ralXINZ,sXVBMn,.ARfT.e!=JhA%bO&Nf''S^k4_+^1F>AGrI8,c@D$^%b0[FB56#3-kB-1K)\\4(Nd-#E8JcJ7:1-aCZoC2IE*RFlZHL\=S%J21d*'U5i=VFWUk9JXW%=&cIKYYt&JSh_#f['h\A)MR<m34XGO&86;`B[/M[K.iGW=-1SepAWE$f=0,gQ3t!_#am6g2KNmg&tn%*6(h`k)B4]#N].P`F9WGP%W!]73o0$q_"TXu0c)JRXIY%Va%-/W[o(pdgZQ0DFH(6uTO>hD)hC\+:!u(_ST3$`uCfIQRIf[p5`!gb?4q+GVP8>t69M<tTs7RK7%araqk.Kh.dTl]%;*/X@/Es0Y0&bn2f]l?!F3!,c.S9>sNlb2VgTAQu(RSc<thd9HVN\-l!C;)jnkUAX&H+J(4ejehl<_m--$5&mp%Z^&G+<Z7i7L[_CL`T$JL[b3'W%Q%*ros?ZBc^me(l03<_9B3:o*^%NpD]`in;J3K7$_+'Sh=At`k/dC5R<eN$/)d]lZ$@t8Su)uE%4#TmXn)m:<->N?U3IP9m9?K[S-rscbVJ@'?Ik#;Bf,jMg2Ga&K2qbn!Pj.Fs@[0XNG&,aUfXtLI]On"@-gRZXl,)&$O:PMZ4hUuV%r&&fFLM`X?I=:^^3+qjTqkkP'ZkVi(pWr$NAM$O3[@l/nk]+c$o5DDCgh?Q2ib@e?gY[h."ZqULmS4/MNO+rDg[EAXkK_],L?2A6%m7$Uni&a*/H9*&6^Ku0_I-Mme^uquuk?R05llu%\:Zmth0`Ci2nicI&/>#\oP(A^EchBo#c;>"Amfu4ZgJDb\p;%l]2jd'^"/;S$%&uD]`U:lrBgNdr\R`SU(R6IqGL!%$/09Wr[ogNb)+Kg*/?MOY`_$U*aNq$c5(G3CR06Gg.l"^P$r=3469bDV+aRKq?[fbUQh1Pnm%,YEC?RtBIT\+f2SnF/@,&FRJrH?6U4mHgH8eR3$jY;a9&Rlm_Nj)5k&e@.%lHFp?c.g2L2JSl0.U:*=T6:O#B!@hqQPgn`;?Y<aU%5jr&"J/3R-4j[YXGWu@hBAW8gQ."fU1jRN"(;!$;5O3k-eL`q002e,tTZulkbo'?.ZJ3&VSUiX1(qFKk%90jP[g0KApg=M.B`q(<%#90<I9g\2C[f]g?"cD/]O\+9PQ$=R_5g^[a[Nf^$#*aEM`jm.-RoYf6J?M8SPMalD31Vm3ofLoER:P3PkJl2hcUGV-jL+%"Ba^I&%<*R'W+.>S6hMq`URJuE7E^0Jf7K;h4&4WG]<8rgKQU'SpM#-.ndA:bPIL+t++`aQKVt4b%O#rD*(%9jf"qXN&%gIUIPrWU_i%soL%<mHaj2Q$OAVDOX.m/_SUF)38r<PV?l*Fbo>%M&&Yh%.kk1OiV'AEc.IDuXKVeEK_L(P"8^/Gf>+#;UoTcqlGYS'E,m5,e'!*<C;)%04(9gTA+%i-6WGOaGW2Z,83s%P]2C16@MaWdX2KAA]?4H).KjI\h[D^FRnHi+-TpQmuT,&XQJ^9lXrb;eF%?X.l^`trp](8AC:6B%:/l\YGR/S2IYNC?DTJ5JmanXEmD3%n,*p,S2tkJ`n[i3')6oS'SY&!QS2K?-.E1qLeRrZ%4/Jc%Db'QsN0@>?I!t'LGE3EB9WI8>%dPIqqr)7d3#;D^^;>#23$Wl@7cfUii`T[rH2$&WsD:L)APfipQg"6lYU>$pfj&)FjSYKI3,NuFug:!?jT^C8(Xke#/WMpc;(a\k(%k$h5,;]2l.KPAtCY@k2io9`re_/1qXCGgD[)&UW:JdL+DR/Bl8B$`510f8A[dlNP,)gul-1*%($IL')Rq;gEFjujT,Yd;ao;l5E8%3'$=Z=>om:@PI,A5jAb<fRl6:2p5KDU[mG3m[U,6E,r'7m:<PhOaMi]:tLTl=gLPfhlp9ZoTY:BMEb&l8<VU@]M[EC@;U97rn.hN%S+%VlSG]Y.N;MQh%uFf^8ObH9$ST`:,_j".K8q]@/IB(<4`o2]DH0IErNYsbJrO2Bj>.^!Yurnu<Lm:`pm57CN\XboHa8rc5ecZ-%-5Ol[^(@-ZL4cUuiT%eO"*gH-Fss1dflt&[[P",NA7$]GN]t3d"W+^kmalA:2-%</af>j$go9D+nacJ2%^meRE5Kf&-ValPj8%da%3V2Oe5V]%2?'/ScNOC[_eBF6$BO']f5&(L29.2:cjh9[lXsD>Spl#_!BF^S#CTYW@9"+/qa$8`p>PeaRF!SJO<.:(Ak=MP`7%d4t%F6?VFI-@3M7ZG?QViLYY%qqa7Q?1P)Sq"@H,M:6%?o1dhG4OX%R@HT+'-bq)Z:&8d(3"n^fsgko9brT!L56TiK-qD@1f9[Q=(/Y,%S8N%9;r!*`,]?8[8UdX7D$P+AjT*pY23-l1DfH*V@3Zm+L2GS;jRFmWe1VQPPfIkipN<hi"T\/K?8gZLS_mlHil%8G*g]:@NG#tW%X*fZ<PLo!o\ED6e],mgNJ\9U2)lS1)c?7j[jBkF$41fM$Jj2DV="lRV/)n!GNuB;fZ,@B52:/C_\,ER'^ep/t`tK7dpYtPfZ!"m0%1*fW*"RqVaS?]?lhrca?r)OFD"cItA(Fe%tRK'F0o($K-(a@lr]n)X0g'A_FRH7eO2nk?@eu3ZUn_<+MgeR'XiZ^nU=cfK?[h:oW%>Jf$UKg9o(/s?CBbLZ`:m.*#':=eZ(6`.]`9&n<0`op$]c*"F9p`@0XB3JSnjMg77BrCc:'Hd38WC<D_JTc[Od1#Tc=DTERR(QOR%]TgZ!n/$JD]^V&]FMICUfkCBSg<[BuON3d<b9j"Y.g7UT!u-s4q]0+8PD,TR;eP.6,'Du.m*O7KV>ck0e-,q_j7s.OeQp^.m[U-!%aN:*.=5KRbjEoB5kIFkq\+qKn/FGu6.$$CO>B)?/<LoX+H7UpVO]TZ)3LDqb*oGssN.L%&fZa'-aZ(eD+;s:_S?pi3jCQ>6ddHAZ%I>bq#4+p6E;8`AUZ,kIe3MaU%FmUlEI:SPXq/t[#EOFQnZ/=TJF!C%T>`r"JIX:omnbH.ZKe,(7p$s$G/jf]GYm-1GlBldrh0\W,%K@t2>BXZ@N%MB8kXmRWL+[i8HX=F,!<Z:?AZ@BR#7^L6COE"=QB\2S'HR7^bg2<IXR+D$n:>!TsS(ThY/D)Rb)aPFO%]t/DWGec1%Z3(-s6-+/HbO*+N(MBo=DJTDhpKR3mS5r7*RXng@c,*l3-s7bk[VGMbYl*_jZS9/_r!4ADapnb"3=*7G0FPoU4*!u&"*;l0=nr=+%)9(#;SDSU!30(]5fXg.0]*W#P-*r%q[P4H</r\BNFqt&6^naaj`"oKknR7*Y^jo/PfOAV%K=M:1D/GsiZ@KblcFIIoKj%]]>HurE%;d,Jfluj-DhCsh%$WjWC[oWLAeL2L=_Jrg`6YBW%BpdVo$+GdL1tb2X&g!Io65@Yufp?%d8&Es:=kUZ[XjeGaRN9;Mo`Y?!(Y`oY%5Y<5cc5?uu()D.Z/j*E6-c9>p"O`"%$U]c/Z3lW'ek!';hsF$6D.sq$h78bkVqk8_"jE$e3k%"NIdqD=1J64b8ibRYGaSt=bebpe%gR9GCI'Tk_WfJ-O1n0\Ep@8-qq(03".:!2q7,jWHNcT$tp;gGRLAEWo(>ZPQ[<mOYNEn@16Ai=q-en"s(fq>1fl6l?EA/=J,9)P&%*52T:^_<^t:W-N]jcgO(&?`!$<c^M^LOgKR[t(CV2G;tK9D1e<^T(BR=7J_Ekc7\eS]AL:)ER$g]"*]l?e3Ra=4#@YFnHY6k6a8J%C;FIrkaX0eN7ENpYG$$?T_%s1;a]_Q6"d25r,iI>Es8,T^Rc?)k6a7j\ml1,FO'hUp!XgokaX0eoNA\(C?V0<kZ!%JE=JK/5dGfl%ftbbbG!#kF?O;tn=UHIe9^hfNE7)MhrHc7J]p-h.>Oc7kq=]CRU$a_M5c=3bcB?rNnX].$T/9c0:@hIDo-_dL/rRQ_/s7X&4[+Y;%+tM!#Gd*)VkM4B:[Ra_0'A^$`ZPY"cb/X["0F*j)9BIoi\n'3Y4'cnLd>>9iCsR,*<(e27TsAT\)!!!XT"R.1G1<gbBXt*&]'e$G%2[bQ"N$fd89+5S/A^uaE<pXG3D.ATh()FO\l6qHc>684Qp3$&%l,#+WLRM7":qOL'@)aEn&@3.i`Z:P#.42O&Huu?oC)_BB7iZV:%YK-,A_moq&fG9l-<FVuZn[U5[>TDK7XS/rBrg5]g[Q&7DSkkP,McL!L^Y?$Y./&An<`NPgXFb:0f]1W;SQMbLchZ#nY0YcYMmb!l%ok1F>8Ls\d["Io-Ymj;8Y-_15*g!Zl"$^'P=6l4*>''stM)rABo="o^Q`/qK=;,2j%#,[,Fg,V!4e+Caq67%r=_9@_<EYGn:CEn_%V'orj'sdHW<K6]VMA[)Bno4#ie+d<]o#H1s5^\e3(,2b_DO\+WW0];U$bHFO$HKUGnVX/-(.e2pE6CZ]j)Gb!c)#S(Jj#TA6u\Rk%NU9`#^bRIaW'qfAc;rYR-MgWN?`qcRcA6nm@pe6(=S<Pp_g[Nk`:gXXd!\u(&NQ@DQ]gqf:SqJ\ET]i4c_Gg1kXQ[GWf!Vf6]SQ<%>,>#5RC'q<W2+]2NWjG=>0"?$b%_*/jc9F7I^a$LWBXufVfBMS\2ou0m<BBhjd&[(>oY'sBGG]n=C>!;S1R@1H=SR>>:LlXJ.fVe%'m$CZF-i"lF?85H;4I_\k&5G`ZH"1g7Y]em$l6d'DDEu&CjBO`;ej?*1,@<A^'.r_p[K^N)<5!)CjB[dWEEbBAu@`GQ_?"'Og1i#%9`4h^J?XL)jsj8Y=.crq7`He$O+^YXdb\PT%a[[c`Q@OC8Yd\SL$$Jbhr8_;DOffSGo\c!LY&X!M#fPd#0k#Mf9=]-;mSMFCUD0#%b0]j7b9)m'fp>"Xe^9))j^Y0_$[1'PMsBSn43M;_6FH1R]Uj1Mh9<l!<XLKD+@:tOlp"CEk@Ad,o`4RFNp51WZiusqA5P_W=nmEk%Fk"=Vo.UR#i[`WurT<uebLaX7T7UBn4krXW<*e+n/NBH8VKt4rP?4'c7J1Vc?Ndc"+8FT:3:gi4D>S7bol(](*Q>kG>S$#W.fjFa%LXWA`r^bq8lesC(0q3##bbY/[K?dFL<cDXnf4Q:%T,>$2/_uqRS3&%e45%AT]t>DOONWiL$cd6J)=2[)(WS66cc]]PouG-5X4GqP%;<HnNlSJ$g2;5HJ6Hji6=d=D*0soTU_\+lj66(Uh:2g0;Y4Pmj7F^#CZarN-%<c573Au3-<XeRqpV/+(20n4Imkop[rEq3a""*%f%M4qQFQ&N&$)!XTl+^FPA2fp&:rH.A/C"XQ6`kdV+Qs'&=2#U6l?YdRtL.sZZCg6*q3sF-FMU^C'<2;_VXK`ra#$YG'lI4&t.T4q/%E?,dn[>gB+o-j#V;IQ)\oVSctbgfc`(1Lbk4tU!$lM`TdqN0A+>TXOhLQA;bHcQK-W07WXk/8qk=KiA)nlfcWS?3i:CFL8"@gc*)%(ao-;;E2:2=`5bE8pO(]V/XVsQ+no)1OXo>FndU=KsSuQXM#=n/jJJR4p1]H7MV<)TBoDLA3;!>g_\qorn.2'5,a2>B3P/aq:gNS%'$*&"nO)@fpb;B'nKYrpD(Z[+dBg*fX"><HUC12c2j^;g6ZGuYCdQ5i8*I7R(?Rp-!+!rUj"/kdF8a/`RI^78]:=3rgf.5BEMem@%^?iW&?fa>Ma.LVpO)K*/XlF0a0O2<Fn%XQ&poScN4a42c];IuZgH!p-;4irGHZf/F)iJ17dmJO8()H7uSOBU4D=coh>bA_cP^jc"%Z]Fj(`GTn.<G-P4+6ua38$:CN!@hsGV:s7=`GQ&5lit*c:qTi`(+<LhrF&cc'f8tDR>ThG78=*;=9:spR[sR<(VAW0R9dE34!Efa%@CK+4`GC)\L%=*2%8a]ucS(gNhX$-U?Ccu0[Np3m`J_ur):5qkq#"dlPF<N=9*b$ZQ>^SjJf`+uY7&?Mh4buBd!eo3Z^ZXAj0&7K%=iSsPb)<eXo+jrq?&TUqp;cusl%D(S$YDnN(+&?M(t>Y9RJV\.DTs4ROAu]-pP<iB%QM!LmFaFH<F_:e^RRM75'Q/3*i\LXo;'[p%4JpNlg2<([\jt':RjorE,e%;"DXO94^TN=XHi2*>mt_q/of6>&\):NKRP'`/SY+0?D_BB$/jsF4>m%6dmc#XkiEL'3^H^#W]_!"g%0Al')X1Jc'(1hfYYGV26*bMrt3ib5JQA&OE24[`!Sb;_c<iMt&apD7mbDOhl<jd$"<'Dq>NGX$jrn#\B-F0"SX4L<FB/S2U08(l^%9kP3j]<fT%<7>";e*(W0R]>VRC?\DR,AX6TZc]Tk^C.N2C-&D#q^d&!=#HPdGHTM!9kRI!B088eNbUU*UJ4d=XjqMo.%.hd]QuH+%ebXRh9=^rQWp-V9cgipB9%A%T6S5rLp_VJ&p:fWLX6GqEfWV@?k(gflWNEe$m^Em7Y+!Wc_XaeARa,XJ;HpicC-&Br4DV-tZe@"!%3s36<24[`!SN2"%]pd6HI*B)VZArZ\X'.QjI9F7PcAEHngToC.:$876CCSg9<jd#Zp[P@,!$2>b6P9BfmMGb&i*s2I&G)=RDK.Uj%]>>rIg4FVelb9RJ$7/42i`Gm)3I2M0kd9hk>6C'aWFW.F5B>^b\7:*FGZLJF>P2fle3$@+<.V+)jd+mR/!T8^N[#A5oPWo(FcaI3%_`6#Bj]6[:Q!D=baC=W6qq,Qp/<3jpAEIu7bl4?K-#2#4YIQH<kK9>g^AKj4p)<)G`W!*rC[N/l\_IqJ\b[Y_oD)qiU:V-fF?BS]%X]jN>igMqf)9(XtYPYTL-otUTkGD9/lZCCB<r9>L3FLUC&:\pFhR&aC;W##'Ph/rKEL=CX<W'H'L_<B5)-FG8B2Ebo('F>QH?RfL%OD_mW"cN2_XIeT^6Qt:&ZbIP_'o)F;38@Q2+^q1S*$QofVZ+f0m,j$SU*JjeM9`kQ%A!1$U$VK"YZrdRM[L9DVkL-V3t51qk@plp%bL98q%Q9r/]+r$`Q&ibH[mJ.a[\!Zrpm2r_G:(WI-'<1JPs@*^8U&oh$84Tr70Zt$=R0o.]=G.hqMA[Pj>=@?SZT9rY6*]kg$qr]%T"WI2K5n%hL?iZB/LeG<+VQ;1h"U*l7%h")1nUFq2Y/4h$R0TF1Xt#L\aBqdjfRnS6aW+oX4Y)LgD2Oq,Q"6rX,D]J=$H&,<codq%o3WsGeS[5^B=W=`RsV7!5#M74=de_M>k0'[PCPV/1+]uRMnW8+Y)m)TB45A/9/0]9L:^T:V=bjQ^CnGp)t&0)DtPkEgc9W>jGpip%<'KH]CUts5JbZah.;pe\8To=5/NkW-:OCF<-+UR"Ep4P2(>SX&REo:n^>[B)=3^8sb$#.aeDhJ@dB!/]g=jR4Jm)9;qnh(@7boh2%i$&Fa<'IIYYkI>%Wk*W3mp+7[QHa#EI3Sg5=[QULNhRP9EfS*SO(82q3;q5Ch)?KobF!16Wc,A.k^d_ToIUof&Au,Fo3/_Phs<QY%@rMNT'J[929sL#3MCgAhR]?^8(UiY\`AV\M>PTt=:+G^;V5`8b0te&kZ2="M8hBUV>JrA3;g;Vg!C^qn(%Y=`+g":p\Lh<3jVVT>%;3PLG:pR>0[`#"PG]2mbP&hG_f!o>[5&J'a@/8&nqLs+IMQd7mOkUlq8hooXNPA.0j%u&`akukIF6>ItDD!p*/\(Y"O7a)>H*40=%(MgC)a"L,SWh,br>\DL.`!`bG.sP6c=XuQR*jU5uU3C`.hg>:3LVj!imNFegV+]7eEAeJGA@%\K)38c<#FaWAGE(gcfd5*1CtF=-%UK'IIa,e2RNt)u^>pRbhXCS8b$h$"!m#(;Nc]EY&f@T>!A&4IZmGDTPd#?]\AI;M,$S.kk5J;hH?R9:gqW;nE>r85WC9/$eNfr@`%/pCa<kYAYbXR+ZjrbVdS9@JWZ2qG8?%k'mQ]XRd?]5u7sL1e)'cT'BDVolbmcB*Z9fDbHHY&&Z,='D4j4.n/UT\@(tb3?m9/V0>f%l!r*FW)>BU?>'Oh6%J5Ong4rC'`mlp>(i<6>CGgd]=.[fZdp&]Vi%MeL#=uYVjb_bADqWFJm4UakO*e>bS-nUXI[hFaY<\)SEUfq%mCq?H@nsK.0k]9Ci*9e`lq<LjgnI1e+<6JHl6qTs@2%q22'&fFbh4&=1?MtMA<P5^bX^#b/=k>9/<@@'N`J.SJ=4/7q>72!740qB%F0MhBWGc7khk'5W/TYHD&P>OD[#c*U7!F,QMr^(m8ce>N`(S72_`=h5`Fo0dXAN9BqK&.XpCZ50RF[X.maTc[hX1$56OoE02f:3S%NQ^AIYGiH)-,51?*gk[1lM7]Or#3<(#]"=cA\I/KXacaA2P2#7YN$k7=9Icq?>O'"JqMaKdW1Nn1E@C5F+&,[Ci,s,4D2,AVTqoe%'dL=]#J3Y6(MqFAdG4paf@LmrF^kBU/$"mTTpX<:1??UiL'%Rt`Eun)q]iP3GdHUA*1&0$;oXaa9Q=?/p1"$H_/+7\Y-D0k]G\#[%)G9Vo00B%_g[?,lnAb,Lc(.d:TbPkPmk%0m:#ELe0*PTpr=!fa48Uta[5#Qnb[gHL)D(:X04T.,_dEj*s':@g$h*h05=oa`'][e:%0u8%;\T6YSmr0U,^Sq9V>6AP&dJ\t)0c-O]p/MR6+Vp@a];bnMec1%4TR$M&C&iB(<.@aKkZl"[[kIHu.R4ZJfLD8"k@![XBU'P0%.)gX>"__!NLDmt=)Co$4XE()-/k5h/'qd]^`a"@7^QRS42_1*d[.L2B9AR\_lV%&4[q5N=0'0F^.]iYJ^;W%:XlE;C)C+^PLJG:E%nr]K]j_hm2`MIr_=h+-3b3+"6o%G_XF*iDu$CC<$Z3lCe7<l+(lKm5)Bs>jaId?be']//bQ:e<fI2cq/Hi8n%1D_tJij>iL]me70%+c@8>?et$\i_%\%I_Yh>PkeWMkH'b^,ei?QIPr^PhWebJD5_%7olJ*o/)T[UHnn*V\Q\6(58TSiCUhuW<cZliF/S_C`I%QRV`'$S%jmVX1F2$2n=#YY3h!=,c+mTfAbMVVu\P1:U2?1Y/Ia0=dCq^'iUlO4#,MV3&S_(@!]me7]NpQ><iEeb3>Q'lc!gW/dIa4XibphkQ%n+F"J2)W"rDrplkekku+ra%hP;98%+iEeb3%2I]UmZm55F"WujW(?m;]meNO.b_"RVV;u;IBVQ+0f]-6IbHfY?^I[hp\Hm#1QTY$%rUsP^bC,hY$ULP`eaN0P5&bA?8H&M#IYR^$\Qf$p^2rtjHi9H@W85P'lFhY,Z?D4t]T.@;S9KaT\;tQ^YBUoQj'04b_>73Ijf:DC%n+CbY,.9^Q]A1)KcCR/#H!gMV5Nc8Lel.jBk^8-*^RffNSG/MtV[.`uYFkEgIOj3o\&9F!Vu-6irg;"'<kl&ta1!agG4G6[q0W(+%\Ve_/@91"lDm%a0E3%m'@VE`-rMJpmH)oh@Wm[2WF)6,<aa<uVgmk8aM"fMAYMVD+?5MMbkH=5qeU.7lUU[rUrHJ#4/U-@"ia0CW%(W0$eoeYBaXP[#]]&q-!<^2ACS1SleT8amjh1.L9p<.g]S.@[*jck4>YFf*GS?RfYmVADW!I%GPo"BLq`Ke3Of?^,"k&0irjn,5F%?9`(_n@20_0"TZ\feK#b,d)BqT6!<bbTa66YFkEgIMVq8YO;()Ee:5#Z]9D2h"i_*h<S]Y8b9'5Nn(O1h!=->*#;Ln]"ZeBff5q%%&oL^hk0-1]E'TiFL%uB(VXI.I>DZ+Fg3m7AQgA28MR2ojHXka'8WO1?9B5Hb[R'6^htiQR;9[Js5tIDo<W],]PMP@76s(&`$TnV@%^1_oW,fWmu>?[rIBK5'BBj^(6GS-#5PM?$&M3o'TnEBHlhOi;@8hD>$3df_/f^Ko@K>)Hd1;7c.+sj^u\!oC-VcU"eZp"^lO'enf%IU;,2Zgs7D]UaM;>Lc.$oVqJ(;e63qpZgp1]6dhBT1j-/Mo!3pCGm11\ei-,^<a^/mt:*sC-;,i"$=CD^ZF56\,()/Zh:jJI&Jl>%_MRbRi8A86]7R?Wn)];A_rS?]oNXNKELF.NGdeilQi_>R^_Eqh$VYQHJ'&JO:-XNOp0i&&q)m:Im6j_83,tQoBmK33&+;$HO16H!%;YJ,kDrfO/ki6n$V=L^!WK>VP+n_Z:UN,^qOKK;ke,,-X'p/&/_4AfrV)>NhXAJl.h?#oeR-I8@^>%+WfP7R2VN\LA<bU6;GJ9p?%Fu0-hC@QQ3Xa7?-,dpLEn?b.hQK]h?Pq1Tr^_YnGBVTM\oaT[%^r]]oGmUA0ChT'2XBp;2r*;[-(#90RhjTs-D.\4gF?#M/4MWq)%:<;=)IVr'RE@@/+8WC&q6G+kbDu"eGrL1iiZJ0K]iiSsJb>cPV\]fI]:W8dhWZ2^k"8H(CS;[.iKg=ndLs<[[pH8Fk],#%!EI.FM%k9n*amlF>6[FC-hn_-bQD>Y0@Lkt'F?nh?P*WGPS,=[F<FSk21$&4hW-j7Ya5d=91r_/'gTB*%IQTriY,3/%*LogsYNSiIEHRl`5%+3Vn*9Bmb0>O`.'n$4"^#h+-i4p^BpAGu2c"$ATFHZ[LjViP<`#9Wj3dg(j"6$2GV;gWI%,Vs"iQ&XM)/PJ3Pr3Uh@-.\GIMX&21%%[%7/`Dr*EShaEPoZ`\t$F8848&qdIpnqV/KP?eLJAn^6>XW`.AIFkOJG6rd`+Z''Pi_C1L3tnND3W>eTB`Y?LI[Y`.89ZR&<<A^%4$5X=MNF`@:eFL)EY[&r0Yo>piOW$=5*?2cUir/q/NlaAjd7mA1e"UFW"XoFRg/PeB37V^/0!Idm=h`fLXO#HE13)bRfOFcA[pYc%eYdHYr?I[.mT2mBo'Pi!N7#/nUtO.OE#Y2s*LA;DUJH,-q4,Vk*3iHCEfDl;r!&[]lX"XIlf@SiLcq(8em@NU+Bg[/ea3:NY>YF"%q6X$"=S!"P^fgaE:XN-%=fN$A06'3h\"GK\GIbu\,[X)Y<e&!X`V2Fs@5a?Na=_7I>*CA+pM$]1@NVJRb1s[hR!<6g(2n,]DhF>S%*]$J42H#A]`ce#uI?\7nLr>Lh2J3ZK_L)i$jAI7n^UYk?r(-f7Gio:MU-qa9VXVAjN+?HqO>(BKMVFpS9B9U,fkHal>C-?2ia@0'%6e$b/Y>Z!#%R;r]<0Rnk7+VQ@-$2t>:"eMD%pa?6h2P`lN=<*dmWbq]5aO9Mg?"$c^1b1*`/FL9D2+\qO<sQ0kb<c$]2oThM=%:?%'W1&XAir@s;@`.so1db-ml([3%'^RpAK'osc<U(C0$LCIBu;_('5`7Y^Mtn5LR?T;J&%:!'C+1c5B+Y(gI9hDqtKlBhTIW72qNeY%EccPZqfD]9@_Z;1D+e(.UW;%!<F`_Q867C-Q@%g[lu9f0N/V?t!"AG7+FaUG[b=MJD<l"kEW&;`A7RQ&Xep[?rJkL\PO-N!LJkUT%)DUO@$Ufgcb[4?YVNZB<Q%%g;2lbm&X2XW_kkAnlIS]_7'G90:#PZ5Qqgc+-oYTcimHXruN56edoqP%niVnD`_Q<T5`]K3gMDmSi%'HadYN^\1nL,HqsMRDkUBc89dVJPiAH5uMKftGr@oTCF.4Yh]QnDT]U1gc=!PF^?r;8f^8oF.Juh?9dg&8]R6+m:<,k9iZa62M:K%dmEEJ$\@ORgrG--qW[6:2U5'6#J`BYVh:'_(2e(6pC01C!-<.u6GKnBRKh0qdr0I.C)S@fZP_WR`;A7?b`7WQHJ26I4Q:2N9HbXO%9tq3KqN_EZFMcFji6GGb.HRT&RI&i*N'4/X48\Hh[,:IS_.E06_JqG<SR.7L[F7#M<c)oDh48lPL"BDNSt5T`H1"'D7NJ#N%l?C-%5H9Ko<Z9ke>3S$B'=Z'bl>L#]4GH\,%P@*NKo+V=L"1og!#8ljWr?-5e03\PP@Mku+#,R($'G6ITqZfT#A4Rg%($9:!(HX\[[#\#%*bD*-l^N1051CVn`Ff_VXkf&Fp:t3tdA6jo9\QFhnY1eEbXQ4#ooP)%1">D1&:l2AQNY-LHqiP8-&\K8Ktt\5J"EQ)dfEd3RtIbk%?6E!2#^EbB+^,3$*stRROAHM"SAgWN,66Y7$i[eNaW#>AiocC#e/JYPDshK%dkCcXJQ9@d7!02je"F@i_FkEe>eIMSSc%^=>Sm,)%_O&BY@,gN>In\=+[u7:4!6ni9XSuCYeUgpZB^f-7816o_P#=BDX5$Qnhkr7/r>hqYneJ'D\qAhj:!I+M#u_JdoScg8,B73]oag?>%E?YCm0(h;\X]LO7n/DKoe<d;PE!M4EYa+a)N@2IQVgGjoC/@UaZf>us22Da@/Cl_>M-,OGIPQ^!n4jDP&u<h%#bT/8DT@rEjX7>7%l42i+naNFrU@E2>UFN3_PmmS(Eg;NFcOZ`!4cnBNRirO5f"%ks%M6NJb7-gpQCl[JC&.oRY`YL&3;UHWIF+H#j!fe)=Q_,a<,NZb%Ld4l,fI2Z:=>(cE)#6G2.:qBtkpCn)1WX7XPRO:9E.TV`")S_j.^?tYJ3rW%a-iC`8cRCn7og88=-6TCVC7>gNF,GlXl7s;rR(%Y%,G&1:4FP/Rf=be20Pn/">5oH&qMiU@X#K`!^%$2%HZZ'>\Q5K_Cj@7iKB4PkL/\@Uh.b^uD7>Ea4d14g'K`/9bPbW4S[gu3H/Z\3%%J$?D9^,i/r4_YdB?qAVI7X,WT5AiFp)`gZ-crAAEcRN<7@=f!e[]7#S@D=A7c>*H62H&_MnTr&nh&0E/L%l\rH^L[3'C$%';GZ+%[!*H>oH/aUr:&s%+^\=rfeC;>oBG"%_DY%Y-PUkZJ;o4"I,4TB2_TGE^>t2%O]PoR.P:H?>TrEk"B.<fjL&.Aoo#^C&mEI]-=WIC%"f=.P.7@uaC=\IaWGR&Jd6N%ks'F3,b#b<$UFN`J"\=opdSq,X!V1djgc6R5/#4(1FsB>*8mHemOH%4m4K6#mP=@^1*XDe;okF[4%8aSf!Ubbl8%FZAo,'rRom2T.:Zq&-gEUo:@*`R5>dNg3Yf'"7n;dk=Od_ROOB'/Ue#^?eNV-&ST)QJ&%TR$pF-Dbt3&IY@8Q06gS%0g_n?4?n_K,/&g[.d*'6[8]6bGMq8K?SWHgZ1+NFJ)8R]6!ele^Yj]JZ(RC_3[-'lf%]!WZ^;)RnGI1i-2=)1PR;&kY-P%j=HY3e%-;!H0k.T2G<r`.SDDe$+s8*D3)4a`5mjGI+lg<N;m&+)0Up&4[>ADA;O.dBJA==o]gpO'514IAPDu0./=!B\p7?)Tk1.KMgr[AYZ%^XY5[W!NQh=,BeiYFK,Ep_)]smX^YsNm'R*`na42#M)ohqkOV)-c1hJD\W)>_,VS+Mj@5Y>J>&XW1_/B6%)i)Kmkq8(i@G#0/^I<%ZcB)ISb,m94DTYX]\%=4A4]>;(jV';F2k]b)GTgTD]2R9r-\A\jZI":o/N(p5)-m9mRK*h!Sp\[k6e?E(iCAO:!K8Q]o-!K>M#p+%ql71^kdtL<%+,J#%`M+6JXj.%KV7D&q++=o,F'rDalTIi>'c<8dr\MnB-&5[kgE_!.@I96M)(GqNfj.">Z*&Qg/'AHZtSE4/p-MT%enf9JYk*Pe#'2@FX43)g=Z3SMNG2kaAhLR1NIq!-,43$W!'C:mFdUc,T`U'thNW]IfJkiAC.Y@QaHXX^D%m?Vf`4]]6]@K=nG)J?%cI:5cg&^#1+>HQS6ZIhN:V0JQHhS-NqHO/%N-$;/ZsbF>7baM)Y<4O/)Pb!+p"?fWB_T\`gEs[ui]U7uVTB<i`e:)^A".4j>g3[;%jG!"H4[Kq\?..u(0KoE;bAZf;\&#&e5WAo-@<Zu?nl^mo0o<\[qS5$7QG/$;gi!#d4Iij0r;3!Qgiai7b<WemA@3!6@K'uPm7eO/%T:69%W,Gs*faXT!WlOReL#!<&V/Us-R3*Wal82rs;QAVL?"P"6c"cTdL40_]MO>;9@[G.mO#TSb3ZgH\@S;B^+48Ua,MW\Aj`C).%^?)H\]DV2\%]LMaHZ&Z_0%j##':]t<$PH&rV8N=_BD:;"B,?p35B(7:Eu;!e?l_1Ka`t>]p?N;,m,uZ;F$9MPh1"d.2]$[]XnHhH%MJNcQWTsqS5L"H6T@-+/6Q00.#AP%d1\gP_P<)$\M2q`n@eX6M;nmL2Cgge=2QUM)d3lpbXdZ#umo+euG#H%e<LU53RlQOkTHW1+%)oq0VBKM@cX67LtXkio[ePT9O>u&RHP"GV'&$AoZDG'/V)"M'!X<Ci/W%RQs9BTcM^pph*>%+9G,ZZQcR3.84LHo04e+j0H>+9)$%qYt]rfnK4rLh0rb]r!t>jRN,@V:lh`#1u4hc*T[g]h7[qf$M<\l$j->LHjmRQfSo7-]7DKLolrR-]kO@H7^choN$8Zs(a_[*9Z%8%EP(,/%KGuGZ0C\PEda2D-G?eT/+hZj"ooV)'mdcm+QfA(!Q.tLj%[G+]0AFl!.X-><8`>o53"eWJ+rH9][$YWP:(Pp&#3S>J,BJ"%*5aF:d.F5;n=FkHT,DP\7_65(n1ksCA=<1LZ4I\["Rl:9D2JC9_DXmGAM5\m0b>LEiFB0l-slIN,(V=N/<O="D\h3i@luD0',+"e%$4i\\R)G3?R$c)_-XN*J,(m'j$M7munsUP^30#;%/B\=G98P*L,!h+i,73"cLaeJeBM*;='KH4i@:On@W'`3TPP+JR(R%u&7u,23%,X>TH@QaPl/UWKl6immGaU5c&`E5;I5qa9KkHKYo$*u`3#sc=R@Nm-jOp[3a'-)+'@Nm>^CCE<=a]j>u'?:<b$PsHZ5Rh?2F%MI"%Hn<*qfuYsL@:Xtd!\!TE#Xfuf?tEL72E]X/.3(k3,Z^S69LoJX&:dEXUd=(_biG-"1E`mk0gV$1+^t=OZ:YGOO8tM:"5p>$A3iUc%%sS=#nH+eEKYG)C![q<B"Q4u,$a$Yc!.nj/OXr^M:_WpdR8Gt2iF-FH&MOo4MipU:UkNH3^;rfL6;3KmJ-pm]r$KEcNWkYt<f4t+%08ZtK&+gQ=*`7O"$KO'AN[ZaU(6K2Rkfo"c7:b@7==ON%o-.!QkpaKDEu[sk9h<2*Ss)\ahu_g>"XqObUa<kI!)A'L'r1i:a9f.c%d)<_YTh11DeZk;@n)Jeh78/eo`0_Z%$#"l[^af*tOG@BY"'B"B8K]/)LcfBCE(F8@TjU:m#g\?\PBit#aHAG1!=T*?"GB5V9RrZ'%$%.fO+VUY?"Bpr^fU/H_,&'\(4SFBp!fiN'i"m9Xj>G>=(AOehpD@:ZL%\,h&Fpg($(2Jh$,BP'VZ9eLjC*rlMhEQ"bXrGN(JbhQ%n-9!7aZtd.8jFb!!1?_qd\7l1i-QSn*&bVh$(%.a"d)(D:&poEI)=(5^n<g+#ZaAb&?8!b$4`^Of7GK/+WFhlN1l=;Nb)ls!_!Z-%P@-D5%hg']#nH+7MA/'eO[LH.$fjb$!=^7!&D:JPFU\tnS1llK&PL1JD4!5Bb(P=''KCZNE"X]&]EW5gn/Q:<^tJm3!imdWdNW_1%#,+IZ+R_Q';,i&l,?"*ZYs?3708?DFBTYULGd.c%7kmgXP6(2^"dUtk:rDc2XI+gT&m?"!W&t/S9HdpJ<X6`tpOI76T?'?ME-'Bs%6gRY"@>b-!5sPGV8,lV?=q)!#JZ]`%>Cts--_;RKK_uuCUkOpWqOT5LSH<C+fT?ou2XCSE8RquC5R/Ji#,"kAJA%$p3FI;ee(PFb%!N/cDY^p:lef73m:MHk+bCZq6H6i]O,UcA)HASXo6aSiRbG"PY4C%tS5CALsiK6MC-QjDA$nKWMpG`bP+'X8fkaEb014>2eDIVl,%Jf7.\JD_EJ@Z]Mf,ab.>d+&;S6?_KVF"m`m[fkO#@!7)u=c*n17VIm6b*'?G,/o^I!jYKT[4NAs=6N'2F"Cc,H<TH5RIW9aP1NOV%'@MGH8H;h3T[cJ^V_&mM#[5RjZW+SJ/qL4"-)Cu%;EN,pW9&gl_(V<D>8W)rV%@Gm/iZrgM%s$A7T?UGOVs_rZj_Ni/O46:&4"`=%0aG9S+e[!Y]g1Dim*I']WCVpq$J5F2Q),s"!Gb,1"2g&*K.7`BAd;pOi<TM'*6Fu[*$U6H&E\Q<6q&=I-u-+L*7u!gl6[Q?;o&-X%?j]2iUB6&9_&QFN.^QVh,1nH7UFkEU+9J4aGaYR@U=OlF@!iU*5tS$O%d6F5'XeQ"!Z__%'(*S.#sq@"P8H,ncj#CNO^=d':no1l%\1Z.F+fh?V5i%7"J`:)tg.%;U=9;V&"FU`<Y!?/u!RVs?A0Mi*li^EQ6?6m@OJ/?OCn7<oJm!),fouVf%t,LH%873g=qXhn@+E'^%,KZV_oHObIL.qdmL0./QUc\iu?mA+g7SFcAMpsN0(8M:u/Ab>l%3>e;F"iHH417^'`6\mONf<EMCEQWm81#0Q@aH<LH\#_d3U3P.%'51@5F:uq``>4TVAUtVW(d%*%an.H0Jf0FA(C>dhO/:P5>DQY)JK:"eJeAnl1sUUu7iW3g$YT\tb$GW;.UUgp.)pf]-&X+E_l+,B%K`f4A8]Xff0X;,N*0?q_,]KbnK`2D#U@5rsB3jFD3Eakl1/$CTij*T4!3)"ao0eQ?WX8;)g*h%JAVl3E=?p"$BH*V\P$T\Z_pK&i%&9%\N^S"7GJX@#bA-mr-Rflm04rcUS4E3)UBWUJ4TZ4g1JXA!W,bB>W+talDgeK7Fact"7=E'ZGJbo<&&`IMaU)I9M'2V%PaH+EV%P3Ra0$W!-2eWNUmNkl;?eE,i?pBIW"57o7_e;KL*(3EtqM0SWLS3YDO"&fPU+@huO%VYtr<$-_S5_"l*TJoO'!h"o]^;d)e(to*$%Ks67\EbHWb@gaS&WY]V+$(<!mKYGe;T""&t_+H3d)+gQmM(KA:*nWeY=2TZ-,)8bng/qCKmn!h]SL@BfOZkl[\VPhBXGuZLnO+'-%:hT!sZY4Q=jb*hW4WogigAmZ[&I50<f93cnWQIKETI,6YW<NHN;Cd\X`5+blLjY&_Ba+RE+P:MK#uiJP6R"SHJqO6"s,%2<g'iWJ%W6$C-HGJI3Ee(D?0<>u.71=#6*=_J2H]=$p\;ig.io.-*#,"1,0GoJ#?>Q9F&hk:/lr[4R`(gYSJ:Xm)%4$%&?uQl!)-]@_+dufr%'!b%?5aN&0A4WMM:"5dJn9nOD"YC9YB.)]WE@))r4??jA4rRsT?pS`[Q'7=70T\ih,Uk:Q?s(QLC8/P_f/V==M(BAaCk7C;+t_^X%Z@omKWmEpT<l4SblK)\4i33@K"UccC()bp>d_]t!+i3a'CBD[W2?5*5E>$VC_Bh]-#s;p!0G)2=#i?r6G3BhU`W5&DL]Uun*b.KP%OYH"<(55,i&CIg]=I$j-@dlbo[s3HX,#:^qW98me&tL(7&=P;#%u;kO#"JL2,$*p+P$XeqGb-:G^a09`U?uM[<It?CTn:Q8aQTk"%P"8g(0-pZFP!qpg#`uct&9+9u5YMhZXJl^:/`=UBJq2rj:ksSU!WaNc+.u=OEX(5f_J##U:-6ie4H2g-+44<tOAup)U*!23=ILVQ%YQqfX?ojUN2dhdMB`U.^+kdHsA#_?h2(KiE&sGj6E[1ur'MO7S3Wrs2'"uH07*Mnf+UBoo+s_u%KN/W7(@^u#dR)b$Ck9*b9MX#X%1s-7G!)Uc=EMG7NJ:9Jd81Y)c0bOo">G1Ga&qMqe!<S<?JHW6rhI'$-Aj[\\"D4I.S>3o/0dB!n(C%._";*H3d3&On'JD-s2ar=#%C:Qn/"jJ<J=qFn+il>L4"$$MO*Cm2h9G[e<6Q]AALrGX)@Tt:2@6Om$!#B]@C.uifZ#m[q9N.i%g(NTXZW^mlW@lCSE=`0B,i]$Y%*]tn2^N$=nmZI,XH7Bo48tCq-.:W`nc_8@3(6T3FpI$n"<`J/\d\onV;dGao5TbY+B@&Ab=BG/pG[bO:I6tu*9@30q,YM8#DePjD%UHmX1FMera>/N7\b_8RIStPKj$iE_&W99nR)5&O#_l/5s)bMs\U+%[-8W_:#qLEJCM$#14$Gd@G4C4^u,aF.FTL)R31.c\`8'*G?%D#fPi]hEZ?fGTs`L^@6+c%nWU=qSXt:1-W&6sOZ;ajd;T0F*AMK#F>&$m`ddS?rR?LB`\_&ok7FY>eICRc-j9_9rGn[YQ2*B5&h+%)\SZ/;`XtMP%a'>'.]&\U%X#O.H)sg7RN&.4X2'W@&*fHNp>h\@AG%R`8C]R"p@AjfbtLt@AL`^4AG^7ga9ajmZ^%j,XMis:aB)=%/OUgk*$^90)Hu[p2fNGO[#b\!L*bdh#sP!mWZ(dSdDl_B%)e56A<;I3K'Mq?+%$[j:8fOr)kt]!#tNohTQ:8/4Tu]E1cnKt(M7p=%/7T5]Uk?[UA?eEj'+$#5/rBl<NKb_[&dVhHh9-'12$q/S2#QFblnB=o!=TNoXYaG%^mtWF%`;ReYt;IO'1kV/Q"=XSK1R2Skh%4a%ROA0ZJF<NN,nr3iU4tieUBSW0)'r8ZQmu`/24m4"4K(+UCFV/r!oQoPOcTY!r\&&*P&!W)"P9cKp/"+K""J1)btq*:J-%SE4s3.D%PQ69i^Z$7)q_G48_`u?5)%eNjgN[4?hFns&+5e.D3UJYIcrnK2Y7#@,@-D*IC<[tHIsU/AM@<F(c_Sc\][=ZMn#CL`;c?JHc?nOE%Ps%.+\QrLN7.4<[jn7U1\L/GP2BJDG8B93Oik0=`2q(BW^5^g0oe(T[fG(TpI%ECDbdc7YpuJ]]=f:M2`l@RD+rH(Gb;.1-TJj"/%V$ea:)j[cIgUikoeGD*pDIIg?LAQET$F)_6I8tIU\Qc4c^3bAZXG_lTbD#[_RVP'/TC4.O7,uP^131kep%?U$ng7J_AWnd:j2cMl%d$O%DbgPa$N#sflYB-0(('tsCF/G1__VF'+;I8aidn$V3.p%.bG;CM*q/.CP5CJdYj,nb;\!tR%cG`A)<]ZD'g8$0Sp.CCZ@AFe)%7eOf5cKs+lCA%8tp/1;H8,>(hVUn_+.COH.:*T.u(V/Ar@1:5edWfCGQ<jkhqub6Ub%KW`quLiVa/UDe#p=93bAcRRPBnSWh.jDF%ATjKuAus3Km$Rm(570\097_/Cdtg%t;Sqn(=XMUe!B=fYp)a4ER-uUI[>;NNZg%.NF@=^#qeu'&D(k4$7-!*p._5KVmP.WDGk^7l%N*>MW9/\3-/C#K_V4R18b4qIiVs<d>!_,kZRB/*UQFdgc5=_"q.MHEqh<S6?[:3.+_9g3nVsIh/GN4q#HPXS`kNkbL=`&I\>;]..%D7,@IK/cQ]]-6e1h@1XO\=7ZaDA6nbAm)XRn(!88RJAfb&+RZOR3c"7j"b`-a*K3?qq<BD$C4(nUh=TR<(BB_X9$EE]MVhFFOm;1%5brK[chM70UjlE0J,Jthrf?BQs+,n#p#j[$l0nZ6J,=0ahuEZTr*OsRL]@"=rn"?Ws8MW)r4i:!s5;8]$F[.]Qt3&Pkk2Z?T77H%%[d-]<H;Q*019>6(Q@gFt60mi)^(2u<U0Whnenqce<U!b[GAt%[.S]o,oA3X%fXD'sl^?+c*Lo,JoIA]omq,hsS9L(#^s_!L`_+X0%o6QZY`g'uNPo.QsPj.p,+7It@>H9%>W9Nq1[`b<++WkY!NLqrtjKk:83b&&33qiL`<h.cLmb^.FiCn_co=Gf$[g$nUn+r0'pR_)=%Q)3BbafW3nj86gP+j'6>n!'_>L?0[ppMR*Q?o[WR>R,Dc:'QhOPWdLgm'W@.+RQ2?%[M=Q(boCq[!23"n'.X*3pIa@o82S)NeO=7%&q>2`)`r)slPhZ)m>Kaff<F`X)o7<?SCaLA^hK$s4fYqk/<_X.U=se(IL_ZUrf6!l@4p_c'&rAACa:Tc`R<3#,J@U_)-SFt?oV8/%Ea#cY,TpHtpcXE]MFV)N36.jAPo327A=,CGobgO`)YT>@j<-Vb2eK\Cj^X-o9<:)E#TAC/6gn'pHS"V0Nhn&peVs0G]5Op!hbUsP%O,LLX<Z7,H7$<Rh2fR=EDBJV1&GXO5_,E.*I+7JuE`hP#Q8b0ke7";LN[guH*psVmor)ND@bLL88)M/JkW,r.YCen(ERf@'GC.+#%dB["d8SiL5j1u`]KRGH@<a;OKqga0=eP00cT)+=!LnpCK:^kYo.Y$J5:&+u.,Y^0a2C/hnWR#$.]:.2B]hW=U":agKP$H0lP`sb[%(e;YXhn]W[]_<h?(i6B+e32,E0G\"FQ@\KaWBh*'j?+LE>rF@enO=/NHM<50/cWpq-?>u!`0F]AOqF++93@.L;id?XXNW_c+Z=RH%iHH@!Fddk#VDgCm4_VNhj_MDY1[m_A[3egh4h],[XHo&Qo;pa0,%R9=LrK!LY@(3S,;b+B7[Sb!2&W+.PG>4a:.>X\'X%sJA+I>^%$g'QErf\2[FU\;i,.(gJP@k%X4#B+=e-)\3*^),/DQ&5b2ua)&dnI#"I_@%fq=5en'%g</W#&@XipX3rSok5[K]S*7_GSTTT$6]L%UIa6L\Si+)Vi+%9NNB"hl!6C3R,,PN5_/>:W=F0b\+`B*mHetFQ?INIYN(foG7DCZ\nSL"qmu`<8$=*,q=R?SkI8Lrf4Tndl+F2I%d<@_j),P,Z6r,&:aiKnn?h0f7=J#6Qo.E-X7c`m`T-!ZEd2BEk^=^80+'G9.V+i$e!F?RNk"E$%:=9lYL5oGBFJn1[>>6%]H"Zk2%1'(-jh",['YNs=&:9"8!K!)!uG?NcQ]c3!P"D\$;@J26``e3_4RL&i7(!(a=Aj$@AY^ZFPY064u87@6!=7;WT/-W;U7mC86JdWd_%GIY],F5#^J]2RK\<lrqqYUJ0%'KN&L*]Fns91tRF.qQ'4$C6VkNg's<eEGVWUY0]nUYI=@ZW#LMg9[LLrn-i_!Uek'1#,UuipdJD%O;PH4rV5!alJg*JZe@u9q"q82X<-W>^/fLeMfaU.8RB3P7?R.f4R];O9"2r`D==9I?K#J"/-Z*?jdpEm7CuWim*!krQs_]Xl;=[R%W5VZm0oU0)DtK\#q`T>f[-+1'_*L-K*-AKN]SAJIefY<LSiSGXiTmce4Z&@mj@t1_h(qfrp]=\b5q^YrNlpjT@\e;h9@GTJESeJ/%%h-aMS<[cGUa&*^T:,.@b400Dmm"M5mrEK!Q0514s3l!rgkki;SoW>S,Q>\o3jTUuS.kMLCEg0>PKdO\)98%BINFi-R0gLcWg`9:%[]=2[[9JM<e0=/NGE+gIrh_hLX]p6]K2'*D<B9KW('YlCm=C(<d$:(E9C?=/giq*HmAc]<3"($uC>It*YS;MRIo!o>r;^;$^<G?0%']it28a[)u/QiL"10#\/oWok"hm1liPrR_#[1&-IL%Ls!!5G=*O]+s:jC>C+O(BeNe-i[#9s@DYIg<i24=Q:uRmbXDA8m7a)O;<2%[[B&B$TV6C`k;:LMbBJ7mHGJ$'!UlQ*^:4.A*#Qh/EVf-)TY,O_jWF`j18\[Q]HS#SWM<(6E$fF?D>qO(#Pbh?XQIm(Dt1i2n>*'%U!Cfa:eT4EF<HtjHsP=`@^6#WCrtA:5?P<O?#casIY_$q4]kjFm<odWkL`/THoAE@PUrB1^&gPC"+hhQchC%t``%F1U4^!WC8cK-%RD[NrgAij<M<2VsQ4F(^,83B]ca'=-XBDqib*DfZcE8Z-4Gd]c2V;9IXFCWB-0p&YmO>C1+$[68DBMFU(;0aD39oCU6R'9m^T?:h%d]I4e8eARK^&P6`5_RP]8%lYQP]'a)*!&#LP[3bO\fX/Eh6&E7mC38%35c]<Q-dO>,=#]&^1Or4.["6D4dA(h=hl,:d=a+N*:FIj%Dief(aLNqN%S(nY/3Y90)._e[Vj^\blL92@P%Y$ea]6j]WDJ`/niDonmlqo^gXc,n?4"$`R(PL?Bah:nh1_St0#duQng,Qk5;d3$%/@Y-sJ[8W<Mf&/U_C1>hn#F/Q`GYo09H!1G0Z:SE*/s6./Xlf.hO*PNC6:="I=7._IZ%bnfL@"l8M%P@,PNc0_l6)io>&6HZpF!7%mCi=:c\>`1^CQtQqO2%*XD.e;"AHJ[)0b!0.)f3Ea2^f7^Rm=F%8%[:&M!E4.T]996LpCp4YDbF%W9(l8>c^*JR<pYEfP-1nAJDW%27phmqjK/.@?a9%eOXb5!n>!DoIkbA^)l-9-Skik6t^k7k[!jss7kI.2Z:qt\6t4[nGW:N='].^"'A'WpNT,b"M*jjL8tEH5D!?,%mTQDe!J/mUDYI$?pZ*h+hNC/*eg@6+GI'-8#).YD5&fe9L%k)HRG_hl#FpBaG.h/am!;R7[W"Is1nY3BMK@!,YfQ.9gE2]-3d7:^%f\[)W#.4dh5uU\fHj[FWpd'UJc'BBZo`.@4ATC0_"^^9[E=u"Q"+[F)MJr>QleVW-8"\kH8A*.tIK_a@Qa--2HsIM2(*lpD+aCm.%W?oIZ,q@iWE'DGO"r<;&#nX$pAUs;[H`)Z:9@CNB`I<P5!XR^.a5FB\H+/2:4;4/M/Y&A;lLqRi0Uen"8_CHUE9c9fo>,UZNh?GW%l<N\ZAfn8<_Z?Po.9#u9C-:taDN^3M\a,e"I'gp>'BME;5L]B$IXg`*b>4ZDi%VrG\3Ds16.k]UO8dX3=@$7lJNDOX;O'C"Qod*]%,TnK#)Hc\,6R?[;$P,4o'a5cX,]a1q'8dA;;jn*rdfFhY^K:JpU_q%c0s#N^XMD-XD3.D"UN_'1+(l@>dIN(.]J8E&^OHC5f.80+%S';k*CBQX+W.rC8nV[YGk<e[QJ("`l^`+iO'l`D5LMFILZ;TW+*5#nl8P)e^QLIc4rLCHWn!=A'"['<IO=!`obgf2aB)_UQhmHFl%VeQ2W(LZ47%mj7pCe>V[6YEUg+[B0Y@L`N6#Y0d&'L^2:&eG2pl)5m'DZn84neh<Vn33MF1Z/F[OmC-L)j(2f#ndR*(R[6*/nT+!%RQ^CJ&=:nC^pTenOo]6K3[<tKiH_4DfW&$Yhmi[S+JR]GZ4_`kU!dF3!alu*-Eo4jJHa!Jcc3u+!)Ke/PX02Fr8sqL#naP'G^,7R%L<k-@dZBF;H*`&5R>?<4I,bPH^"c\ZXS^GBqX#?Z\:`FJi_C7X]"7K@gD3!GkP<-&D(]7A6$Wk!EcC;g#=gJT=)C+hX0V<f5)X^K%rZO^]'7mh&Y3@FChZ0bj1t3J)>QORn@-Kfd)?A_C*rFf=]Oh_p8`\&t_>1eJk)>5F@Eoa0;GV=2I.@^4UsB*^0hnV50]98#8dXj2%NGeh#SeY<!?Km8ea0?Y*71]Ce^<c4B&F>f0+NXBQSe<:-%"J?9^<9r6E(V3(E@VnSj=@QhjFMU2/;0T27t9)Fd-hn3X(ZnR.T_/!%mq1.@"t,LUnYC\LYWOF/Cbr8H-)c3#)M\qHT-'4RSfBUPDtH[F2#;[0-c$BSc&mXE8$+$.!%]9VJ:]of;/88=m+Ifc=5f>s2#"%$%@k?A\(1r$`beq$>o=4m:iuU`@jeZ7>.HUm7hH0-7n;%.;?RbID9SLXF>':"0nN1':\\M6]ro&.P+BSIZfoM/i)/#lo7F4Pl<A#sM%CYj@2J5'q^buf:Hbpi5PLF_K7't,s(ieo'&7brdJTUU)M8guSBqmY$LA>ar8%MB(jDQ4'-a60EJ2j95RVOUF;F!JEG*Uk<DJR6mA%fCNnhc7V>05JgJF3,8P8OkWTf)DD=s"u=&]d5g?PPhY\$mN%oGVBq`):m6ORA-?fooJmA/6<\&8b3)>ZUkIQ);Og/ENHLfLbPD;X%#R?=[_upm@fPROkcCTl@09ZuagA$1fbRPpXm<_n#?$CDp@),X;D?kC$JnnVnX%bp!["+!;AWp=qqT(g!?CVRVL.9N0?^,NMXN3"R%)(6boqTcFr7&1?qGk&q1a)gKgoSPlp9lj9sZG`@arN>)''CXe'/^I;hp`g1b*q+MqJ`A+sDH4']o(nSHIF):KI^<Is.DHT&Yrf])%PBfX>:)18tKuOAm@^O/i=XK#=Hm!4l\=,Z0H6Q7-dA``<I_0VnJkRm=k!++#.3>87"Qs%lcM\Br_&@$e)p5+`&RAqP<d,38154.7%;BkZ@^!"Ije2!2DDGsHS;0grA'uY@K=eEK'Y6S2>^C+f#L#1H*iGOo[(nrH[5/fRup,[K:TKM>!UAtjU9JaeN@(6ln)gSUI6THTL%(h-F0fH_9Ca.lc(3@fb7l:8>!s2sS6.A?k3KSAo?1?9tG-W17=3hsGQQ*\L$N$HHP_l7pG;j7u$W-)>qr/7Hm8[?$/d%pFjY-^<`%ko)B1@I--D%?c]?EnBk%R6+j@a-dQJrLC4^=CG:!pc!@\J4/1\L[nH\$s;Dfa6R:E:'0SIb_;2b!o>83O.8K:I`SE(D3.F4/n2Mo%3`P/94DVA\k!8Zbh0gZ/_j@9rWcT&Eh,f-u_8,u-MKuT<bVMG[(lZpHG8<*G'j+Xtq;NaB,1C1iVf'A$"GZ!OaAG8;R4FtREM_0R%iT<]qi3\\?/du(8C]HoDSUs]?@4I2ASHT2.c]NKcZtgQ&]FuKq+?1gYI4X\JT3\7^?KnbW9C_BU^u^s7[,P^T8aN3%?PX/Tda$mU%MO!G3`]+hTX[I!UatqA=--JYX@n%@#K+jR\?W$e1#eVG9L-Ud#$s0`N(!Xm?Z=ZALZ;jB[T:=ncKk\&uV&ODLo3&j["W:57(Oq?i%jOY4+Z4_YTfSB.iEGJ(Le"JY-8rSS$>mb#][/B*jIFggdbd:O_U5lJUVpp:@,*+&JE+T3b\W=8ih0PSZbU8JsQifGL"B8hJN\lYf%EI`t+;Za/g?K$fCRV(?EX23.1F["*&#r6Zh5KLRX"6Is4cp/Z6h>pse5I4Q,.S@lANO#/80O9A8r8A;>;]lh<-<E&4&EG4TFlWuW%$anAT7B"l,TUmnL]S$lh=,**G`QZt[#1:84,7%X$+qPrl+IBU];%/AD?eZZF66oAAcdT7pr/&@%,Iqr2d`S&lQ<=K?):p)k!BkBJ%Jd`rk-[>##/1dlR(:T0+PJmj\"nGM>eWO"NrP&2uB1X2,A*kEaEDrnJHM=?L5>j.$>R&b>:DXTFj^u`Co*Ud9'6JGQ(,%IQ'C4MF%moCl*6G&=!*Nn^cFH()_Y%3=mDf$7O-.E'BCT5pI-4D9(kPtHVi9@MJMs-IIT!_pg_j+PqmFS7/Z'!IBZ.'c#gecbqa&l+`(IT@5%F(%"ILd,t1E$F#1jPdOsp#rG%R?9nVL]0/g"<rh@4g?7smLWaaGHY3.Y/1m@>`e+m!?sq,#$aeA)L1LR@?^"YK!T.Q:3t=ti%8m3%lnCKNcX@K6/7T=opY^u^c>ltWP?]?2'PUNm6=Q[L9d\2R#K]M]A5I+1pF:"idhGlgbtP]sKnM&rPrh4I[F,HU[\&i>/s745h/V#`%"h5%)7,\13j&]o/iaOVFq0OP5i)qjiGYG]&=FsWi$*rHj'+BuC548jGR0BY>=+s]hl4#69c\;)IJB"dJ@MtRnLna1\Cr<P=Ntr/,%cs):D;';UkFFq#EkPl^L2/0RQ4HgU%0OG!oPS&\i'bP\U7.A!%*L4Do"daffOoYk?l[@STeX@ld@qd\C+Pn4Z.3O5\a2P9!NC?(O%8)[0OZ,RBo$a,JeFd^Oo(Vk'M-fIS2C9"kh?;<t@6`[)RfI"@V$3RnUn\B0HA:.&.HF-fVd3=#Q8J#>U4?C$g;h%!H;`K.*SrR>[%NBd"%MJQb'!B3IURA!HQDdOMQNYYs-F23E3YL$O9.D1V7\"]j[V4I2--/lVJ#t2e&&jiUJgol$"W<uP'V0XWdFcB8"pu`!?Q3AS5%J:@?Gn$0d$#1@_<-17n@$D^uOj#fKSmN>+=@r(F]-Q&2F`63`Z?upgYP)Ap:E-"Fl.1nk]NlhdTA0];!:.rdLd4R*q"6<WI,iB<p%ECIr4-1qE;2F)7!09h3hO_,Pt&$]NX;>mbM>^0;PeCep@;Xcohs'Ba_SrGJ&FEkjG;d`@f/qT^'QOqO66'#.\_)#97_=9L8B<i[Z%')`EJ5^hQogqMc,MsVf@YuW$]H<uJ5(3@AmnMFng:&Q\ZOlL*5bhlD7pUm9Vq^^=a6,7OVN_WQ_YPd4u$CcNWe4jAG0'>+W7OsQC%fF\o*id>h`J@uW"o.\aQKXbZ`!B3,!T\[$#HWN\r)F55qK&9#&Bi3oOna">hhfF+\iXrUh<Np&=3kn,GS(1?o,"WKI1KI$YbIE8&%YGal%FWR5'6rsHn`\e-d\:T8"pQ>-kf8[`Qs3ClF)_!,.0o<j3>m-?^oLZg0Q\.a<S@R2=N2#f'`RX,hDVS95ECBW94gbd&]H.*p%13Jad3.`2Hr7dQZ)'Zldr$FG?n)4um8RJVQ%tol=*8*I5p3-k6Ohl:J^0"e5d^P,^BX2p7,gdX$$;\2DYADj=l%bni`m"q:A/4N9%^m3`C>>p*>:_WobcYOE4^WQ$A6BEdh`!!)-ci[e*XLtu9jlk":]B%M<M3&pOZDa?_j(GUL;[&mG`#R_D;?R-rZ4FO*nGRYZ)koAN%<=/73;*47O8mT5;Sbj$m9\AVW)lQHSc+MA7g$?<"o1B&r90WK$^1XRjpc7ce$]mU^ZMXF*+G;V2)A5i?p$$#O;,gEL"!"i]T0(*R%P8o,^<r2.oP5cfgMnXrXpa8t!>0\@'LWsk&-%5t2D\-TBO/t3/]kd6$*N03ojn7e\DU?6D2WGek^!&15U_&j6UqspI,!s^qHu!Uq%H:<SH$A6SbB_/\n#C-7U;<DcnnSmRL+6BV0!r\"j,hld^ba[.Dg*A#/BJ-_^2@(,=`V/rUBD20Q[\>=H.@;dbn;4@hZZ,5c06\ZY%%4apP%8X=C+G!uc`<gO;\%j0#b?bQ(&S#eq`af]g/\-%2M4&W?:O"?jgnWZ%Q!n$i3Bh*k<.THj\a^PF*QK-_E]cCUB@l:9@ReI/%a0H\,A1mA7]n;:b-\nojeAurRWR<F`c11IWc+M<qL21H$Y\ooiM$`t,GV\#ef'bUT;WPQ?\]>X?1O_dF\eIb^&]IMf(7mIhP8WP.%O"eQ3jBZ<R)<'sVFoLlXA=9%.(94bS&0@pBken6]>hAr241"8`7\Qp,[crKc7dc/0K<aV0Y`Kn[Vhj6rZ?"fGX^_%`nh>^-i4HpM%^.3jh_Q>o*Y4X<G(h=h2;UYdj2@`*9XFSLA4Yp?^7q*(2O\mHSd.7a0s1LN8B&J)kC3GaIB=1a<.H_QmYY',5pf@tZ*(t=3J#r(q%Zu,`es'>GV&>iSJac-5s$O)B+<'^>[FL_`rV-\uB7:?_5KL\K3U_3T_#&I8WYfmk_\u:E^@jQ7eM'cp6f:nuYH+E5FI=UCGR!mc1%l\WS/M-sF-pIcrm&41=O8VphH\WOjlIARB&g%=C4F;L3I0H2^e%mVC$9>fn7>9@Dt,A8J;k)Nd.PsLj,b,KiDr]\Fdo2k3Y8D[>2%/bpd)FQtW6Z/V#Kipe>:q`-M:)?s=mA="qGCm5:sOdcbISQl[c\T:]>c[3"eYsi"9Sfpjkb*,dS<A,[`N("H4g.Q#&F(+._c81n1%\^34OW9)Q5(fc7a$.4:q>buF.]1#Wg.]FLrJF\hg2m/#QIlP#s6/D_:EcfQljRkZs.$c-jc>,KDQU?aIM^6CkNeg9+?k\0.3%Ij@%0f#Z'$39ZjV"M;Mr%$l^CYi'=1R33>AB/C7bQuao)qdn.4AS.lX"Y=\N(Zq-^#`>t_19D!b5$CGDu72BPo8]nhH:Nof-rm5M6?':%<tuYe1&4`qW=$iXm.8o.oh%\"<R1Oh#>H4XjJT[+f%"F"ZVhN2fsLQj[iZ\^N!.]]]Ga`@lkpt`=fs.bM"BW5'Z8J,<+T[l:o@tf%F^r(oR:GnU<6I90FNAd7aJT!B!e$D6r:b]d?kZb]mY]&RjXo2#;Sm(4[n+.DLB4o,,['Wbmg5^c`6u`T@F?S\?mW5TNX1r2UX4@S%b%HS44f.&\B+P@U^c/8*4nM"[qc!>"L(uS/,+WH1>?r?D2U"bo7fDB+^2%*NYC@S]bEL>qgR'=Y4$ghg"(AKM;+,+NQLA^k"_BRU%PO*s8O[[.M[?/IpK_`d6e[aXr\i\8o.2#;kTi;6269?6oE*$'jH,/>JYaED\6Ag8u,UP)^[d__`)Crpt'`V^m+OKi)H37t87Jc$s%8QO)A$fU%q?;G\uB?7%fI'KbD#>7207q$H>X<jj2!mbt0.5'mMhW8qjEaEp\X<g7.1N1O:mbGsFkETQeCFI_lB&`l]e9*(RP/iX,%`408*OS%hi?AT@YD3U_q54H3jLu-,/S\A0rjTe)fOOP$]K)gQ8T+?>j:Bj`aF/iNWr#itG'JeGm8PWD=WUmI:i^Z[mBi!&PM/NC6%S[ldcRL!u*8H<6FqO0\2Q6bK<r5>S-=-;UHXC19]5Z3c&\0!sVM8^h(p"d\9"gBGNrH"h,,7(ULD/A_H_0-])bqj^I9OQ#];ZusL%@K6DCk#CXGN*_(rpc48"0"1(/H@e$sM,%&J+GQc'[#-JPich+WD!XF6_a67/hFUKeW`@!;.VQGDF&>Ga5oW^a\sUk+Amc#e-*_gP%;V5tuV::QQ(]JbUS5H!\3D3Y>8OYM4jsk1VH!TO%V^Trgr:*/`J8;DU?lOu&ZrHrckcWNJD.*K`/aUha'NU67190ZuX+PZl*#WjT%bc$`u^-s8%_g)DnDB-A9XEerGEB#R[koV?M7^V7Q=hmKYq,HF5O0[i6;o^`$:3J!3.7$]a.hP`M1O6TRA_nLc*7Nc+a*%o9N\V4/%Yj\a4B99CBN7gg?iX-783VA((*p!JN,+c1NH+#`1YO^"H@En\c_%i_*N5a[sP+SS<+?L@^p!d-%Cp>fR5oTT-$k&U0C'S(5LXcol%j=BCFn)+V@0d6YBc*c4sC`=aqY^"rM.hJ)a_'ZP2Q!'(L+j)$5#)j]61[P\s'@='j7e65I/atBmh2'WFBkf?bo#&(U3N]4+n%1E_%I+j/rHdb2\kO4"$&A!a\Uf9_VoeX&?/oE++&f0_6d$(0>&lulu5!%E[A$-)%#,o=7m(e:$mj`[!BduuNM,Hts:[5el]_.h8<7\@U%\i36VJ>bH-WFUZmOX%=,*')(i(D`2t4@sYDmQs-fq/jI;;#:CYLW+k!2:G]oLa8&o5_2&\SVbL(<+3>H6KtURIb"2$rXHH0o<,2I%M?#R&(<MchBG-X4-^a\YqrCep+X3*c(GVY=*'t-=f3J_0n.T#_!,2`>R3[PU@YH:^NSdqHRBusTbqWL53RsZNY]pkGm^o8ID*C51%l$B(e-NDdd]K2B(bhF4'>$)S+$*B$D5`4]ug4nT&2c+oIApi+34Ibn^1BP^t"d\lF$AZG5&V^J8g^>Sij$ZL0!:`1RV^[L>"YLe[%)d(+;S4sMC9Y[D@Dpa\]+!VS-Ml^UnT6[rYn0imGfKhXB8d$eip"ZD%0b\*?in2B4*%CVTIIL+B]<=[Ca2j-1^Rb_6Dtu5"B=Vkg%<f^@AH+R)I.oG4d>X%%1q5^VgKSX.G+7.-bqE(^;i.]*creRjkRLbD;gbV,oC,]-cNo_bXpoF8&j>9HI94:F*#e$6aK:,VjR,-/m%6DV;!oM<S>pf?ea,AUHX#3sC(l1SWmKb`EIU>ak(*:F_*Ce/O\b3Z*U>"e_F1_\/!bck1T?kCE?_f@nQL:8/0^;YsRpiiXD`D^;c%)cA?qH%ERN`V\LEhbgoM*-30JrN^7B[VJgKF7-1VUM,"(/@459Y]7p1Z[A,)e8&%,`H5Hk_i)In.]F-rmeGa%dV7j<A=0O@)?Ip[%/&hYT;<gnZ?@6ca04t]V'&F3EK+iHuEBl7AhiDpn,J!JIGB@\e3(`+.Z:7Xd2mF+gjB!gUOj@H/59`I:7hZ8/'s$e\OOd%CiMf\P%iC]*m.9t4VAM^A"D@ooIh\B.6.ruOsl??$\)&]k6`R/>/Sgt-fJLm&%osJNl]tVUfmqYMmMG*OAGoGT3g;_h7_SjX+`2Bn)OM^$6%[c`oJ<$(HDr7dMZI\n;q>F_V='c&;r=JYp6V,Z!!oX0!6o.JEKojE,UP*/gl,(tO1q7>O5f6DHed:ZH,#:l(u"uRj4SPNl?Pe,&N%'J-UEMNC%'*tl^@'eOW8%7(%ObnuAqdC9P55REdh2X;.47h"D1MZe#=2E_XTCjUs.Q(/!i;<SpVOlMM;!aI*r,eO48XZeok*e,eg%r9&7_YB[3m*q0GE1>jYL.J+6KgZOjN;D858\I*o&6HI40"OV8/d8,)K.Eu*Mh9mcDk)0sA!l\Kg"NlNqiJm,%*.`*T?@?d>gA&Oo%dk$Hj`?H?PdKI,LZ.h>oj^q2tbZ*/c\o$3-Zn:d%V*mfo9MWel2Q5T[DT>UEZUAef91AVsNDJ5#KJsKU=>!T[,\gM?#I"W-rbZ[7%'h$SQZ/&9pRXpH<RHQ!C,aF@+YINGd8k8;H&?)FqjpM1S)S*a"TD:sm#'*)G?K>Tro*S"?&!2\DS[jemc%7Nt]rVOl;Rs+$8N[4O%`G*d%!t]f"WH(o,J0q0GJeGE>i`(Dm9X5kmj0J/:HW_1W?hA;B-)"/TL.SM'+\f[+"_Q0c^X#goYET(NYPgku>SU(mPh@NM^n-rO%LXe&96=k'd,M(me4WeCXn<IItJX*7sZ\k#jm93eoYd\FL:>OiS"MsRY2KegqVd$[8<qB@FiH\/LWiFjuHJj^mB74ajLGMAL!-T?G%jBhC0/`HQkg:hfm>(^TJXreFjT_Oi(Va*D%*aJC`.,)RBFk7Q6#lh;`J!4AM.ln%i25>XN:d*79EN;O-Atu#GbP^Uf<3"oCOj=Pb%d92!Y0KkO6r_QSOHZ4#hDkF?4=a56:/I5lQR48qcj#IJhT<89t89.15Hgi<2O%np$h6IDtC%g0[59ana8rV,;.iX&O'<$^s!o+[D%m[cc?.[@k'La)%nYJXN+"p5[3Jpr,r(\ZqOG3.mG?C)Q\k?V6%N>VoA,70t<9;VTuYXFD?7n@"_4nmjT,u^O9*pHEZ8eY$=^m(0[%X&`DlMIp_)A6RG"atjc?\)Hc'Nj-*(*a(eXZr$58>X'm!UXIjnOpqcD8!2<l.+-F3l:L9"'nIa7%3q^ij7RV3<8CfZe;!YW51::e%E05%G8#a2u3c4;0"H;eN3>,>jL3cqUOCaWm1Rt['9Sf.0/YIUDrI3GeY[Zo*r"pqn#ddF?Z5D()kF@4_?OFplgjCAIL*auW.LiO;%5ch2%mX,YU21(U9JaVE\r3oH=j@:cEp8,c&Bf,on/9cP3:^N%QWin#^qIe6GU9nQPq1S+nY_6u>7P$]_Z"*]Y#2i'PeZ0u3Q^0YW%ShQel;K^m,_AL'$mM$qbB\l[]QhMa#p<(l1%Pn,N?,fJ1<'.lO*("627EuS2W:hDtE[J:4,1e.+*bdrUm3<]J'"T/B;l-JA?L1\+%^Bq6PUaP;mYo)6:;:S3Xm^[X5`]od0bRGu3oYd7;MtZ4J-8R-f2!fasEg,)F^)Y@h@*ePZXJn\nImC@qaQ,/R4Si&V-bZs5?R-2Q%WeT6:C8I>=s&bf+0cDls0uo)@r_IBh?kf)9\]g%?FjpgnC;b%_l7WA99^Zej8!-ZuOq+$dIU["]R/C(?=ZDWX8H,ECT<6Z1>^XR9%"\,jL\V$lCi7p)\.4_&\n<=#6c28BWe'l7H_p)<XhU'NFU(D>"_;`D0mF=k_^_TPXm(`_S`nMhihQ%6XBIa-WU^*Imr!%r4cY*p1%2cZegG*:'$&TM?4qq;dCZS")D^7bc\EJu#c&(&B,GhQ,qQfdN(f6Ti)&m@q$_cE5Wf72"Y/`0NnKZNoE,%I7oglWr]_;d!_F!Q[K%aGsp8>PJ95(@2$REuq=^ZXhMu,e"E8+Wa<s!,hO:^@rZ--aj_,c(j9V+]4hiJ4)Ku/k$F&&MbJ4JZ!SneLtg8R(cZ.X'15GM(4)c%Ce(Is6h(hWbu'hD-\W@o]c;*Ci*W3i4A&;9!6k2,[)*UuStHCMj\C/9mp,WuWtq^]Sgm+:=[f-e@^!4(AETL'j+6TN@%'J<A7!\a%;,*Qo)"?&gmjcDsPQX52eojqm=<o):bk*.Q&nQ+mhO7&mG,6piUZ/H(Xk4"KWV'9LE?\,eWD>ek%nQO*g`Te*Y_P9JGJr";$Ss;T%J6W6&oA%f1UG)uk:a:8.na=MR:;pt/<9OCU\$O,?as&pE/&5?ck8a!"q`If_@kF(ACumE-Gc':$Na5\ubiOf#$0O?%Gs-7:CO]58%=PbMKpH2cb$Y/!jnB$IdSY^&ucR&;>fXY'g(r1F"QTp`m&dKQ+Y:2M1]foq_cB68S1YDE9UZWg>'aS6DQ_*jL&8)jBl&g`:dX4G#%KGV^c\-i-:QRq$d)6P[8W#]!anVlOf>V_&k<P"S<oq3ZW]G63b@p0Npr+QoVa&!DWaP^Ps^rY=O@'9(/U\[\Z$UX#g_^;KNE+SKB%PgCE;Cf!ag8aN"qGZRtA#b48)pg+$"ZY0i)XC&*@kXO%U'_[=CfV=EY/5l_Mkbja\cpr4K$_Fl1,3F/$o7LF\Qr26"4E)b_"';\\%55-EYk2iu?*"c#Qpb8nZHg%ntH9Ur^J&i\$&UM4`^jL11%7&4mR#UX$1,]cil"^;!>D*FB>k[n0,p;`kZtWBKBBI&D18@S)jC47X%R9QjO-Pd)FMCMnc9t*Jh8LSGSEoJmDGW=WI8<u:\O*[,[dSV<;J<uEHl.0k8N[MsU(rdd]^BIN(dr^2\%F_gToeAb[\B94f,qf`5%Z01XSdSh"lW%DS'Ut2V;8Og3n7.N`Ajg<Ic\K]-Ie"PSpctSo"B@)"-)H&(%J#3@$@`]2tKtRe;Pb`e"_Q]k/ZsOkQI931<Pd8$Z%Zd.!n.e6$lkBs#1<XF==,t6@eJ;.plV974bOC8fKJ$))pQ&WQk0KA6n:/tG27-2m,]--`cPS,[iCkS[!%IU=7=?ZV`GjdGRam+6'%9/jgrp[:Tj/O>?39[X#1e\GqID,dYa-)Wg2_&ROWN`;!5S#sQ[Ok4;]ZPD'A?!.I$]:cZ8d`+M!iq/3fmX8]-;MpB4#oj/1kK#IT%YRD;\\f.'hlJ>o[Cj/;6/buTt>#h*.L0h;*k2'seXk"/MIbKTHXS43#_DnQ`S@-3\pm1>X&J2@17jPHg,uOVn6TlQHm?h)P5Gunj%Yf`5G-BW%6[I1&@VoRHaSkNCqD_/=B2t0\ioC9JNlVD7OBDp[e]^Et_m+=pnW]E^kT9435.H^".Kc3I-I9OE3)S9_emBeY3<Pc&l%8aNpPqs<Q-_s]b=.7Qea3^%6>j])Lr.$/b?V;G'sL'YM5*eYOt<_s+m<,Op6g*9tDWo^ljC+U\RW/G)`Hr>*Q`Y+,/gCf@9i`\+g%/O@9#(eU\BEcgHV<mnP\5!;WnQntkm79oZ(BoG78)"HnHouSJXk*O\6/lqoLD:[t,pt\hXk=RAW.Dk7(0HmRuOuZc29&ro!kMY6p%<Lk_o?q9"c>1NGnaWOj6oIJpPp@4o%*:*2Ei'P"^e!D[PM5TDpY[h:Mp@dhMqp4Bf)nG@hG5Fmj*KHn`K=K-HpWToMa\a?*du3\J%=36EBL7*AO,km?j?("1#6J=or/!:oX=XQD'6W*A[WBJY1P*nM!/3M@Q3u`?%AD([HW@3G%,B>\N?DF6>(<&'(6oL\f)H3u=$u'7!%haQOeXA!:h=4-LY,7afaWVpEblnqA'PSh_]ac&e]!r+O[OQc-I^CGrjd@m/#Pa5#Z*O?sGHh.PJ?=XSU.U7>/6LMEJ#oSGl)="S:%2@1V#1ERaX4DGO?$1e01HiEVXIp4Vr<4NXG&J4K)g;7P?8(+gmjF%dEmYM.FH.sd#DJ_8jd/#au\.'Y;#*heY*!n.pq0V!iq3CG:%/2!FjB0IOZ+Z=OBCIJG;8<9mXMYVtlO#U:naHW6OTikehR)f@FB['DkC)q+XK<`Ud@oNrY6t`UIcp35W547@3'X&](LW,fKk9^"V%db.K$F7op.ZuF[Brt7c+X-=<c=]qUN45u\P)$bBmKmB`6l/3$Gh=n12p`tV!8^6snecPcf+d$m@Jd2HC+Fh[t?GHUT5Ftb=9'>s/%eD_h2m,6'anl0<$Q-Sjrbcib^'A5;<QZ3CN:<f4Z"[$/\UWsMH5#cWreK(51k>=4u=H&hl9PHn"EE\.7J#=%P:03U04ME@Np#('S%V;S!%B&:0M2SD;nf;9A!!t*$,qW]e60?Q0^n(5@>gk)VDqJ+mae"Q(sST!;[q"u@Rjr\Fd8/$tQgl8qgJnR$qic_PK7N<)$8!?g1%Y4c*M`=o]iX-Y<T?\ooGp$"+I6$7Q;4Io>4<fHg/h?h[^A0Zp@L/$P\V;8n*blGA>#fIqWA(]sm6lOnBf2,%!9!@C2E0+cLa)L/7%6qE?=+tYX]m3,8\c7@Qeqn/"0_A8f:Bf)?_:%`8'HH23#aZ=?EGt&`2MmHO6L%VJ2Xql2"/;8EE[?*QkXC?$*[O8j2=,D[aCB_fQ%\CM^kC3T8K]M@PuQ07>BO:r@Y8coN#$H#>R:09Si]PA!(rA$PkP)SG$?4Ig,cK"T>]%Ql\>nF`SEl3\eTF$5o:#r:%n^n8.%7`O@%7-N[fp$Jl-aInHK"6^>p-K/0ZGD_.UNYt6:pQ]GFBS8Zh^V2&MN5<F&;YVg$RWcQu*U9>T;daVT!Ec#Q*+@0d5.[S'SkL7@8gn/I%;g5aMS:uPrbDoIG%rbM:cT@t4Ce>eZp(=#-CG%1S7iI\kR^\]t,%4(E;11YM?#N)MQ90%>!Pe6Yb/Ig7pck(ue-H1r;ID_hA"L;l%gEp\(OY0[0JYWW'HRibrU3]fUn+[1ZbHOMXMFS4Oamn`,dL,;`PT6)n2sJ\*8]Arn"0oL*.g.jOe@(S)4Z4)9h](\OEH=YM["1Dm%B)64sji"&morT2:s.k^0@$2uYjD%V#]QZ)ITXeXd71mo^@*EBLb_eO2F#frX>pM'u];c#B82QeiVqVK%DM(.J*MQh:'j)o]N@iFq%(ZG`o3UXTGdWWdH'$8Xha:5)>#2Y)"Ef=!-!c0X8BU%E%'/ju7*DBlL'4*OlX,aL/*j]$r7"%I3+'4n$-V&$D#5@!_WR&>a6WfXf%H#e=\pFh"k&Kjs/,\sUmS!tfn<gIjc&ZohhgT.5JaAX&Hf\2(AKJ.[W2h=Hf:^d(Slj.f'l-G`,OBe*?#a`h"!)7UTZ_/RSX'qN#%K^r=-r<?\`lt@8`/9nj992]9_PMb]Vp#`?-)O?Q[^QKS53OkR7g2L<Bg[/'f)#$[<+\I`c-0A\nEWIUcVImPod_]Y(Y-T[QF</VL%gmKPgan)@/G*JVGAjtkqE4AX:GBpR.">)Fjn(P:lmMUuNK!79%/6oc)QAi$^5Pa#m5"G8c<0n6Ufe@@VM`tqVm&'-4K1^!FK9jBN%i'EcY?H37]A@#Cos-Vg'8:DQp=0M*JmV-HM7o.2I1Y>e\l%V])G[D=s5ulj@2`hZ`HQs;#pulO@oQ,8Ki*DKG+u-&@qNW`._pdrc%->^ZV+H#ftZoW%(J0gULF2RSH]QN?78^1h_:ho=b&)3_uE^q8aq874(S:6Wj4<b9]ZqE%rQMd=7/_ao,jn>^b):?737'p5P("d'K%UPY"hWcWnMGF#f(dRZ:qcC;2QO$K]+T`"O#q"gl+/=QC.,+JZtrmYPqA>7MO`!!i4;XhE#V'YN1+kBHf.*%uWVGgKXI+_\im!Zuc%UfTJg^/j'u,m#Is\p3ljHm:.5`qB:@km")PT)lp8.Fqb=/\A\S>V3O<r@S*(--<qjU4#!IA/BO<I4m:Z/&Y0M><U)!2RZZP@'F,R%%e=S8*Xc-h:\9]lq9:a2OCI-lW$+grr#+=)]A=G=fZEJTd<.r^FioRC8&38EZQaV'T#fbk'2Q0MRcq#O=SNDk/4aIP-u?>7J#Z/Z%r(+9rEJNH&38cF65GBgjqOcKk=.EKM?b[I`.3;rTGFuk5`J_A:eUIe2D!W1(oi8gA+_\V8qX#Vf\#U3E4Ehf;D*8AYB*TMS[;T+!%h]jab)LnQ<T!]#,,jeJq[*bMUf$]CuX%*ZIbP>S=^Nf>-$npY3Q$?k&Q+Z'B!Y9Mc70@S%A1.=hH!<e\/=Ci],N'tI(#I]r`#tc$%B,kV)AfFC"%H`g?l])7>:B0MAq_UDN*GJ`;&RUsI1IZ=2"H,fK2:0Q]m/kpkcF]$"UH/8@C@b$4(U%+imq7E>iUg"[JU#f$<X^1K%%Mt/(f6U`'-<"7Ub:-9B0@UosC!Seh55hLaO;P7DDu?o>B@V\4mKCrr;H7+dRL/jG(+Y]kg>lfANsVR@8l7E.as_Y3A.#]!0KeVu%7mZ0aUt_p-k[X&%Gc(9@<u26Whq"ji#**Ag)s41W7(Ss>#3VCZ4c8IDV+n$:r4(21[>4B.D%U1MY9W#?3B0HONbTf5,s#Ra\gU'G%I[Ohs.I!m'e`.Vt3a;fB]BAGsJA'q%D&^t>ln@t'qMSCh8b-.^h_1a@-SRH_s%YU5'pE*A?N\beY9%jNZjakM[E+Q\=s\^g=2m]Q%.aX"X/2n\5-i#+/32Th=W>*gQ:J6gb[,loSp74_o1n![M.OEOh#J_D;B@2XU^QN(V>aYFZa3S1Zh1Gi*WD?WtU`("=cEE2!J-VaS%d"=Z93AU!`R<aaj@GXa0V9`/k))/l#9%-f%kS\JT>"npBU&D,$n>s?7pjs"Tf?o\&E`LA@\,/5X$3!m\3D#dW]/f=XFWt(9pMdY-%#r!YI^Io\groct^e>e7^W>8I>,j':]LI!)6'^3EoeXqHC?>6X]%6SVSmK!1Be)kNsW3_Od[qRa$2@8m:21&<mdmV1dT/a'#&==To%LV7ilDt77[HF(!;e=o\JAKW48@j-sa4Iti'e6bXWC:Hlchu"RookKq'chE``?h(n2h^Fe0TCL9oDBqG*7EcA]Z94+L8`DR/H]K)R%*$15QDlG[j6-k"W+Lu&A2!>+ng,Y/2e1BH!(@rSm.rn6XLX54c'5<IJ\e>dPc+"tPr]54JQWn<!>o\a1ZW(-l$AT*aOQL319p59J%7LM,u7$EN>*<#JlL>rhRCC8EQ!]h0?VKS6D#LgW<=d4XUe$nQ0!:(fYSe7k>1pC.FRNrc%72WOs^FRE`O2)S\T_DR(Pcg6sm8)t\%eLD\-[nN88U_fbVm^i*21P\8>G$S=_kt:Q2GG:A6r['F?hH_.K-oD+&+7%_So4%]Z1f@!Y]TEc*YcJ7+KWM]*FA)mZ5^EN*oT,)O%\O=!tT#-(%&O95LQ7M3ODWka9aB::k_,.kSoEbMHk:2S%=Uh**5$M"@<jf]bfSV&;Q36A:7UQ:a<LoWtV4i#^"/[F"(f-.?<?[#u%V0!5aOh3Q'AUJu.WA=:K1u:X`bc1rq2gNC+4IFV=<NfM/%$'rIl5;uZ"&KeXcqA?F7^&9FFXF\5fk5dojdsQ<pP]n0-5p;U9oOfV%/[Z(R[]k[D=Vb^m31?ut"d:&1Z;53,%kJ#u_M.j"Tf=$U&bskSR;5<#cR8;g\MGY'6BeW'*G:],jKJU9#egm9.2CGts%YZ#?F@9d%;<^i:31!Iii=t/8&h$ET-&WNA--.q7r?-urbM*Sgc^tTudrf5e,\p_#Ci%35ik^SYIkM:c"#s$?oH.+[NT@GHFRV%fA[M(NGKDH=%p9D4B7u5S'&F?]Up(U7K\@]'e&aN7=Tc>Q3c-B[EAm)[KV2I(YnnYifQ<2eHDr;,7pW$X5^8$EAl6['a5.N*_&UdsY,FuEs<dCW8%!,d#$p9;_rB18Z@k-2Dg$>/AB@[5o?[Ul5e&N&p3QM.:(05a44r(BQ6`fdT4kpd(h44h3q&(qNI6`rK]f+L/kQgrLtO58o3&hr(3%QFm3i4K&icMa$]l$i#cfaQ/?@ii:Fo!7)Vurg;()/%0HZ+>LGEdQ<Zl9?3Ho](TDN"jVC.agG/-;asLU'&A#NpjH`fqm)k1Lt',G%$]f%.1"9Q$6gETi/A+q8gd7*^4/t.TL)"Faq`p)I,[rqD:-%`'bt2EiFNjB1(355M%FPa9_#K2G-._MVCR0@(g4Yd2Qb+i&ot3VD%,(d@6DhNJe!&N4!lGSt]/_1*"5QpN0BTBIjfXR*[2@]Aa#tdi1Gi]DLau>h(`ask&T+t0@O'sipCJSJKrZ62^?g]C9\*UO@R8j_Z%&jnX)T!B2,=>EU!]t1uAUY!u%Cgt/-]gAe4Kj?,Xp?f=%LQ*"oB,!@^_A")7Cg;h]h28<ONal&]FW)%'9VaLMDQ+/8X)kQL4"rUF%Xi>d$5(u'?:ADW2G";"mj8]qtb.JG?P,rb$\jDU>11SaZqF"[#6eAkiGEWe'i_"FH)g>Z*,'/h61c&EqTouA2kjJVdYiG<>8I%hA%'a6/[M-B;/)R4N2djR__?XQe$&[>FF:ZL)bbDO.Ap84rk5L[S?k"sBUXP[kZeEKk->o%n!QPo&"gtQ_&h<i?W#OUTuh<l6JKkC^-%l]-L-r2IqZQf<imKD(-o'%rj6.eHNr7[td7@P68t>/.ZSIVG`AE:W!Z<saTPAi1GB1s$_#X1a0NB2MAL`&%2>A^st__n<&3'u2@#%$`C+s<m<-EBr]Y/2Q=<n@8$Jl4%Fk&J,it[#/)Z>(Eb&BZ+B^i"Z8\'2\rf/L3e]_=%h1M_f;SeXBf;F`>(YQh.EdpSu).!B3G(6%O"D[B1#7fn>:>+`lhgjCm..Q<:9`rN@`]8N#I#TG87rW#P$Bh)nlkJ#P1Dk`..O8K!OHLP?NFW-p8%/jU0/Da\lG/;maM(G>0<m$%9WW6%D+CMl1.8Xh+nnT7;@uD>AB<s[4@EiWP.f$`H9"GMMKC"$GP?bpPtG3Eb-:'_`Z$Rr2\*HQ@oB7-:HUV^X$!YL.S\*BJ-($t%.F,_Gf6c*&K6b^,H2'BgK>so@nks?hB;KXTP]fS?Z\?QOB=X5.#Z[FoD@u?^U+^P$1SP1B;_6n%31(auR".RO=k[:Gk5+'f)QDdS%/Geog(-i29'W&%'FK[s3qKni3=AM&)Oa&\q-ZM+03o&ml1AK1\iB,5AkL_ra=o%5`bDo1O9]2.8cbcqHJHL2O&n<IXpLlDu9iD!`%7\HncS]Kj[TB3Q:_``$rb\5sA*+di\Q,(BA-:<`k?$GWY?Fg-^l7-SUNcSWEb,5C15G.82MK`&:&qV^*pF4qrT)uDhEQt/LRm??t%USs_)+FH"cZ()-38QmWpo2P]oR(\t4(O)AFj6+-,J88d3!oQ3#p&-`.&8saspOKhLQfp]><oS>F5.kc1?g$3mhD8?Vr[E7i"kB@*%]`Ntq=W@`o!K^BgpX$$):N=%5*cKU8oZPoci6LFGn&EL1:F-`l](&V&c;jsU*"=<Lf+Z3I+?_ilEc$ir2q^4^#mg,P2Ot;gnF.a8%rih$H,9AO@ROsQ1?1jAc[=90k;bMio[or^t[G/h?=rnd5KLH[[ElTt;eFcHn-F^Ot0):*Qec;!ZY/DF10cIYpRn+1oY;e_Q'>nHl%4,(@,>3K1V1>Jj!p"jJH!:_HIC3SbV<E9c_GXX`P?aD%hI(KCCCb9+@G\*DD9^qN0okiK]c!2Vk"$,pNS+7<<,:c,bJ;u((+tK>i%Ml.a-=ahV8btL]ERohijB1r9rf=l+q?'RbYGXE)8Vm]+J-0q;J's/+h6^?[Ki!XeJ=ffK8@^NJq9UKf"X"e_6*%gYDW"GRHU7"lU%f>3'Lm#0`$hic_Z]#m2Cn^n%HeX"48:IkuTs'SDP9tK!@!7p4iK4#UN\Mpring"u^>!7r2f/m5+(nkuhE4XI]`_M@%Ab6k]h.&/S%NFespj-.\8(5),g<u#U2[qaItXX[4/6Zm`BJQY^7YnW)95+e\qE,s6d?D,l!bStUpqlsI6Bn#p(cg&'Xm]YX0X=pA:U1=^^JH>7T%J`FGAOdnRqjL6GZp!jEuZ]9h_?r;d;Z:e@UG4*Z.DC1XJr;ZCb$!9aIqlBKCX!AM5'5E99%f;81pH\_^&3P,ab*>=^a8N5NK[^Wt%q'L!k?>Y`jA9ShXp;^#VV,79n=TT5ur#rAn`PV8CK`[c$qfA,P5!Q)"qu!a';p[Oh.0F!I?-Upgg]1o#>02+sV;I,$q1UG$SkYL"%.@kSmN"(Yi(1??]6F/s-c&j%)WZW6J)@f[n0J>2n>[5QXMSNtXmD2p]?=T$aL&/=A8Po>fN$U;<F&Q,6=JACL_ih9Rj\5g6_-OI?%ZU2kne2^J'6M=$(kg*Dk*`riTI(!Q@c4\DoVV]<:<Q,t_9[F=5OB?e'q;-\fWuXa*L&_D'57(sARiFk0ck<GQ.O@\N;_Ge;.]3Vq%<6LAh9:u).eYjQM/'2-<BiSUZ9=@J^r_X)\9o#K*\j#$=.d4c"PTHStC":Ft3t?`QLeAV=Gk1)KdON+#]2/rDAg5C#=B7F%lNhW4%Dr3$/Z-t^R<,S0sp%WBr//YGqGIUim[#R4BRB:;%#fGrl>956C./<LIGA$6g/dq!j;5^%Q'a%\uQ9\DM9*^M"Fu#@]O"DhN('&Dq%Wu3O&G8?\_\8AA7<j_^PP_rjN];F"b0!YCXQ$BSk-Oa6[Ida$m(`96oqB$HI%i%JW3<k+C,lQFQFfa)r>eh'`#'MM+PK5Mg#uL#t%3;@2Ygetn""*&NQ]4RoMGGVX7NJ5VQZhX2<H^a6;M,h[V!aKfc=bYS3CqiU_Zb^Y/Mi>InRTG?XC`ON"nQ@,r3t!aSZ0JO\iRF0t%Qid&(n,G#t#g/p9&H*uU#Q,:YH&-&qN*1c?'Q7[W+XH\TBkSN@M@BXZ,aD#(b'.gLJep$KdsUa/^\2Ls?Eu!.o^rjs8hQ<Zl4f)(%``67-[rhi:,>UC\$X7(q0O]`gZ$('hm0]qo,R0dpJ,J#EH$D5RW"d!<Xe4=1n$n9;UGpYn=JGYC:r[l\;0\,d:gQ:uL0B$S/C[]g%+Ha;`]1"O/4L]\K[\Rth=M[=FZ`roH#PUP-KKUXn'HJEN:K?t-nZF>NDq(YFVk\@9%@,m1NFBi7V$g-8Q+/@LUZFZE\UFXI-UJg>%C6h$5QWiXgcFn0?"^&E3nY91CnO,FR*slPD:<q2Ep"5B/Qc$6L]Q$gt4XkS9Yfi4kU;p^6m6aWHX0<!<#-UOG<SS_2Mt?tK-'4H+%Wjj\!Om(3$E'A/;kF^]&)F9S![O&ERA:o)?1D-XbP@/9-pGfLJ#u/H8`L_o:3Q>>.8)Fk16)UB+ECMq+!8:f\"RTJ\BT>(4Wr,]i%7T"r',`6$0Ic+@*74d#5>fKC9Z<)hB?a#r7>Op.!l$l2D#M6f3CJhhce]km[;dJpue+@Cgg*HZT?_Tem,(UpSaoKV^FO`uODo!?U%(.0e2dF36\RCTd;!(1I"X')Tr;*%=`KhLaWe`Shg(?7e8ADGQQdINO`cJ0k:X89M@Lu3i*jQaU.Cj\4jrE\jI\?#4,rLAH@GBMg5%6LJ)Xs%!Cm\Y=K'JkMZ_p&iGp5H_N*;UVA:_f!.Xg1`108TE_sbU+W!T$U;Y1GWn2AN0aT#W`m'k1B.9Zc]@"l#2is3GV%KGH%f.%;T]E8$f?]p/#>qT2QLcpBYJ0R."\(6AkeC``_e1&g2r'K3a(AbGW>/UDHF__2Pr&5k&1iV:f4P5mjhUVh_';dUC%K++>WHSWE9@r%!,lR6CA_[9JaO\i*-IKMbo/G@AX:1:>_Ko%h6bF\>$i+)7*[h0m`)1N'/R^W)->6Tk.K+F>X64IMDjgPs$^mIA6H;bc=2R-a&<##%oWtT<Y?[)>+JtT\/'/c\DYDj=k?TA@Z-b8!h"l(A@"dj&,V4."ZS>ejC@L1aSd_ob]T^hW<LIHtN"TXD9cbQUZ*e^b=d:,?OGX\0%WoOgN%p%`F<PW#c)/3(%6h^\K*%\OjEUi.]N5CUQHk_-3DP<I(RJZ(e.84/)g@6aD>Smt`KGW[c3]N8j*`&Lsa18$>#q:BRee^:B%9nd*Llm%BIV?V$N".l;jXZ*%tT`F"AH,6CP62a@MC7skZ*4*].RRrQi3Q9YpppFLFjFoYZ&o7EM/ps.`g.MD)Y$Lk$2R$:Tfq"gk%\RBcF%/4('JB'eJZFqaA*2O4NA/X,7bF)mW_&lTI!$.?&R!+2OS<.DeT"-4[`Zb,KB3G4RQf$mCcFME>,Ac,,L4!(2KM^,(Ie>tq%>`!2$-Hj;BS$P^(WlC."@WO?3MR#V9,4LOo4X71qoO4AgN\kR'puJAA>UhV"juS,S)u$9-6!#Lbha8C2R@j9Yic+-df`?6=io.ic%UD\uh9p7=ggS2($5MsVmD/ZI%5G^9VPdA&W0=aZTML\jAIF;l]XM$c+W(tm/F'hpP!o_d5o)2SUH\1=pOu7O@>Do*D6<&83m3e,@%;INq/9IV/\llr]TQh'[oU0rugAfeh:mqcYQHc9^OP\&_!+QbetJRoq;">rEo*Xp4H$JHina8J(G?<A_8\?hLWVnD:9*YRdE3dsBH%B4/%'b,YC9$UB&;C^Z3!nt8K5\ZD[m6$AKRMFIJ"IW*bG7R:TK79`V1Ru0rO+!`mRLf,kW+F,2h/s2(#\bL0&lWVf!'`F@gc6bd`%4+diD3/kQ9\6RfY$lh,qYfZ48K2]O/DhZPTBID94A8%WL`2c]ABZB$9Z238&?cX:c26`n^HE2M/X-Wf$(9ro?;l\r@E7/L$pW2Ja%\B-EY[GPGuN3SK(3N[=rRMo2jp(T)kA4LDbE(<terHh]bJN50HJVKYg6L#t$0iT4jqC9N8AcWLSn?B/,Rl%UsPfON$'ARc7&#Ha[%RB9Sl3DYs`U-rLXEmTW<JZtMeS"$[h!!T5CYemdl.6p6t"+au1ac*!hn(S0p\lu4)S@ACq[Nd='/EWB;l3$<9;Vm!.I#u`p@?oau%(E@<0GT#1\ibbJnWNTNAaRN,(`+4IaS;:qNr]]U+k$RsfR^=JOEm,O?(n4n:D!PCfWh#EPZ#qjgaIaR@&MleNB\V0eXm4[+JjU(n%gmA/EI$D(/RUAeC*e7C8RSeglMV/j[-CR]S]lk#]ofC9Y0gT>2W@:$a7-=:neWuB/'smEjca=8;H(>PnPq6@;X_g((15qOGK;J;9%eFfVLXC+IIY-(9K<r'H1%i@U].,@ORG4+3fhNGI>XNY3ReZVlj[P[.(dsB1c["%tZ9$UMDkC%7$WtrerPUELmOsaCpIhhb'`Kd75%,Q@"i.H)]bh5n*#B$20`'g2:LS#oj\?_u=r.We;\W;8"Lfe5[C:c0l0!,b;!.WhFl4gl'u*6P:%<4`%.f?NAB%23Ud8'1I)^KM)F%CMgcRfPnY4%M%sm-llmr#oocFk52k^nqfBQ.;J]KOm/$[S@/_)[>1J3S:3,5buUH3[h[XHA^OD_RTm+%\h_!@7&6r7463L"*_b`f%`:@8J-FarFBk)m$Lre,jI*>-B1ZrV_oX)\=6tDa)aC_t!U6YGs'*)I<lAGQM(3-Z59hM".kFUjC)ItKb%,iR3g]j7l5q1%uU49d_%W!tnt#^4)p&.1G_VHT%WBUlCS#EKDea7C_'0^E(q-:\@tB4YaN_=1U5Mf<taR7>i7q&H0@BXPP4Zh'6ajLJ864D+.*fgd4tH).d(%#MK&\M9@7_>$:W$oYY]QL\9l2MX]&LDMmO9Y?3&]/2gu9%4_)RUUF'_(9%iHZ=d^l_[eu'XT=>36!p\\5$H<IA]rGaej=Y,rSk\'%1WRU<A#WTT-](g22R1rggL2hA#K0nI3pgo3]1VK1/K9*>=PUA,:LK0`J"[eFhV_m!f5f:[8fQN7]1P]9![a3fg3-C-;KpmXSJ#"P%b11tT:/aDFa5mr@Lb4'g"A/7A6MAiOl=%srf'R$(ETJfsF$;@E&&!5G4KHI^7[S#gPDB.ng'-)I_\qM\rC/&fdf.^=_KQR)i?_AO%8j3_UYKBIji^;KJ*"2R-FJcXe)GN/Jfop6$@pE-':#P)'3s$#,^&i&icP<kqs.cpUjGF9hP(5I8ZjaY>hui.@!]!Po9#;7nf8Q>o%,RTC/isN$3KEEYPh-MXqI;#LRZVHmiJdmF@rd1*+i'9VEikgtrUHck1TjU=^*S\PB0(_8'IVHn%)>eecH".S"Do5(oVQqShFU$Ho%`cs:N?+!fY*]$q44o_><L$P1E&b3*5_NX3gRPKdR/Yo3Hc9OFm4hk9\.u!j%=Efd=N$"A$@3f0#9;p#p(9BSk5+fr5pZ1]?I(&Ki%BoE)?J0q4i3kn;XGhDBa,X!0c%&pGqqi4,'XPJDu<3jQIXPCqK:aHVi(TeF+W@=`/Kc992!BCOUN5W1/+Q+s:<QS206U4S0JF-kc%id_`^jOS;8r*.J(mLL")@5nE+jXeg%6H)B2n8"aBcI*$7@]OR4fb$:<%Y?DRnUc0KY7<=WC3L_:VF%=:Q)E*OeeT6!C!UO&3s1+C%(.?ManUgs0YD`de-!70b[&RX$OiD>cm`l9G-s_<D:F%f`YV8c7np5ep>\C>qTiD<lY+4Bbd'\qo+5c"XB$_<d7\D6``#./a%E'93%H.=<_R)f_FdF0msH]EM\=;Y^8/+CSP[.jqO#,DAmj84k1'NmMM5H+Q!TfV*V@\&8`<gf:b3g%tOQCdA?D"b23L[5(K8Dk/pBq/Q2%b^@$;3S2_[Y\5nt[8hErVbi_;&&=t0':u;F?Tt%*2M3=l`74L:\cS\od[s$!SN6U$5@1?DkF'hW(<J;8#"/[:J%efS;kbf*fcDJ*%iu0Fjp!Un"'$_+SN!%:/\4ZLV[FrC%Y!CIU*c-kfJB"U7<5u;i8H_OG):Bo1WF:-PLk0>Cnq"Rj9l!b,4cW-a@<NIK0*SXE)I+T-%YpCX48n2EtE/*.&Np^ohWiqDJ-Xcs@ZYQ;;N1`H4N4;&Sp4C+BS;OXF\7`@_3R?b:Fd)F<g(P;:?W^b[LPU#6MGg+@?M^O^p;(F)%ZYkJ]1nf[NieS:F/^9D440.ig_9*L8.eaef1)NoDUR1oHA[.NXcC(aEQ>ZA$`\\cT5'o$LRq>;?2EDRc$[td*O>V)^oPB;hP-cBR%U^%*lhcTpoS,8W&[>6<9]"ge/o72m9pHC7Q*32J/Yln=?aR)5t6V9YWo-s`CEk8$=2MF[/Ga;\ENd-ks]HEY0%F;/b#9SJ"'\CHi%[0gBteH:oYF-p@W9a89;Y/Y)FH<h;KMhcr(H6=lr&3)=!aJO%GK_887OL$'0>/GTs[YQd_1u%*e(l`#2o9<\lil>rZ7)2F!VTomG%fWNr7Fu_:QBdhF6LQo)9[cs&d@s2FM_/Y`PC_q?X;R`@SIlIJd<`Q[sR%8=/)"o0VgZ&OZ(?&_[p?DGUIj8]@M-q_b[]SRJ9s\et%!9ATIam+KOp+8ZW`G=",;=*6Y"XHB7?1h-jcMAb0d(;m,EK@@Z0mDI"S<\Vp)6Xk"BmaA@eXt]nJAktZ*YRpJM27GZ$J,lJ?)MX5%1>9E[p-;DPS<?B@Y_U]WSb2H#[c>7cnL^.q3DtP'7G;nF3\$6Tj_`R#mFt;CAUjLO!,2SQj/GZGn*fsU!s5T$.\YC#7]\_HGrXKQ%Pp3>][%<^d\=5(-RVl;-O*!iZ@>2%*0-\6B36=QhaI6a6,MK&sqt5kta">qAqC7kEoK)SZ+^P(eQetj<RAj@n96gCUlTQn#)PYO`%,2MFb<#DT;^Til64A,NGWO0SN3A#Ocb%?iYiV)pLmTP)HJ'G*D);<4%i>,$VHY"Ct^lb#OT6L*JbJ=TKcZ\FnFs8gmCiuo'77QZb%<_)"F*SON82`@o$[67;Ci2LJ_UFrP2+4JKV=Ym*7*QP6pD]iWDdc!9heR"%CDJD.DrdC-j'l24HkrcjLQ!=#^>Jr%qC*j$T42VpX%PG:)aq>m6U,.&MZgT_)r91BE'^ku33'#G$q9=U2Nb\7qGB5-#W!66D<*]sp+[)Go2mc)s'SLMA)eFBt!$L#H/E.88t\^rL)^<GN,%]fi[bf9&t6A4%45=7t4)\kLC1$F[V4oC]Ei#neO4MKMoHYAuo:I.u@SG-=`=\PVSmd@(j$@"n>kR3B,]m/B0)C&b8lkDXVO6UL],%Z^hmFTcDiU`R7/]i$dXXYIl$ZaF(DUo34+10W8HuouX$''==@*k3qB;*$d&qoCIhhLXDO:?S$coSpJgQ$iu;L1N!Bs4K4pbQ3;.S%b0*lZ,3I3Z(p43@La:8Qpr*sZs&hacWtLp8,ZOM;[s2aJ5Y,pY]"NCrk_r76mXgEMqMtd)q.0;[1jEM3k7bBDk4^irh0]oIW"=[^%aqH=kh.%;A`@G`OC\VtVI31]1r#fn*'&%Theu5pPcn&1*b6Xm^!Rd.<I)^u]Hib'VoI4aO:R-H#;O"l[QpMio0!FUb3RYNs8m\&F%>.:,$jO=VMQD-=#DDB1h_1.P9]^fKtA?-;>"afO=aB%ifc3;dT%s-a1f9d4AjnPp`!_u:t2sLR/>:+8.S/EfFB/7Tb!Yg6/$;Gfi%8r!%/Gb*?i@[bF!)E'5\1"<#Ge\$<q]ljd(qDc5ni^g&48.D!YN"/B;4*n"ncTB:+lM6n9:?u37bu?8G39tcd<tORbD9%sK8%"p[%Q9<hq77(3pk/l,ZfiJOYNkRnrijNpomgNDO;b0>^6rlZSS5ZAhef"$Gq"lV52L8))F\L4eG:a3bp[rFm9'Uc[Ac!,a</NA.Mb`DX%(&ST=8@(K!Zb<*W'1X54,>="B5q7dP;Q5juk`"G-0D+ntRp.>%;*(G3Tgm.,&*&9#H)`s5F*D=qQUUR*5/O_%0b_M.F>ou(ZJg9I%?%Y'C9'45C%Lj8OAI!0)I90RWpPPdKp7Y5>6a;]r]*N-C4VLHN-pADSN#?<mQIf]>hp&->QPR(OO3\GGrQ"d(SLjU6.<00\*Kn+F%4MQNT'aZk8#=>I4k:ebEE>A]u,4rDJ[()0bVCiJgZ+Mf*7]*7M/F/+(3e[h3op%aiSn]626&nb6A0Rhk4(\AQ39OE`C2tSRWZ[Kr%KN+(+_D<^<jc3XB0U:mC@),F5*2dqHVW7,0?HW!l0DF91=tbj<)4oSc$QkiL%V,h%f#r,-c[)tH`)`SR\<?`b+cPCmB=4;r2P79*%b?;tFi$\CM@!ut`_=$]WSagdu<=^Y]SpjK=0^VDO>E'Cn]94NMh*;5:ghE]<e:0[<[tQnFqQs08*Gs;&c'Y8HqV7it)p?)t6!D-r%-s>8./g;3u[KNKL]1\g@C,SMFL/\*:-0E=7>.Q7I`Lb$a0H;+sln$I[]`d-7=aLPh+m4goP.<(0%^Wp0*#5anK2ipZ5[."qXA<s?%'$=-_4OTW7T"?m_)]hmF]iC0=-7io/1,,dmJtS-0#d>&l8j0_E-agn@:W>:;p)8ISJm2=ASN:uGQQr'H?7)i[S*DV8j+anQjkeW'%Ks*$6kURdbEs&7b[Cc]0,jL=TqFiVFgesVG(#BrI2"M?Wi,3uJAq6_^H$c7(En,&VQSb^UXJ<_%XY.'1m^-2V9<[VtT3?A*AU3:6%lTS=&4\B$MCg=t"fVGq$$b6'n$U/`5(Jr/P:#=:D>#iCgB>Ia-6Q@h0VN[f@a*?`NSnIk;k)u8?&Q71e>ku*W#fiD?G`:6qW!%;p%H!IS+]nT!ckpR8S2<=s8*cjsq+%c,uT"C`a6Huu"I<na9g&IY\@.gIrh:5,\>731*Cr,Mg.%ieGg4GslY%n6>RL1jGk^%CQftm)^%Xd,]:"Wm(oX@`1,IQRd&U-F6(%-g\\q4)[&Ra`p<Jb.3eGm9OKS)#;2e=p-2m]Obq.DPmhN4pgB2pclfE&DG(;k&`A@?-X?YQTk/%(>%2XaP0XfW?JJYr2DFXgg1RXAJM#XDShpkr#H^U-Ju/<Rgm016JGKQF'Ll4BT&NRP`^/BR]XcPPiRb%@)B<OoREVI/^g)i7"hae%D,qU56u6-5m3:9sOlH(nmD:>RLup3`=$Ms82iKeT+DSrh>P&=3!C.jW`0&\'-^O%L"D58o;]D2NQHB\G'-nR^,O;!:Fn^OIB`@hd%^2$-P#W7jP_"p<B`Kl+t<BPCTpN+qEbT4R?ZF"85,.S7U'!dc/gSM*i`\MO.>Yc3`Jc7f$+>EoBH"VumjXYFLin&Gl_iXX1O3'Kd%7s%\Bh4S82$=^)d?X&$?Noj2?0(LD'i1[(!Fj&)V88cWK9\Ocg?BP\e-$4Koh0Ok*_Qfud`(]C?lrLM:T[$j)_Q"JGRcD%`1pg9J%q,lF.-(^0D9BN?&_k2(@EskkOX5]^sOlL:gIMZ$Qg3i#tRFk"YmAh]t]`(dHJ#@OX13\sl72<$D!G[-O[n#[^+7JPV:L/lc1:m3M%<.SX;\d1tR"`,GAg^u#;c\tN;2-_4hG\eO[;;-"<og1Y]og*iYmnpX"q8j1&hW/ETj)#Zb22Ue#T_i\tFDd*#.qA-BFmS_*a3ZU_%Oj`srX5^ss9*\")X"'U3ShUqVjk>`6-(a/D-MM*;YKC^]O=B(5A8"J8l&YZ6?2j/RS0T&J[/Q\d!k<[HC-bNH@S,Fl.*jEZXL,G?%%p$h:C-Ds+]E4Ia>]JW:2ie*)9de6C"0!\3e]URS)i@g!7tI>XXi`aMUQ%@h/+M%COFTdcfGR(7A\:L$<o_M\Ls@611cVsb#aM7g%F%.M*@%'0ejr%gOY^C>S`t-i=2MHCU+>4X0#cu9EHSo=sT=blI]<BQnm_DQco_L(-X:WcPjC;SA\/uUT;s,rme9Qr4h7T_bo)9UQ%1RS&"f$in@JR@20Yh/@J^p3BBG.eLa)'EcfpBPBrj:G*N"m*2"bac+G4D+9,a?-D*TWLYoVsQ7)m8$p!a`N.uX.>$_`-E[&O^540%GS`V#GBq-ISsDAJ05_PJ`&ZQ2"Eoeg."1ZSS,E&<d("T=5Lm<)i!9T1@.iHYSfXFIU$@ta8>SfZVC-#J+K'q,(;S[*V3\,>WWQ!]%kZ<%6Jg'N$D+!SE19_sb^pCLQSSk2\GLn=,:b7?Fr7p.<_ct>V/T#Cu%'c$DPk-08^BLC(_F45%Op??6l\iNh;^*tdH+A-4MKe!g%:>CrWmd+tQ\(R$6YcFmSGFi)@H:jlcES>^f7%94RiaX>u2%,<on4:DiG&rGOC0:LBKtaZ/FV:lGYt'iF:Ql3$Yr><n'hdffN/S?#%_XiFBhNaSW@o7YF!kW<T7NF=N3]`2'$7kcV=n%=4N\^P^FVQ\MMbpoJn++(3hd0*Rr%EHMp[MBPY1cH6YpTb)6afE,1e=CIT%qQX%K4K%kZN*!p!M?_Z(=L;A)gjfXm:RrU%'dn@(URo_QIfhW[5B&>H<#fR1-LXL6@3I+1A_@@m5>3d8EZ'K\e%WLKOdo@9lY4X4_1jX%*4jcT>U%&qg;)@K(jViB2&oh!*^1oT!eF]/SYPCr;kJ;p\4Ms0io*@1&mX[X`Mie_^;\.LK$.K!E0"f=;SApDPKU6j:2-8f[_S'5%,8d=he]-_hkhbV[.a-&Bhub]Ppe%E2<EDhc"2AGQ0"Qggk^0>=X!L@]8m6%96,#N-T$:RFDCCdMUp(bBXYf2l\3\0&V0T.c39Qit%D5Q/\O19(;?h%^0n82tHB!MU;h-pJY4X,um<=n4?"FX*E6sPOf7k=?3-nmj83`>U?>3o:-N;6M]W3B5$[A%f+oCCF_jJa`Jk%58E%E-t!k\-$/3X+goCog6-jC;JI9%DO+rk83Nck?mb5G9k<tR#!MCYPr6/$Y2mJnu(\:3A&r#3'YQl.i1-cR[e05L4E*"8tYn%8ibtQ%d\)I)^Tqq9[`WDC?=EZKiqj@XBZ^2j`X<K\cQ"(o#`i-l*'8"HcBY)1kI@dKMOQ4HZU+aX,SBcL_YJTZ=fQ:sM5\G<$3]_?IKUT.%Bu8[XcF)q_p?3uJqdU/@DZ?^<RlN;)>kYm+,H4i.[bRD`I@/5XRf4(:g:!7![2XZaA5UL:$pse:.taf0U=ELT(,XE=]%i15[;lu*%=dO_m1rcOh>E25^fUci`.4kl'7gVrC*GlJ`T,a+slb2K`hPP%okZ,LG1WUU@V!<Xi3K)gn5_)3%SAVYmCfKuDN<Oh64jP,paFhNV%[ZL_-ai8D2h7!4eUuCt\W;6ZCrY4"n'h^*Xk@AaPhfo?j?q,e?cE,`am?ImNk-hZaZ8H'Y,m$F4+D2F6[Jm@0N$nbUZlaMj6,]s&%'40kU=ZQ3'mU+.C`&9(#NP_>\io7=,<!]D;:_W0Gk7N?@Cca-FUVr`3!7knG@O?e@d'gk<3+ck@'EueqnEa!fdWQGJ366T,<3sGQ%62Gu=e,:4<"?ZK^oGQ.C;N9[.6Xt)%WbJLULV.KpG<H>WO+<h5=fl#t++Q!":X2VfQ!XET,A*97K%+\A22eunM^IfeY!`RU]l?QW%r.A9Kmp1)i6*(DB4]d3@Hg.XEVCSk%54)(H)!XGds!aJ<<Q7oGAp_Y$3#,Z;"HAAPp>'IXI$@_WM*<$>,M>c50']6].][2-BF&5j%Ea.``9edLC6MVca"dU(]9$=1!Y%H%K]j+i"H&@][I%'KTN"qUc<fa`u,u6H5ZEID?XuQ8"dD<#FB5;C\Rf)mQJ;bX:->K2fR5O!:%jYV\Y<jBY!"Dc'?@FCLM8k^%J/j!/^?2Q-0&7bT<mA0ZKZ6?FlV*=4fT(<".@+Zu/,/np5qNRU\N^kVhfWp:6TkS/;Oue5M<]u[a%5LNdh][epc;O5Jr4T-nqQ9f5]7I4?VoCVM-i7e7-f3Zjs6jc.qVj6ZI\n`*(]A",j;tF']AOV3H<*a4K($2,FNZ[Yrm(oFW=)b*6%0F;brmdTI?oMR8Y7&b`AdcX\i8C97N]H)i1[4qChY*oB$IrOD`-qrE"JiF\o5m%kUkZH1Q\\Qq?j3<*aF&37X<S6V;48Osf@5g6&%'Q.O=`F?_!o'QP!<YIiS+cgpueQ'jnmY-]bJ9GLh:E7I1^5`Ka4'94E.H/a;-59lI8jQVD]t4\+;l&B`G8F.]"r^+f!M\>`/9%pq%cXLRt!r]<G=gfsk,NMP]'s=*E!a:-p'3hR2/Gs*FIq7n6Z#ium0D1])2`[V&A,Xhd5!D6ld'M=&^N$+d,HjD!'Ik?Z.&:?$]%@Vs%Y8o@gEsDH@=Lc*6(-7&(P^L%i>@I6kZ')X\2s:])Zq>FQ.IDQjC/-R#[%ET66!6C`qQ0+KTW3]O+M#bBS+G'!L^>`(!N<5a]X*,@%o]$^ZXlj\X+:?#pD^WQLE7C`j2D7"n4$3O;*W=IN4M7^tMf$4E)/"?oEr-(h3!7A6fJe\V>[9:=h(dAdmfW!O8+ON3Y89b)W%poZ%^4e-[+5A;>b?%9'Xi(H^I0"@&^kni';??D<2&+4GjC1E&0P-M>b\Z^*]>@lCQF435.<_,<\]H@aP&s46+F$0m'\3;X]RGHUa&5TK%51E)R5F^0T>t"dgL_jXd)C&QG">cQhnL%"2`aGoB:IPtI/@+.;!09WQh>,R>En4'iX$6+j+"\c%i/I&Y<a;&r'+P3tVDr&85T@;)%YFFq_$,rJAB#VrCOq4KHR6H$L&lEi6?<n4u$qG[`0/$5LB,)EZlD&:TK"]/ZHdtO&"`rNtZD'$48b<N>2XWC)$&u0uo&ZR@?0-pN%s1!dQ/LOst?WKglG-(`221Ac3USZ;o>brbB1YG@(_Gb0eZW@g!Vr70IZC:WX_;V:h-0]Jj*RgJS?!XLsL2g513(aeS2fQ[&d>%%:%oT>/9XMRn9oeX,,qiMj`#J*<&oLL>QN:9oA3g:e\#!jjtfVKs_m83.:P]2aO"MTa02b9U=6_4KT@Pg=fEc\*.rE[JRSc%9?4dN,`%//DGMfigPRY@k^T,M?G,4]`0X`r4e%94-hHJAPg!aAE4'!QBXQ=^.^R'ab'0Q8>o`<BE4\/5`47UqFs.$8h&a'8N0??k%@h[+E+O%C*#+*OJmDH>Y:h?GuiB^8.$Qt&@q*SP"i($4`gXU&7-Y-\Far!8,-3&A2s+'oVdkk:gXOBe(+";(;o:9@_OfEatC1.I#>,k8ot:K%]TtWEUi86=P>';C+N"]"&QDk_:JOL-)qUC.J<,CdZ"s)4ID4jFAs5Mn#rgr\7$dQrDp1/C.q"j5Q1t6nR'mnCI]4[p9:(.so.Fmg%FQ"t7I0VoV-QM20pGPdAADtS9Z%RqlqG&Z..70DhB.A(FMcMeO3XP$0q>8KPrbYcP]:.m0:DMQET>BYRl5fOk8@;u.6L=D-poPe%%A?!=B^:Xgc_g/:a=$p+&W!(r.DRB2Wn:&?YokMqa`.!jdkGVlY8n^\sHIn%9@&a['P'U';km?K@W,k1t$"QNiY22=!r?Rt3g4C_I%/K_kfC/bNu[[gs(5^"RZG/\A*OSaoWe?qO'*BZ/[Q]<+>f?3R8D!9'gWs>gVOff<VfZQ>?;i2#[g\4Z]W^%1Qmnn!`Y(EXb2R"D8%gD8UF$O*$3Kh@r"O"t4a>@;?M3s&a!!,J9n?a/*TU_G%*<TKR92Hj8jSLL5R9T1*!]\<u9Y#:QYjn,n)g7!,eimRY<rUjrmXMo[i%V:THsN]S.:`Dmb3b?QF<Ha8Z]VSjI0fpo+Hr2BH-2,&/o/U([kk:5H9NLdG;UO/699lKV5'7s_q_LsG$![1+R<%X_q8hR&OVT\@J%=mgA"28Wp0L"#KGD4t4Z):9FebuTt@aIBH94[%4Z3[S133Tu4b(T%@+[tTqI9Qii&+9e)%$=IgXIQ/jYl1DSPD@\OSML%[fDKTK7%\bDkHe/_s2F51sJU>I^W"U8?q$BX0[iR2J!:a_(]eeRaE'hho)gIJ]X-,t,V))8t2fTXShl^.;&.&XK_`5A<EdohAOC'bM?adtU-%U4g9g>AGn%_CI\C=Gj8,'mmAh6d"=(%Ib(Y'&:;1EjdB9/^nFGb:T$lV7&l9fN+%\:BcZd8QFiGU[b/XV5@B[H_"euMA<JTG:eoj%:#';aO9.D"r7h#j_hnImU[>-"Q1]C3B(Hf+gj-[\h5'OHqp[QX=k%4q\#;Ke.%R&s)Y.8rmLgO',FO?>&diFoqBCT-2Tkl+,Pf@!%VJA\k<nU:';=#JGUVGaZ1XsjH0NrM[p'8$aCP<F7NF\Btir,_Mp2&Fh24#jG:J.!=,5\HH/T>UX$EiYAmfI$sBC2[i/tSRJXW%Ub%C?o3l=-)T]kE*gs)1,^L0[0!P:5(Ep"V.!EKi/Qi:53m0D.)p4W^*sK?&/V_JnYGDb#"4crBnEa)@*s]@S1M[)<PE(N'VeJOkXS_%P@6A=416F(=o,tdmVtq'i/3>Po_KYZ-$[^rUt@26or2;88OFKrNhjM:XB_mM,8.[g?BKPaTrMmA!8aOh?L$XJcpSFPpTLCH86P,T%^&\pQN%)='G,4fr[IKb52+Yq,1`qUpOPS=qXnl52=aeuo1.Aj&1Ir82E=/<ao:_97*O/sKUd$WE/^V)[c"+`i>p2"9ec%`2^U8LQ%[0[=EAh]G7/3+gY%fWbs-,!bL[=a9`KpFrggu'3[aGm0bAudT-7@)&H348$:lbn.mIJ_u;Wkl[cWXrHIC;G%fC.r6cfHl+X[5aH)%OKthdqOSG$i/b!Q<e0ru2:[uRFJVXDIT<ZgL0]*E=2/l<ohYM#F!pYL>si"qN*:Tb+B@fQ]0VcsSU2?rVbKCJCBH&R:SpF]lKW-9%L]Wtu<J7a+3T[7,EqDijQbtYpWccfsd^rk973&*A]3fns-9$9iCk.]E<sWu=j`Tt5iI+-#2Wlg^Gak,Kk[GTa;@+lQ;.BPUHluAN%ZXi;<c!e@g-5akUU_CkV4ll\ae`0&R((d[SZfX.I"R=S8;eJP>*5Ctm'rVE25Lk0@M8'sY%cAno6'/D]hap;+[0#;03:eWD]TBOJ%GBQO)ND!WJRjIE$L[thZkarOOHeE1Xa:Z:$S,2BfFQL),o@"l.ndHF-L[_IC;ok04aJtN_<T2N<eSP@"Ic$pk'%^-(j"jPX8HB[.%N"mhGWWIJCG$4:!)[5G;-jV2H`fUmiH=uPDgY:s6U`@*_ch<Z:hgk0U\WO3a5g,&1-o0JN]6kt?0@8sGUiZdsOl8L(_;8Ioejr@R%RE9HjO'5E?%eWHkKQJkmp.XZ`B_G`Fs%El-jmBJJVb:K.k*7GR:N@jVrcM6mXOcX;.;#rb#c?>l26;UfpZhc&OKPa6eb8__A*>G1%-#4TVrMS@k.m7?g37co](S/X5@[IOI257L.(^p'*?CQfiVk%[SJRNQF8[T2\]"158h1iXjlcL?K?W.5*Q>+=b+\Y'il&OR=e>-W'%+ZF$_40^oTiYQ/FI&aTJN8i[(f02hFd)+4"=KblqoasN;oZH[*&kG2p/:IKr%1^g3dAaHf(J(nI%qa8S%d,XX$9L*cf.W;:4;YPM%UM:6>-2Xt"[H,MB7'M\F4WP!%b655$pH$!Oj)Lk?36!>jgmiBQgb`W1CppED*[*)F.fgpuXG?Bq0/#q1UQhfN]oD;2Q&GtTb4KZJ%<*-sO4Q@n0g3<^:CWe^'B.>B<I_$mk2[]-@0RPY>dr'?<-Zf4lJO(d>om+-Dg(<5:8]j^+U_U='K`0rXdGH*mM/t1JmPHR7!Z<\.%M0Q//[B0Jo2d].P`[A%=fU7u?h"sf`M-rG?:@/T;b*`AuA1L,\UB*SB4hFu6$co.32E%mf!YDY-g%(+$@3Ws]U&!$2rOX%1[j!\[%#`h#c/o7\Nd+XIUYXFn(*-"oGM'SJO[$j1s2)LY;RgZVh!BWq%V9t)161eS!\86rL;el*t=6Ge+b]B@<i-1@q]\VI\&6-^Ral:&K%9Rm"pa]>S.BA@S:k_^FBk\!Gajqu]_Fbg?/Eh80j2KO9EW)=lZ!RdsOXJf]0i66IZJGi)KfPa0<Ej\6\#O4,kKRAR:4\]T:A"/t(%B$m1$'&@!70^MghBQiLk_PfJudMjYPW,0Nf?n[RI/_]t_qg6M]&#GcI)+#q"B3<0`:Bc]hU4GM!%\YI!8-e:Z.+-Aq>db&*k3d.e%#[?_$SNV'-DMamN,UUtNA$+O]bHe\cN"?J=XuTJL.,c3nLktHsI>6%2JPq"L/5?BSAni>\+T<+FDkqg"8;:>bL?^u.oQSQE]*_F,%XA0-f[99BH-Bb:3I]4G[6pq*L8Phj!$jG!hS\*hk,N(N"k4'Ek7%D+XhqbYBJc#IMHZL]/P&8m8K#bca)gG$=!KLcc.7cGo7lt7>%W+T,l#6VOr[G3mgc#bpt$p&XO+(`(8&8H[sO0Ilp4T.6Qb#R(n8.ur"=m**L,3i"BI,E&D5Y:P&!eF?DE%9MAY\/)aO3F'JI!+LM%;,c,H<]>.mT<WMN2TujiFB9/;1e'47_L<%"8`163?E6D<FlS5[Rg1-dH710`o'"[!AuE[2FMk\MbdsD/b_2Os!f=KuTrt*Xl2LVm%n-)b#V=q3JS>o0hNH[<dT%.u$kU&KiE2-n42>g2+Ms:,Dlu4-?)=CSX[?R_aP*A/LM*@/E.P@k#\K3/C4id<mC`\gpW_1R7hR?.<%Nrc8-85]K$X6=Eb<*:pdYIgTL^+:Y6bM3V3OTX!Bh/%4^M"[.K#R+"1YlFt(b\,?)U\`ib<KogH5coA"&UKn9nOuYGlh,NC18EfQ%l6RS0b?%si&GqTs\?'oX;'8&49*8KAgAC_fo6Y3''/Ul=5bU_3;8`-Fnka!>[@O;frT\LSh^gkJ:obd_"no[NXLdB.M_@s6U_.Eq%rB5InJ$&:6X@brJ5ia*RN5$6Gk)WfW1DnLkksKt21nZ.<dsCiL.`_lL%rEcng:6n=lG>+.nFn!^>/3GH^f9a66!EKhM*GShJtRe@%!3OWX,i7U;)N,;ET(?&0BRI\s)2bqk=Pmhds5%ODWkN@KqDB,k!ndnPQ`e'V?EjK"O\Ul?Bd)HAXR/G.',AMl-Ai5$bYNsF+LR)?%!ifQ5/4SqB5Eu.X<^t;GeG't;8K7pJC<Uh5'a2XO0K4V_Ts_mFKV$DS$V%)"<`Tc630Yg0?6`i=Tk6#`$'KJN.9d^WD@f'B8$)>b%)?S7j4+i^hm@8=<2+qg31g+Vr=m`?>Ve+j]87enbYu[]bk*Bu\h*<I%CPZYNK$h%fNKiJ'&QR6o\Ch+ikq:SWMakG0XN2(k[e8V/%`7I"k'gO?O\(($%_^QG-m9KppL,fi3cU@Zl:lgDa:"*W:1uSq;IqZif?/K4.mEGOiaf@cEIE5D?_"[aG2Jt#9il1+2ccJBr.uJuj%gbt6I9LV1Vl^365OQ=fX':dk([NY@<VE6)-=.u^M1'2m":o>O3Y&f[JFk$O"_<^_^,f`9Nba\7LrHodac7<W[W?*f>pLTFN<3f>J%A6$?QT&45-B_HM8`+L[n!2,R:=Gn\t+f:V/4f,q/2[S2#Oem>0V)3<e.d"P@l2+DGfD/qVSur0(Vdf'([j"e=Bs4[W1SSKE!c(jk%F.N(YW;:2+s!XomVaF\BXGLZ[-jaAMeFgF"1?dfd+LU4$UWVqBeJXSOD;0n`3bYdDj05CeYdR?*iib!XU6sKod^B9>\t,5BTikSW%$UX-"<X*Q9"1+3MY,*i6,EahEA'_Y"JgVHIjDMMsp8LO_`XaiHATpH6)sF!l7mA4B539mUTS3BaNCl^KVub6Jcr)!.="J*Ol"+kp%[p)oPo^G*j<(iK`h&Kjngmm$Z$0\Z"ZP9?r9'F>7kaYB$?"D6/;JSm'>a3ZYa68;=C@<3932VQKCRMb8i;.JDOB]+VfXqAb#*bkI%'80a:\K@2o:@9bHd;t#4%nX#N\6E/Ed9<Ki$kG/oJcGZMT%VAA/uEt'`+^V_UpUM>em./I%G+tF^"\2;J1D@pelYJ6T2=j"W5\2a%<MP9j_hsKI"@R!Jb^&d#&t$VkQO^&h-u/WW_37-?E$'[,\gF??$85RS-(*GN@*%7qn,B?:1ikce_]dt>YNs-U)RVjIO)]]-_Q\aQ%CR!7dJ*5rbnZ+MRT4"CN?6c!G;c-.T>Q>HeeJA,3qPu!TK3qH&XimY)=7s%RI+dq)_H7TPY,.#(_:_(B,iUl.ZkH:BRD^Jl05-,:%=YPgN$*%f\*%.=^)R4dF&3jDIH9!9?PaO*L9B`[QrmHf<N)sFBdoU!%pJ&217#AqMq(-G<"AGcY^StD`OZPJt(?'78!-lQ:rL1A.%^RF:"6;f3-E4u,n;-Efl'-h@t`"$5.SME0?9ZL/.L,D<W2[7"pl)[S1S/^aso`QNqXdj14Sa+DL-uZ?VL0Gk_[['m]D?LN)ai&fG%dFIj3]3F*_g1Z:KqhdA9UfQ=^,:KLsVfr)&D=]%'RV@QkIBZ6-=l;CYYHm'%,?#%e=s26?$80QWrh)a"N]45";`I<kK;CsFoS3ha%1DrMIa],3XJQmh#)9>c:d:WmXOW$iZSH;QF-BY&8@1=oiE%QdR=Z-D-]`Miq1"&OAB&Mq#Po10]dg=j%28X>*7HaF]&jf%r0Z?P?%XIq\:S>ch:?VGJ]5sZ$'DD=tdFsbTB^hSkUQdc:EX1I_GX=?0q@<:I.YL9+r)2On'JH\5`Hi2EKa/bfppXX0D?En@O!:8IPI7*]K%HtG)O9\1RA)t?>D!-,;^(Mb)>DcBjWc-7tK<1QGp6n7T)rifCCV,7$QO_-:\ESIat690Z`jtb?R(?j+H=_g*^/CHO;6DnN>8"NsR%3?@SbEq]f\'T:@u''V<9)$Z;nde2pg(gJ<c5YefN+#b3Z/t8L*:-h]@f7$FW`_1VGA=[sF&V(FE1;1U3U=k7Z3OcM==dMdT$CSJa%BrU^RKlLCReW*rTmuQ'p`hO3t7O,l@_BE7.KJfQ>_X,kg(h.f)"NlLsM8ddu/N;-Ha=&H=R_5S3%spLY.[mB-4;"g!)UnXS9lQ9d%?W^6R$%lDb\;9ntLa[l*Pi1NlXWA:3[-C1Z'[<B$/*@@Wf!f0\D8+7#$!,r\ZA)Rn\9b(I!fOq:+VLQ2iP(YE4e7X@G,QnI)qZF?%St[*sp+=!ZY<@N3i#14b]R49+-oEVoFK>M:0(jpc&-:Ljb[pK@P'_;":p!7[i)n,6E#Bn>MT`pk2C``]9g'^m5j>=BKG=MOB]Q]!%2=8HL^IE$+A8F!0T']E-!YhQ:jXP/<Z>Y23(i7,qA."/B%_.Oj?E1r>P_cY>e8&jVKoeF35$.7-7"c(qO\.2EordRI!:BjtO@[6l%SH/Cd8DaFKV.Tp?dfZIe>/@!Z,?qaUD]u<kf)t0beu,;Fk)'.YWSQ.N#GFsGkbJf3UMb[4"VRMGVuYLW\7*uCn;gh@qPoYo844/e%WPG3oQ(Z4`%uOq_)PQJ)o^[1$f06loTq::u-'/4Sq?n[5,achI8h+'/Ef^;Ni2Z2eW6/*B_=@-me%":a/.)Fl(@D]U95Oke:ZiTs%kt$SaXF`OXAuV'th)jqBajn:C\I=Q+C6LT,+!T2FSG8nDnF]!]0*p-k$pqP'27T_si\/=#%MYHcM18:l:(Nq.IB3/7)@SW"6ZQ3]%cJu\$CTdoMbh'#j+&28@f3+aW/S*C@X)_D%b0lQ@"=s"KW&S7JOoD$VesCT&691cTOVreS5(//^94k;f3[M+]!kXT;#oF,=A2W!l%ZUq2RZfkimO*P_Rn\YgH=09oK3N1C:jtti5Gr.E;<M18m.?8LMOkGf#M[cg^rUdNUL)I8#)C=!d)Bsa(^9#=g*rO1tfc9^+g*]5)%m3r=-*bn-)gGl>&C(Nf5TX8nUXVR=-pb8^2WilW`[71qn/#F`4NoEOI[P[HW'#$/*"%[RN;/iR=>tLf*95[\p2*+?u@gfGC9o(8s%7^oq,]U'^ffXOaLkbF<l>)4)+^"o7=9LO=TX%t<M8"AGc;f\O;UO5?I#NLF%7m\6WoF6o`E0MJ8iuNDUCc-cFS^/j]UT]#m_HDIW%]"BZeN7^@n]OES/";nX`VT&-HHMIt\ghOIGNl"tYG%5%-*eD^_rCAE?[%X(n/pd_N^4[l:l_7gFhAm=Ba[O*H;6(V4.<<;MT"3\N%664!42($->$_:.,QUNo9H^d[!aR*tpTR-f29*l-:09&el`l5A2?f[(TSV-epA$^fQ9qh3(j#KXjBHut%!u?>T\(]+tS5DkeX$qPt%mSTh$3]JoDf,Lms$ecHg,<[6IIsh-Rq^hdb7Sj3!+aEjpZ)9="#Tk9uA2I2FNi2m#:*#,Ncdu/ipa`[<SnU<g;g1f0#FJ.!.!nI/%VkVoiocm3u\`]D"33CW^i9F""BRl`>9\o.iK4J\d)G-9""Am>P(1Om<4jr>kfCj`p$-\&:3"MVDfuT)0q!#%)M-h7^VhuI@-lra^%f]@q)gYPG:Q"-:XY+X0&6Wb!8"?T$-d"A)VbKU^*-R6g5:/(Cn1d>(7:FguH7AW@=-@h?Qh[lSP4]1)mOZ(a;#t-A&'`)r_Z,#Ku%>GFJ`/NX9Q9>LoD.4dKJ%6fW"!8uBDSMW.B!FK98Hc$0Pf3*%bcMn>3WE?ATe-lSSf5i]3J%N%!OX5@SX5'a((niT@=Y4Xnq-tNK%,6l(D3dJ\K"(FMdPSp!5%C/f$'BE/n3t>t,:SoUUl:]:EoUZg%XqI00QKj&lrF/D#DFA>l+Jbh,$CqDES3UG"j*bTSKISXe1G_^3%FC+dY4D@ea<'&DedfS4B[!S3h8$0C-J%YS6U@4rC!..5.0eeicP7n&ID"&b"LCr#gN>QYc!_r=K]#EkjG3)`]9/,6AJag\.S9,8u%U"rVpD"fO2\'^L\RWSj^GfOn.S25(C+?`T*UrdTR.D1\6%;m]A5r[fF\Sk6:P#G;=#IL^A"Q<h6[%L_D&_iR@s1E(;pK7Fao0Qho%-U^/FPbt*<rTg*\f+=);U#sOqQ\\//8&.fGq(>CT)Q?o,kS7k9$!JC6:Ml$'H:E[PfNm,u^<[OomY38g#r$=8+9,4Z*[\/"W,l_X%5nJhK2SH0'74KMQkYL'ZUgf<hhNV'B>5,nY=TP^<V'HGH^,q=U_n&eDrbbk]hU69U%<2_/m9^e<@Y%qa3'`qkrqraJ!aFd$0Mo4>%p.?T!Po48m6F@:-=c&4e>M?Siod:^9[U0C-SqQsqa6ci[Y'U;d9GDGAJ&_SgBGc)Rb;g(%7]6W/2$0t<[oCK`[\d9m[t=>EEfS?#%;tH$37s2K;-'-*@ZqjFLU=k2]g/7e"L3_Ou>QW_m`hI1t54iDt<K8;]%t3^H-*itXb)$t]CcZQ/+S">J^Wr+uq+2WMf_GM8)8ODC%f*LbRlm@>:GYG-_dBAh;X0qNkMnc_8X)oQlb.BuN&ZO5E73a1i;knLR)"mi=jXP=JO4@$'!qD)mEa2eoaOCd6:o3p["GO>"aCUX*%a7JVHXHC(6Y.BCnT13Z,Hk(:=nrAV)EV]k&piC*s"k8@IDRH3eg&BK_@N!B!e=!TT%>3n>MC#D,ZUV54WGHgX7QpY;5:(3T#O&%#%\Y*=:MQ2"`POZ2@EYD?GnVE)H'js0a/#Tk,>]_;_pi*,9Jm*\";Ci0H3&C.46U&Gj0fbZ4CnGN3/p?Kb&^[X=#E=s[H7.\(QRrQp%&#]Cb&]H=nHmI'-XU1\N;NXpPgt&^b5`N?(c?[-VBER3-_%]DsNq<uD4h'`'1t(a"5l/cGACn\_iJSr<0AGQMU?XN?ji]NeL9=8;%Upkr/QUYRO2=hG'L9R[=@PnH]\Fu:FBqC\T9ia80]tcLG!t+BP/*WlPDpd2^Glk-mbV99J8Y2hSMD_oT&"`,&4_8*i?`BKbcOYm&%+!U@=<BHsJ&"&lJh#<fNhYafWrcHpQSoQ%FY&>]sX9@g4R:/c]VEYU+T+P]08LjfV\ah4lAo?gDA,<?8i["Mlo"nrqn^)ET9k?Fu%Vb3=F;pl>!H:i@a0'9.TeJ.8T66UQnSK-@b)L>?up%t5,:%_[+h%b@TaH03j&Z!D[DDoG375rBXNPKG#POaFcZWeJ&Ah4BM?,`*]%/MPd2VgCkr#5WapC7Vi-QV7aO62L9#V9u3eoXCMQ2tU+\YC]15Pc,SN5"aFk!f&9)]:YF!Gn-eK1#bk-`_`9OD;sb*oBnb>"?L+%%"DR)Kau)JX@t;X?AJ2GSZK(k<Lp#mZ;jDLKV'f=i$1VR6f[!'^f:X0!j_fa!'bDRq<@njLQj*-Qr+%H>m0q]jm7-hO,J`'g9oW-`%o)r*D@lqY&R*hHGea5E\Z)XIJ>id!9#$GF817g0G+YgZ16%=V^]@:(C.u(/,OOP&gSS8"'B0@*apf$60eVcmAf4:`K^qrDd\8'H5%=uH3j)"8]L)>A0C)6QDd9J6"1;Z0&A5B`.$=<9^lA=9KV>X)_U7s%Ne3-cj>cDja<a]RAk;'i7^ZD2:Ve2Ik4i)m"/;#m'l^esYY%Lor((nSD*C9kbP]"I]E@T'/ipHW+''bf-"pLh7/sEHR1R<N+j\8QlAP4mC6pm^0O4omNi#iR^j5*%[+Gr)c\p@:Jpm.CZkT1\/HV%.+coUl3O<IPGodLf(\?l8s%n#[M4-VdNY76aAWi^E<F5u_K]\%<4l"HCB[m.l[ZZ_hM8ucg%AuW;&lLgWa$Ytcbd\N2_Z8D%P=C9%%Nr-CZ-o,)G-`eJd[^4eJ]/oN/p\XkJ7*d11HG.4N1l`#=fGKh#\6fHdr+.rGT^5OY]<nb5gO9];Ln;KZc`&hNX"@g=Kd%SS^>hr%/0b49O[7/^,PGQ[@;R2tjn*;[Yb6Xp['`U__a<gT9bJ7/![`&ums'Vm=bJ$gOC/m/[P1`SIQ/B.N(,'^I#.Pp%E7Y####gX#GR:(%0quSQSg't?6n=VrD2nRVX0q)rM(Cup;Y9>glZL^#Pk1iM:B_;3X*8O\h&Q>A?L#f*ZX^G'\5pYtc43j7D0pdc%I!-OFd\R']f;a#%]5JW+n):s"EZE!838TH8%kgnXLZUCJ/@IdiaL&'hasH(Xs0Z2qZum`6=CqTk7ZCK##):SL.;4jQF=^_jQ3*a$/jUa7;k;5q*Pk8^%h]kh/02/\"TLPOHg(K=\;VO\:2),Se%c\=sm?["<#GAtSV&9V6PZ$p!g%8HI@K^"op^Wkf&kEHer:JOY&6CgEE])SDX+/o`".65q%1=Bi,JQCZmP?ss':B7OkF>o]R"DZuqc8*gPVPMS."oZ"'RX*>?BkNCu]4OtFH;r]ieV#0(j7aEt''nI/3p@DMP--8g!P)<0q[on2%(FZ]P_&5h8ZYi!oD/ca\!I0!?]01nUX&IC\2+6PIN@`[tg'ZVm];!X_a.YMT5cBCY_A9.udc(._$#M)Nra%60cJ6HuFX74]7n.pZ%4o:DC+XD#frX-i([!,Ioj[kAhT5"!]nXL*U">)8RIcTfKWFEZ^>@B\>'s^V`[8Ir//5/Z58!5de!8M0YL\AUJf<tAMmd18!hILo>%mEu01U"6%\g5SaK;/Lp=`t@"BMG"ULHTf>96J%ERXdi0$bX!^Df>0Xh^WXuIY^Ztq5A*]I-gOAZ*a.Yc[o19^e@a&%=9c!#dWT0]%bLlmHI?g.XDkF/%Uc*;]/(_=f%kDf"5/2.hDl`MAp%QgN@LqSV$&0E^ep\Kqlj3J^%\XG8)VLlIaabn@Og:10:F@2M(glFEaGJ]2%min_YV47,aN,$Rc=>TBZSch/&-+h>FG-Sp%AFrZ`gT5]kV+i2m-hXJ-2qFC+5,ZI"XE2U'_:Kc1e(KmImC*CA)JKm=(%KLlN;1c8%QNB[o)p[0iju/Fc;\7oT%Z'5s4@e,[I-NiDf!;XBdrg&X1-04/'+5\[(PX*-Vu9;)8[>#K1nYD*$rW;Xg-Ulu1ml"0T*.Y2Nh1P2%p`E7lE85e=EUdI*oViuU]_tR5H\8P"I0[aJ:2Ec!a*$j7Df=c4>CY%5_R2q3?tZViM?[.7^`tcqNb>UW5Q]=u'GHBF8.FqE6YojE%P;Pp$c[!Y#%j"8.d+?g7)<@_2..>8<<NSJW"g+KB4KLd#Q'$E+pLts.)T5eGg%?G-Qf((+FG[,D!*T(9nltUde>D0g<"/j?rX5k8%&&k\VTZ!eeNpoRX[YDbIWr/KD7q(orM_@mG0aMqNW,Mr>PUMK6dU18Zg[d>:I`BNKGuc0d0Zn@O"]?Ta_`AidB%`2JPD5s]GedKW%[<WtG#mRRPN2MeAI#mrM94U(LIgW)db,M6o'Pi,V"Io$npG.nL4E]!Ai-iLK=;J)Pf1=FZ"5df.%oO=8$8:$9<(RtlOg?idD&&hC%C*>7,@Pk'+i(a)_.IIL`3jN$'=T_q4&ie@(s1St/q;ttR_M<$OVLQpY&J\H^g52/T?^_?Ob"]gpo(uhHgWlf2ULb6Bgs^VALrgSl%d]`R#22:pkEX^26<?^uH\.j34YR8c:hL5HXhAS[9;^7*Ro$malO(dW(1(ha8Z!NU0@3)N`kY,0)dl47]7%t3%7]T`B-mach.3Kd&%PN4091jlf//&&1=7Hh@cNhFa_ma-3uLp6#HVUI)Ce?m[j/!m3^Y%Uf(N]?6(FG,-`RrA[%J@.gDO!,;JB1s]M6[U)im)k&l.U]2S%C_rFXb\=,uRC*:P2V@:(9%4jmat5&r.9>%I_V)\15C#A,7M2BC=jdFSF?#cj(olkfEnit2bZX)aM:jX?]cc"Fq];a=@`P=I;MVmR%C^ia2rE94!MZd0U7R'>h"Ne0DP+ZT1\9Djsk1V9h=[!%#;@Ho.N<Bt,g5OCj7SN]Gm1`!h*Et,9p^"HEN:"jI<R$aAl"NV#];oIe%r(of="0HpU$lap;;?Rai"J;LcN_kgua[K+'f9i$0MRut.!\1-<X8?uHKb5E-Qib4TOH"NTB_nO*_sbQBrIenKVrG!%Ld"9&g>^4g%jMG-/2+_5G>_,)+'.l@gfO)ua3-U*[pu:&&H)CInI/tk-<?F>X2/7qp?3?5]DIciA:hYXC8SH>&Nc7fdW\ji>'p%-^LftYGM)NF9%R1fd\V_JbV[MHVq]s-m45[JS<m?g/^r;6BSg=\L+&//H:XfeX29_pfj,?AfW4P*nM@p_[T[<S'Xn@-[&d;W,GOO%0%FC0SMO3*b^%-ec0$&Q^i=h3Q![*qVC;VY#b.U_Ge]!<\E!VF;`!\W\rH"9mu55nE`5*R`_ED4%oqb7C;$?j\Y7=#4H2P1CK`NlDJ/&t_P"l!cDc%*OE)`TK1P'fLEep53\`l(l>o\EF]D`@lVg4;TECDd9:/u3SGYlf=o-tJ8ObnY=?i=/pqoNX(O5j#Voj;`)t^l'FoK$N\+*QBUe<D%EQ-<BnKuk1p:6_5=>#AC!-\?0K(UBOJSD0o9D/kl?@?NWe=#?M<.StfYL?k"J/&P](eK`1]Vhd.1rc5gaD+X#2aVfcU]\@jeYT&`%U#Q1<QC;&I)a?F3"NY)iP3Vjhd$%cg+bC.E1bdEC(V,,-fsJt\O2u&RI4^&OSrEFcRN5Q\^l:brTadsN6sT;2RE@#86UcNK%=mK,%`=<4n?sh9\N3HrIlmMHGX]2sh<JqKS;'SFNRdVBuH_kS?i7t0pR].*D+N<KKWM*EpNSURo9YG]YW$q%[1=u1=Dg-^h'Y]XQ<)&2\%#fSloDKo%qXA9@!]'JWOBS;@D,P[rgU;Q-u19SfH1r?(Z9Ui=OG(m@]rITcG'/n'j%9!h#Ou$ZMM54+)BdN;l^tW"U8"G'[Z<KOA%!s'AE+L3,A19pDqef,q+`bSS!Mk-Q&K;Z\"nH8.]H64=iE?$A@BHIfKfh\Z80cqXh/9E<HD3T<A.,ta?/Yt,m,H(Ru$;sKU7%KJ"%,nlUi#HKDiKFjnWHIt;JA'TCDi*SSL`QH%QkeHU!BMPT%NrCYPj=lSLBJo'EN$t+sLngu,0EME;(VM8q$JX=+hQI)nO<m^cX1:TY%65A0kJnL(iP/8sZL,Dk:%e.&BQkL4A4</;'Up/E8TF6,\bTl1JR$l._7Z:#rMDu"Wib?G1c&Fjt`K;%i:Gn/(QI^0R6@\GBjasAR%:_cV"]7\CR*OZkj<[)3i9.eA;`UlDq>C16,dlTg1Y6cPJ,GfYBGH!Gn0l%]\U1NaJ`jBWd#0a)6T`C?1m1,d%WR?n%[>3+n-_/%)%\smGWN45DZ(0?)FAE^*,#J;i=9`68X(6*jVci#!u5LV@;YOK9!!)`e'NEFOt!S)3Qe7(M[DhUF*dY^E46-lGmZ&op`TH=)rQr^VG%(q<'"7]uo]S0e@_k_KC:GC'I^AG]7ZL%PljDWLKB9K*b-Po&e4Z[KA1Z_FeNV^Pb`;JO&6,=$M)E\55aQPoWq"bH'!Fr(>9b<RC5%J>)hj)\ZpUJjgosIW9:eG9qGO'W@p`;P"/QO@m_/U#M1A<4edj[6Us&h=h6!CCJFJ`n]U'QGFJZoiQm:M^Ste?e-do&`?LT^9`#$%A#WaJH2tgn[]\:(lkP:Jg>AiF24Dn@No;C'UA[NCn>,mXA\gC\>sRck8ZJIYjV.nW:F/si"l)+<[@L2P;fiI`\V-*(q7Eq94ZNJ'%kBle1!^/U;mHJ*e5K9iJqM+]+nu-Q',QG^jGO\>n:uuI4C.r7pU0*$$QJeX5d"rT#o3#0]NaqJ>XZU*5_-AY*"=4op4@1Hu+b_Z4%D-\_N,`SHZUM+1/'2!gM-r,Y'e,[pY.qGrT;j1tUP<af.%+\HM%`'p2^P[]n!5g)PMOtW#\Z?u%Y#LQ3KFWdl,E3Na5Ub/4rhs,#%OmeZ_37".KWDWLb*CTsb$24'*JM%1Of2C$,GGeI:#d"f<(Q7sZ_1t`F4.#pdhQ8gW<0&)6p\f`\>n-"bG0k2[]EB+B.$Z=bGQ,bg%,8C9(1Y+rs!O=:L!\@u^GLjk!\kAD/Tp"lWF'0us4&'P`dM9qSKY,?RZ&'86j!LTiMQ0gkO+(0R;kfgah;>8:^67n/rVK$@L%I.[%I?cpVDj6W\g?-Q$QjXOBN3L"D3G"EnJm:fpVpg&Dm_qh)3ck$N5SMj?GXR'>L;+A?qo4G\D'_W#MbHn+*IlJaT_%muLSnlYkCr61%d7k)Gii<Y'XXi#&mB(`'C-sf?:\>(DL_m7^Q)]D]!@@Huc%pJ=WagIgL$p9pR-=`,6KQgu^6Xapbkh+kAgaFrAPasPj[oEXRKnD6%Q:AZ$IK;8j87nmI#uOg[9I(BRMd:n\!h#Wi\n1L;(]mt%<7YUV!q<ei9u'4`pmj48T$!$d`\HUX@h=hhp8Aff2:#(-T0;;X)=uT*%n?n4P1hi':(5n>'Y54#"#O-T67m3jG`HAOUAeU"U^b<YI-]Ms'm=in$pj(:3[cJXJ][i*8oLdL6On%4l3n/s31@6cT4Fpi`42"De%.^,CTJTkf2S#m1(qKlgijAt1#0aD;_4q*aSJiH2D;mKH9fd3"<UIOAjdQ%nHc^:C0>-G,a,*(oWH6'T=])X47\;0Y%U^VTXpMm;!%aVi0qL&V%sq(SumkT(1%oS@2h7+X)(a?#Cj<B8TFj4ps&$XJsQEfb-l<NaofQ(hs-\uWbcjnT!_FHk(?BG1C>L?@^+(tGKM6"TDD%=/T"@<,gBc"qGOFg)jA2@o[;t\#o(geZlVXP@R&o:O4p\PP!t0Oa8aR=EC%QP528f\L5C4fUbQe:93G;l.Pd,XBmeuMga:'d`Woc%H]9uo<`*!#Z5K=iqa>iJZGW5^m4`AHYX6l5f.M0hB'hDu-FsM,Zg?qNB^C)dYZW>QI;NWqEDU@Cn<k"lm^?@@H`ZUKU$QQA7j^i+%8B1e;h:,T.-*aD1XR-Z#dZ1/3LjBf-#U:hXaMl0W6t8CdCHR:CF=[qAfTo"hX&]sNIn=1E\b&A:JUqU_ao%^k*fk,tk$sFd0*ALU%`<pmfnK,2T>'drB9SuN956[coiX`Du(53gI6oo(MktWX8BG=rKbc)U+e]!kg3[t;0is<aU*oaM2cZREt+l9@&@^])"8.&E4Yr%'%%K'mTH.`0ir=&%uicPdRV7R0=:E6?X*A,4I?mF'>-#k2ZL;a@-8io?"(bE?J;T4nBT&eeTZO1._-,!E<fW_GIOK7stVh(L$u']j1j%/%"r&/l?&7/eIa<LY=C=#$n+m&Rf<LnSk=p@AZmE7P.8`3l-7ZXWfHol\;HH.Nad4@],2,ZNQ=jXOu@.Zlrf$hm44Q6CH;PcQ`?\%!tO3F9[ojLAY'tFRrhb#bF?[aRS7;PC2=de'&iaSCD;L&'8n8I>m.,%c'UNs.]J%[Oi!X]+4Z`UR)R-hX2`3f'Z?8+&/,LS=5:pE%B=^-td$+9;!m.#ZOh&>Q".@W+9*\q(g\ge/rm1cB!33C,&Yf6tR(&4o8M(sD]f;a`O\+`.OA`?/j<Re(4:(OS2.V\p7[nqIB3#!J%,RiG]hFbb6opS>`6mJ\F:N+ImVmt'AT%,L`(FZ^cZL_Nn*XS@&NsW<o#B?kM?4Tfn=,?B=P+#@4$ocSmW,1uj^I^P^-&0IY00h3F%1f`3LB!"JjT/?gA!Lr$5[;r9_%UoFS2oRQ[``#P!?aR(*kaA_"flT`(O`7Zqq"-YH18GXj&S:5CKTVf1XkeCh'1uuGp'H_pE^B[5%UnCn@`iPN&`B/%t0*?-ldI'Qi#Y4@#?OXjUUN\G77u^]=74MSaPEX_mnST4\*%.E@T%!g-l2@mfS4/(.d2W/GOh&=W4",8G1fOmP%;)Gipf./ja84SPn5o;(b;s-dcYq\psShI.8g`R#,^ab;Yr^TgZ1)h]Og]3mL6X`N!G;M6Yfg6"@N/(Br#/W^D4Xmf?.'mT;]d"4N%+Z1dT!H(0=Q-L=k+3$38_OGIhY>,ZAdXBH:!Nedem"-0/UJe%7rW7GlaT+`AU%L+q$ln>9^sV3@!s$_c5/kp(3qp#J4/2LpcL$EM%.eeWSWQLm7nd9nIi#L6%MERL^eY<<imN7V8!ir)ZlR=cDUX9JBR52/MJ=oB,@4.-bjZc'-9;G5',>d!JJ:)%9`@M%a`"CibjMtUq%N]8Z-4.D'H>?lLA#d9;^3Y(bbc<Orb/%mUg]n.B9aNOA^<nbb[&Kb3rNC>/V0h9Z&?:C2.#.Soh.rb.<T8&.#ZK-k=7Y`c1Uf.-B%L8Tgf<8@EeX(#012/T/V\]PK-8j^Q*.i<0u8)':g:N+SQhTiQ5+GeA93"$n%FEo3g8cXU0eVO?p/3Att+7L-QGAJXqANdl!@E_lK%=B_gWAt`)=[hmPC^.BJ^?2e`/-XR?^n`!SYX/&QG[2$S%J//:5]0F8#o1KL$oadplb+H:C;*\;$WOQg4<FmttW]V#ImTlX'KYdB-%_ZDn:GechW$9Hn92D#7k+(63])2\Q7NED5@c,96jZc?sCpB*&bb_[,/p"TJ54+hD>/>9V0h$=Y,)DOH48r9-2?8r3_^F=H@i,HZ`%gkPNiZqLSl5<5?d'6fPb%bUuu!3>2`^@0Ime3_l(KA>KmiDT6bop=0**Gb%%MBgUseOXQ9qu^BZ<Su-r(8LC]L8;t_fh@L_dq`l9%.%3qDkP#S%Podl#ol]C+R>4#)XSu(BXppS0bXM$8?H9DqNW\[ZQG_.J$e%CQ_J()l/U]Uqo8,!`(soJ7)+3r3+pT]opVX1"A)R+c%F$_4nH3Oo?U^suD^QQS5,/[l_1IPUYih7Qd_i[mWPCoHJFMP&;^4J!UCdG?)fNJ@Tmrfcf<3Y*i+dZ/1#,I=7,58AU*WRFpC&Y&r%!.aU+FiTm=;IKff"nU#Smd)_`a14o$:(4l;BsS6)5o7"=L!:DcRh70REUFr8Z0<b6GsklTlE>n7$q-7$5`8;C`6<e;E[[YR49mW&%.[ZpLVA68rpKapY]'4Ga-2J",O0P"l,cK7q"plu;JhO)POoWfKmhqb*"*:3o5?Es0LQQ.>%^=ZO<T(Mob#%:R$B'KgJ=R6+7r;B9%r4(iZfbFpM[^c3:fao"A>)fR9W>S<?'WRkb4+fR]EI[`+`"X)+.&aoGV-.%6':M4F6kTAoPXjOjU,+;P=VLMO1^1dfM&+jF^U&e>%938Q;g8_0#mt9\9.j>'4#ji[j6mk!_5)](1V6R'_Uf.%>S-bYg)2P[uFk4Y."7M2qE2Pa,eSbQ4Q]iX<*R]c^KFrO)Yfg7>$cff8%@cMUen^o4sFI;XANIWRRa#b-#VIb%\FGq6)#na.ef69eQTYp%G"=af;R2Ut_HtAi1O9LaKEda)LJZ%K!31L60W%=m`ke>MgA!ZIM%+oa)j$&+6@>"^n].GWZFWn=q7e^TT[/p)fhGYZ%gS6Na%**0!s96@R!Ek7`QCEi:ZY>5V7nV[:8;kR>5AAEb\QDt++nk2bfZ*n:Y%20,0rq,:jXo=(_51-3Va8U)s,^Rn9BKEjMh)^Sa#5%k,Ias9On\a^Tq;-\t+&AU^hd#fX=Bou#IiE-29;SRBK7#\hk6*]%g_>\;7%/QkJba&X)b(?4Bq@`'k^5r>*sF*@6<'am;b6cZa,cC=G["cTD:lks^J,_VVqf\n`N7;qB2d+hs^@V3pdni7*Vd4g_4/mcI,*&sOW%W"2X]bb8<'Sb8X^,A:D;d<s`o"!69e0=tr$MKXa<j3:q0]7PchjB)s3(#hH%WKa!g\6oTur<q]"!F-br>oibJ]Wc4(ehM=uk1<F=%Kp[d6dR28Gh?DpIhrZoeC+`=3:malr"]YO'QpA3EN`:]n".mB^"cXAp4:Sf%"Cb,b$@A+_7\kJ5F>Sc^Y8.0u$C/sVcb#8)57kSK%$>-Bp"X(2-nSm)H+V<(?n@,4+6r4$WMY7n*=?7q1<ssjTNeK)S"IS`Q"ImM7=3c_2oN2Ou&`gSoU#*PmD_D.qC*..u+K4_5(`V"\%i?J^!N)Y$)4cNPk#+\HR@;4%H^%"Q*<)MjX5=i(\>sLhm.baatA!JNeic-We'UY?b8K_o!QUTNYiHpJ*Li!Kr)45Qd`Ni8QEU58!%gOR?BfD_k::)X>m;K=G72l0r9QNCQ;)iG*Z#dmMX/[CuIW,T/_B,M3JM)LKr!FK@oUI<5UhSZ,!rTTPECI]i)NcZ7CfO*.UbnHg8%/GVMd-qZo^dSuocbbm"<XW77-6(Cn>H)@/^^(_t^P_]EW`2N_rA1)XMn0$EQ&IFN=Mg_%TqJ/!=&kqGV_lcmdO.h>E*?ujdWW@<*%?aL;g%G&kYiHY/1-9"a6U(]nP9+T=T.&BEg)"5;h%!mrfp=-@UHquHD,`G\2ke4d!djqk\O&cD*CsO^kSe7VBL7a[hM[4%j1bmqE%iXO^@bJ+X/kIMQUR-GgE)kT0(k$kf5ng[d/#H"QDj*^3S*DHY1Wre7C!A^f,g_`a7jN,abWqIVu\:/^+lme0R5h'#^0="r9h9:2&%p_sMWqm0Cudr#c"7>=NBPbtIJ3j'eR9hWa>Vq/boB()f:IQ'qt\u?uj/L1(M2Bs_rM'd!%6$t:s`kH*O@>?],=7()D8"Ze1FN6k0%X0GJrV2Nb".2!<]rnf)t)qF*;#s7RrTB8#1]8QoX\nfbQBmMCIH'*!-9<3>Ch,:8(^bWn<f#V^u5`4WUZV;%gDD%[]M/SO\?:Qns%XQ9$]d-4]AA.$?o?&Y%'H]<ME<\[g@,7=)ooYk*2e'Woa(p.f&9QX[gNN8X3\i$L'P4"?TWX`E,(E^nY#\YrEb&7TB%7ds0CK*Or%L'@+33%ZShmGWYhVXF:gVgBacM+lNY3XQ5"ChlQB>`X+s<a)_T9U9AO.0pRHJJ\[(4k>%]=b40@`kh55P2>4S.u%jdjJl67J?cGM%K.oqWm'(\`+kZ@VfK4>aJXI(fkZ$u#<On+p%YFGhb9$*'iJ$Os'MF8NY8'2K(%!+mHs&QZjWr;,LM6&mKpX(gKa.$FZ>/>p.iBZd%:k[_d6VQcn"/l$3JT*QK":]H9>%8i,!]n6F<iilgK+5N&"=F<3QmSMaTOK$`K.[3ga"X[d`unu`*MOC@,-e`c2DI>Wq7fVPf2O(^%#SVb1-I0kSFP"CeF[M9gKPsbtJ:[*ts5>Y6<k?J5)I\%>[Qt3b84]!lLfc!qYtct1RtBJ.7LN.]-p@Kr80Unm=/H-?<nWP=K3C]\%]c%$InH9hM\U!m#-$BDW#gg3<h2FQkks>@sqT(cnPqGOIfD>AqV0(\I==D1??tl@Z)OhQiHa!ik_:-;$VeOQYhM+W^D'[7.%kt+X%Q4F.5`eZqs:jL)Bq)eGI';RJ-)pNCY9(6-6&NPk&<@,[p%4J(<+9`JGfpZ;OlV$0HN;U.an5D1MeQZdpI4\Rqh^7B9ne;FL4N>)b%+Pk]TT26qI2eE.,\(/hP?'&$>N#HH99LJtV1J^f&&H0e8/h4RSE#<iUN)su'N^M)((f"\YlEu3!;oDmtAS0^Kh.F'gma\M?3c)?%%dcjPX%(/K8[%<XV:d@efim>E*-fD3K)=r#1MmjE7MQ3r"?5"Pke`f,O<e!\Zf!Z-qW7!FuE*)sUCn"Qd]q=B[5q#tkE;*;io,Lh.%;*qG)'fX9]^SiQL)c]40ZO%<lLuDGIQ"dWW-EbH;SP*3%^n3O0@f9.cc=c=hJ-hUq>a]VZ7tf;C(s\L(5f131%oi1gSo"eQ?'f2d%g,3LS\`=L]/8]&u&S1V]>8(JWRkAgc6IZk8%`MfI!qblXeUQrK.TI<&j0=_$=C(QR7d^r1,t=of40?#rNX@F^<_b>UkN!R/cuq_/%Z9m8Cb?hBG9B<#Y%_;^nLS1Zk\Ii<YgpREuB%F$3F894G4+D2F5+tZ0W3r>]U%cZmEg;C9[ApKFZLC%PJ\6I^dZi1J^MUWX:]NVP%F1Z1_?Kn(;l^9pN!EbcJ,HFcA'JI(,a[A16CkQkUK_?%S`?%#i]:im="-n=MK_U,%=Gdr]W(_Jr=&O[oN(H!OH^t;r5\>6Y1-.SO%A7,F`h`$XjKdp]b'`cqU($p];-')^icisJ"(l)1?c?9QLrM/)WHr(,=4Ium\]U^qR]nO&mM;>^gXg^_&j^6d/O6tg2/16U0HaA2d%J97G;*0)/fg3)kO8%X";&OZ2.72JiTV2bP1M%L2Hhm&pY$n_Ut$ksjso\(u$@7[GVIBTlp%B(dcjaT;?3E0"VCJn=:L+q(EWa9$`%+a,35/9bK+gA+C3Y:(*Fj2rmk'!%RY=pWh:fAS#_HG&fJW$V3ecRDi@/oQT6]"Pjk*4MBse\]cL,\V"Qm0-8G:[*/lf7aR3/m+<T%[1ZD@<Tt6M>'4&,k\1Ae6PU@D!NCb1%O9F/#AWtT;^VJbZ.bU`Uo6l<Rt^[_bE.VAb)'^#1e&YK`Gn@ECZ;KJB8;!%p-NBA!X#[[%8XuE]->WsIEAB<Z'oGeuqmI::pUpF'$*WCb:1NZg3VjbUf&AEAM&J[O=<f(dHj3!>,BJ(WM"URTl5f[<WO&F.&%P]fY?L#H#`p0U%k;8AiSi>T'jC4p?`?rMr;F!FTj22/0[s%gdC^cJYDXb4U=]eO*6bESZG+T?NBd%S=G;I@3[4'GJU;G3i-$8FT`Zm'>QtX49*m%*U%_8+FE?ku(Ye<\'i8JiJ%TJ=9/<\H+b\iEN=j&bMZHAfY&C,ClaEO33BB/<=?q28b[dlh*]5iihe62!,)9Y!G4PiB$!N1hAjg;kL4%p%-?*I:_s$I&T)qTIG]!Vtr$"6RLQ=F2r`]oHP)ZY5iGm1uR)RTE"EM0`aqm8N3^'n<pE#M!,UK[(nb*]%\3dRn<[SCgCaWKCtQI%Z-j)e9@NXIOcteg*(g_l/U3$o-5J=i:gdF_<?k;6rJ@gpB:t!8M$fc%!Kf&Qe!*cC;FaYIAo$:Kq.Ru/GLB%T>k+,VpYIG(b^,lZ%"c`dbp?2$kA+60<AQ:Q-(sG#U%&_ESETR,c;/CB->eaCVRhO*X8lWUc96hMD+RH-ZN2S3V=:eHggonK$LEG5o<.#n$'m52Yi]"h(%`&15Z!,PM,6(UX4cpK7J$PK(`\+<$G#\+J:.?H$qnjd-d'_&VDZ)E0`SKdtE3fD^`e60&@rNXbRW!XQi3P:6e9DC[^BAP:$,r9lB%e0C$Q9$Sn&a+pDi]qkJoR0>%#FAKGsMufRqeX-S$=W,U'#kX;UU_5N=n[/k<?B`?$nVo]'(6A$6,PS)jd%BO&qODgVIUs_E#kWrQ%q`9D_2<c)=Zp\9E4X)qTWm`^Tdr4T6)):#8lu(F4qZS4-ADj]bcXGhJ]Qrd!0*3k.*V8Q9Oh3R(H&Q*D.3^_tTZsIr@B8_7mP2VY%_d/ho65<MO]L.&&pWJ6Qg31t2G`-F;;Wqk'<4&:"lQUfbFr__:<V"Ne0%%bE_aaR@28BT>WA-t2)ToQb\]I%kGbl]Ir"1&3DJajl%c?@<q`36sMr&&2H>"psfNfi0:%KGDiMR&)=bMF18gRq2"N</#,"hKB:6h*n(Q+4P[!Lt_)>2'''2a6[:3g:V9mnu"]G<Cail>C$@%SbuCgomZh]kZ,N]kh&opbNf13YTM`+iQ;;bBa0Qq:;+4[AXdPaM?L0ai%;VBFZq3%:<`[bC$@89;HO35LTIR<&>:K7e$'ZAAFpps%!Zf[5Wq=>"Zge:f)V:%m-YVjB,)[AV_8Yh+!>$]FlZ=-8]S)8\d$^=J.oEU3^da:Q'M1Xo<BFqB;)RGQo#V3l#_F*<3j=3n9GF8]%peF%B*aEKW*@K,jKh[9G)K6ol>KFIkMP?V15*Vd@o;EcoHAZk:<(Njh\%V92CTVS2jK$X,>4GbI`X:qG/\T50FA`/>.`a,>O9#Ii%lO;['S24HkB"a,]U;"-)e`mq-fsH=+4<&%qb5LREp41e]O$?R'\tSBV]ZMiB;h7)jOjYgZa:QoP:4;CV=l3[+BI:_.:A9LdCWUV<%9^:e?NQ#F*&Vq%iAFX$*35O!D`i'LCE/jL!X</>f`H?C%WRriE(5S[qj)RTm:]amg,s@lS'n8oATOZujD@k$tm&qiVD4KU5K-q3?%Tu]e%0[B*8*.YZur$*gpXF/fWKa02bjJ_59HD94\rcO,cd%dTi1t2T=UbSo;+s+^9L10o`_+kHTk&L9QI`f;u/2Ta(>U*;D(LCrl%PLWB3V+m%pDoFgM4aljqZ#Nd]%:)t*E692(,8M"/8$ld2X(Q:'L4t6Aip#3'I"gUXlOXI9s)c'Xee"OJH=:\9.\<n[M:?jKhgfk(%`HQ1n]`CbuU2M?bofS9cTu%hWWUn%0mtVf/"^03T1DN%?i*(!K(8qc$K%d;SZ/Bi:C\b1N1LML3%-]Olj:eKHmX;t6.Nk^'&g(Cl%?NLqnDqJ?/?-d?Y^5dN>qPKZU/a2'e]M3#Ugo*#`W`Gb_+[Ba*_h%n46Oumrk9jR;U=IGOGa4<X(e,BFn\)pPQ;)5WMh]Cu@n"4Z%5+gaF1Cb1>2dMM'VJadVBM[X<P/B)CFEA$"/U&o59#tCfgce*T1mf?f6o"8L)Z6i>G,UVg&o0/VGNV$I87W<=3AG+kp-'=>OUU]<%nE1hF`/QeX!0kacA/.7b$3krBH.$3DbV)0o>)gB72%q&`[ipd8V"4<e+K]Y>)`EG'm7`Cj$c)]I$:3kcWJ9^b9hk\K!gBDP^;+pV%T(ph5\?lKuX;B_EY.L:R6:[a.=9Fri4HmnX\s.n3/IbD*91Yq^ac!)0T+VrA3eq)t7':A(]c@2!J-"d6cY"8sR=YaN<_WlS^p\Z4%Vb=#"+/:coU9g]BG_*.[5@=N-0%u92pm:te?i\pDXm%(q#"Q`E0O!5Al?_e,a@ZaCf5gB9S?dYRQ?SVXMbZ-9p$XsEHD?A^Xk(^[%R9in6bI_<`W3X[VIW))L5S\hAVPj(\--+?WU:AoVVCA#>?4=aV<o/G[i\5&']`E)hLb(HbS4Gp7UbumF#Fi0eJ3UquMY8e.d*)')%@0oAC@D`>gblX?c,Q/+3[6-$brn>it;V#>5)`J7Y:,k(=q=Wbl$_KhE9t[S&]`a+f1[/'!!2e>'?Y542Yo]dS09X<sk_=)c!`"id%ai^Mtj8o-DLn%Hd6QusM?.Z.iWN*\Z""Tmd1Fogs9.\2\M$A8k(O\CL\m^%+TjJp_Qg&&o`ko&_f]c.B[]aqc=SZ;Cj9f&r<s@^P%ic'pF'3lU`CB^ccT`=;Cp9R5GPaY'hC,QHqkd'U8=fd4&R;id$rNEpZ@"UI-[jo4'UZ07dJ?9>jAdS\OBSNbGR-"^)[iAodiscd6%?^i7?hb9q^]LB"9&1lhn&*IC?j(&n);JdG6<&d3*4DMUP8%T*9b=GQk_>dAs/3O2sE;4*""UK^0fnj<eJ41ADD0-<uq,;1ZbnB0o%NrM"&-JK@0p#(DTM$/CV86^Ym>2]S=q_n:`f]$'8)CVR".aNuO,u@q_*nE%IOYCL;L8_S<rLO'Al*U!#MZqb97!ne<Z47;hb[i:K%nIjG7R8'Vf!80[0@A0(jTlc6;Q-"^VOZ16(AK/KpKHE9bgam.;b_gbo-:-\rB]r7%Gi52LZOm[42:qin\h:"_&7C0Cl_p+%"1M-D%dti(D;kG9d&M;Aso9<A>Es#?6*;l"b<8_>eftH"Y2@C*#k):P=',eh(&3)tR8ga\Yn:)G*)DeAJ%X>AurQbF4OL-fI;".iSE(\NL%fV@pV**UZ1SN<m1.DY/M]1X5NV':(D8Q7V@DjT$p:;%.SJ7KdlH1r]@*7[1rRpBg_*1.4ep6"_dNhO=9\M'O@CsiIlSK]</5*SqM%q1$U^<8kZmjU2nQ-R43\k2"!B=!KE,2$-S.Xe]--`c!Jb%EMKa^`AGU1pK^"5#!+WiEK[GKN,\n^iqiRR/!DC^^"C8h50:VeO-11%<I-JX<:Hh8\rl1Yre.-m'sC`X[Kqkn>.E:C+q'!/TNjcYT0,-pNk@O5(,dCK"GBTpE4i7A/88=a>u`S<M1il.!@OVKB\<g3WN9;+%g9cP9U-ugAJM%'KAi-U$$6GGWJKu9N:HbkR#'Pj]9X18'9#PscBOk3I.JO((<KL+CRq?RDT]@9+s-VOCe'SdR>l:WlrTf6-DYcP+%<L&CU7/jW"n`o7u!07gk9!S1$]NUs&5WreVI,U"a`a$1Z'YYhP$)^Obku[f]a*rtceL90K'@Ohsc&h6Ml;K*&e;+WT6"P!O<&=ZF%rS6Rb/Dcc#G+]R"WCq.CflHb)%i.[kRg?Bj=<O^E#8+l$a[7<.<>,tNUAs*4&#s+>?-nU)@dB@o04%52X&?-#hQj<-fOCYViP#\t%fUgfdq<;RO%3#Tg6>LQ^_0Y@A+G2o;*W%n<<GG=5>\EK?=Vd"mq_!B`k::d92)WX\hj/X:cs9KnC7iG+dgs3K'pf2#kI."H`GoT7%E]-f!9`>V)EJ1:t]d073h8,80"LdM./B#$H#hBTfbNrt(6.UTMj=KCW6@gHCC$<C"5br@T)]h9XS;:mG-T]nO%7NM6Ep/77d%6E#%rY)lKW,:9ILbLB_E>6d%,9OZF=@,n&j=kTCB*cUqL<AdaCBHtM*$<ZBjTZ%7]7_jEXa_KSBKF,"5-$9WT30Qc4GXP<9&eJ=6po!,%.`M6Rd43qEB`[hs^*agkSqBW0L'sH=EP?.X(>UJ+-Ie&4F2%"O7>Y'k9mn44[2`iF[VMA;eKWR-L:b\F<;D>lH_Y?,%GKuIe9.FQ%:qq/Q!1OeKBbe,8?_J^_Q*`kTe:n2GGRDY5ZcPWF(.Y^PS1_,\p$]V2%$K\>0uNPY]5%96,]kP>">aSHO]_`qTQ>#\kN/>ZX<XN5%,S!C%]b)dZk0J/`4XfB.Alj=S+PZ5tbs8l[kcHI)73?r:\tL5U)F3$W/\>b=!s$Sj4*JgIcTj17qI=k1@s<Q#Y7alJV+[KKO&\TR%84o^7T/&c<><AQMfN^<*!AIEr/%9\>'Y#id,NVm$?`2.ulq4u7?JNauZc&,AfF]PH01MU08k/ToRfgsEc]n;Ve&O@e,KVF\+2pi@%((+/`;Z22^m'j^'gndfKAMXtIDKDb3$d-^7)2t:6@WO*nGoWi!K\-l?nU$]Zer_s3aSmOq.M=JW?%'2Afd/0Q:f>#'H[kD8<jD@X%Koe`;(o]5/,;6kXarIT]oEC!&rfns)*ue+)#FX6G@@tG@E3U>2kDjTg<"\$MIbN!LeHr>0L5uH+)IEISD(;9TjW<IJO9Sq8\bs+?%h$U@An1-;=olS`85hXU^Bgb#Vbl"m5d*aTRHNk_l>mq%_Rp9d45a5I+"])C%W!c_3-e;r<3"YH(qo@Cd54_!%j67AX5_Yt'-@E3=%h%qM^kqVPWTGFk.StVXfC*UDu$s,2/iL%;oAME'GXPOLa0Ae'`D:BM$N2L#q9#u3cj'PIF+8ok7\e2V4Vmtk+$bV@&MIP!S?jM$&%o]7"lR.\p^dsbWLhGOYMY5&@3f`PMskjs*!St]"gY,*]'&Dpq(Lh=b:/ZDG^O`e(dlq-]2fWa%eN'Eh%4/-pX/m5Hoia+Yt'li5+%mk2Y;<$eF2BM>%oVd=DH%4IA@D6A#\h>&H^3F9:iAKZ7;bt5<R>1]Al;^5UTU2OjA.<cQhM0&GFl^g+U/3t;WDDI%.9/^q[<*Ue4%J:nhu\$8``c]LJX#kpM;%Bt,HpNb0\VaDYO:s4ID-qZp$\+/GgcC)A,]`re!i+Gm>0T:,731(0H*)K<RT=QT],*mE(Fa/@N6c'me%=re=IYdWqI@sr<E`-=)^Ib^+QEBV@,8/"AOOP=XP1E.=3B)QG9aRjC.ek*#dZr2q4@_j`ua05BD_TS6h[$m\d4]+^LUM&,iI^]jl%GeC:>efU`,734()D.@bqpac_)^qNY@q@&QfqbE!kg'nRXE`KU;S%Zr)QXt*@rs%=EQ'M>/0S^&.QMX%V=CZ#S@aWXfOM%[.?RE-H%I/[;O[rD$l&dZmM+3)$u+uT$o*UD=hSA*`MqCCD7UiU0;=J1"%s.TFW:Ej>):VM6ZG/R+t'qjgK^WtG6;Jqqb683,9*(8pOkt,)>%H=BaHJ//f$Kb&CH[*[(_*m^5RbFe[*g-KgN#es=PqsDo::4_-[FmKNkT"O@t)]^-Ij%M"5kUZQ%$EY)].3D$)Ua-K'B%$,3c\2a,%&n6U=i`UFf6HJ+*?O(@^=PeF;e[ooa",l:>HLV-$:AXHj,OD:%m)^^5h2pR.Odb4E+^F)8:ZVgS2<c>=PE10V.QL*ioWQ5RCfqtA%4&WD;0YM0=i%DUnB=L#T@$WNa7bffbR5*U;*`;m62;a]0-P"=$r(_O^_f^82-uA/3>:DaOT.Sl@C45@^&KoqiQQlD,o7!o'"@C6a%G/"ZV'a$9'Y`1!&4\fY(P>8`U\k,$9+(OK!#(rMVcrQ[Lcfl!4.!5s2hQ(/,0@]KnSVlD<50NQj-#0fgep%>dCZq]1!.<gp\Y+RV%F5<!38Eh`VrVPdV'J?gf#Ciah'Cl!4b\R9QemR<la".4_lJ\eC-XY;$'h"$:lIR+X(/Sat!=R(a%3>3I^g`-`<GAA1qo)p;#S-;4%,b[U6+bLQso;q$T%N7@F#eAT[!8SFllUm0d$N%2"bC7s%JD7iK%P:F5":PVdqoNMoUV/rb6D[#/,$<.P,)?-`RX*Z4TXf<MU;;S/%hmKsf@.b\Tcr\T_[pRXES0Jrods[3dTE9fcr/]800[Xdq$iR=a[(Fce=>RYc\u:@&j0_;kc5`87L*5r%p`mh^[2i>0@a;3C#rMa"%Vhaouc>?$_Bs_g`=qHfbW%lBc2*\QQ]`:N^d)[VuQ+-k%Vn9$h-I9JRZf9qD-jh2A!7ZcJ7ljS+O<0q529\#&0=@`@LtZ7GYNB;U%ruO<pN*'81)FMb/`G&A#9c<Ch?Je_>K8'K\`@q[iWS\\0YR_;9;>p<D"LP<+7q!Fu#4W*DH(<F22j'@TY:OsG,p(bfk.ciT+2O_q%FF)+H*3"+/IU5XUiVK;j!:K!fSVCkB[U8^&o@-IV;'/YF3#)+ZA(o0A5/[uhrNd,e0oGPr<eA9lPcQ;HB"7te'Dj2ED3oLe'<)(&%hu2.rK4&_`ocDKASh)f_Gl8BXUa8hU'WMp0&%7MF!/]!f23a2tOF@2#3OS6Tn;m4o&N\pt$+AJr3Upj)4%q`s-r0a]B_mbRgiQkU%p<sgu873:EDHYm5=UIMOLO2@2/^d.`J1?.3_;:#@Nk.W]-(aD%$D3`3GAkI/Q[+(P$A'MWd`Wsi#l3iZ@_3?=Q<00:JNE!n7T^^0%b766)qM1"PH:.lVnP^_fTJ&c"Wk1[s6J(I5E0ll0em7hP:A?7Y1Vi!QNtR7tS0^Hr>hmaU@t,''9qep8VMk;nputj(B[iUJmPmM^%T'U^S!!R@O>5;hiS-Tt(lK/42^_`.Vp2`<Z7tHiTNqbuM_j?2EN`Ni]cN(PeF-(Is7TmIsWF:`boMsb(&VU#-P[dYr6DCnN?Yd/d%Cho/>i/[0nM?rCIq5WNs97)RT)9gpie;,!fq7O6N(KNfM1g]k2!!VWX/T8A[S2A[>1Mh'HWJX.'&Tf6j>d@JgHqh3'h`E_Dd@!OP%OKn)d_.C4lj^h2)c^eW-^+TaL(7%/=L^Y=XDKYf&*RW7WRIS9K#"$lhJ[!Z+9GH_50_l#q#P(4'PM/d1:c)BPd*o"-o@\RECX_t>%,3mk1SjU`lFYZ,mQE=aCl'igR5]@jB`gXqd?.T)q3X1l$QrDEX]FjX!,(QGbXLG/G%s=Z?d]nn,g"K+Admf\!F*tbHP2iWRk'1B[%-p\s2FQYL&5r:AQ?>*m-lg7/2F[W?d,m)9sN&rp&omXrtZA7oUT7^7.&Tl?EQ\aS`5dfO<Gf5h?7%fm[3]_Y55GHfcD$U:,)fO&2%@%.G5/39?,&/ASM9U#&sO8(Nok0LeV1*Fhu5,d;&23%Zkii-(/p]O;h/TdWLjhOE_7R(aR%>bm5V"k]2i2C80Hh<2go.&HU*9?XQ%6\L.Ib]cX399IJ3Q=1\"Z7T]i6OCQJa1QosqdhfIrl&6>%StmW7/h_/6B(>/HA7I\hiUp/@He=D.pOJ7TDBAA>)H<@71k_$7bN[<%MG8p#Xb+RKj(T-96F!MNFn05Ln0qIG"Du9j*^S;u1sLN2o)X!['8bch6aIEW#"IrT[p4gR34'L=Z5^%Z/X49m;m@,*pr<l:BD<=M%)mGK]kpT4\c"gI_!s0MKY_!uJPI?iDTnB+3j5MbRZP"BNN.S1J.EX@O;kM1Mf]LD-77`OTBj6er&!)TTgaieLEga5"TPWm@P<,R:%H%aO.es<6tH:C2cHF(iD4,(T)Rfa3A7VXgdq`L/9T,`Y%oCgL?gRlh*;%XG=6FUT]i'TnuBX.E57+ph7"JOWAUXNq(-Aqo,:QX8"%Po:qH6r>(@<PmPkB!+?f'lB!B(*DYq4LS>piH+IYLH#thR7[deo&5/gBlpYY@^9EVJRqPNJk_><4d+^rqp=bon?psL:(^0\OI;(r%lH[B\q3p`LR;5:[&/)SWggqcOoX5ds`h_ZW;h&GR.J!=rD:m@SN,]iBn,>P$5ER%hg.[Ea2WlVD!IL$.nQYChmV])p>\Bmp[C8;2%q+iX*_PC555,DcN0h/!C=F33M>BQNSEb8[rD)?#N4j?lH`W7VL50>TTp=Lps/Q3qMA5o2o@1_35>K83()L8VmJ9aAD%-i^2Kr\&P%eNs]/aCsYQ0c]MsD80A'hPp`l!_h2Kd5UM!$@"lqlLuH32kNbRD;BRuI;i_pMl#OMO%\*=cMM,-/2R2B#qXW2W)V1$AJ0o?ZV'pM%"(]XJs.P6l;emZH_LTZTJap0_Mg?mT'k5#(WG[A<[EV_#1j9[YfE*14V\oe/QmfTl"B&m=o$?3Wlc3aP`HsLoOX`Q0$.*OJ/\Qq;%V*?Qa2T$RdmJ29&9&1Z%@Gj,+UHdCj1t;kPon;AMRa<U*BCCTR9;?3]0T!u0]Ff[(TjU08+`HEa".=jEC4YuQ+p5]Li^-!nqs3GD%fZ(MH8OE)S`R!Fb:UK\;3jkch#Eb_n?O4r$.4J7YVE16O5R:[J--cg9X79M&Nm7V&kC2uPBJWGq4XgF,[HR98@`;nG77pD[r?kd-%2eIRm!(?_a+^DFmd]F6&>$F(sPba6FQA^f(Be)OX]odm*3MI'62D,_2.Df-#IEkCh;r7NgXFm?>27YePVN\f.Q>;O7q>C5-UI:fr%p)Yp1Wtj,URMC3@QqtR?pUP5uTD<("kr?*7#3_pY2?2!Tr2CJX=XmKgA!-=$Nt)dQ'M\kFn&Pu#Yj:G+hos(.'D^\;$(tIC%q4>W%ba\'U7/,;?q_>4COo7UK2>+J/>NKS/V*V,@,TXQh&G\2N'.+H2])/inlm!"$ZWh%u]XNY#eTLSi?:giBE>c_94)9bE/?eS)NrQo7%<#70GbqN!d*K1`T.aofqMj#d\h`pSM?N5t&.\c9YqoeWKO&2IajgK<Li1bO.NP*r(TI9TR2QSOYWlFV:GV=)[#^=h4UFp5O"Vt'!%dK#..EK.eAJ@KUp\prPtO.B%'ST.un/nY+F\?I'g:`>Q5kpW&9oap!1ihdG@gdXl[]inmdTT&2o^1!eR^=8+'DP.a!;m&`lh0&eK%Vj_&(1)m3T8?)<8#Jg@#8-UT&&J)jb`+hsON)bT?<bAE=JIuXZ8o6gPG7]=i.TD_OCh@iLHAlYOhBLX>qGIlk[Q8<D]"SA9+U:&5%GbTR/&pjC1-VWYc]EnBJ4NC\=GKFUS%A\6\X'D[A'L%2FVe[$bDMr8`J&F94H!eRor)#B/#W)#p&2GA.ei8./"oS=#/4jC5kCe9S%E6m:j<BIN!fLl&trIc*B5i=3"-'8r<@0"G#52/?1mImH:\kQ%4XA#[>E$4Jih-a&B_%3uNjDdlsj0k)jd%OG`CY\<,F@1W2CTHJq%QK'k8Y68^b&I_]C6?;TgpE;"Y-m5?t/E3=1<B'k;`jR[p7/-*2?9T9!"oLr$n'#p@#m09U!=%!QBPKUs.UVA6HUm$'V^SM74&V=j%X/Mo:r3GHPH[]`#cEMrW0^]V#c+^l>(al$S/7r/1YSf"%i0rC9asN]h_R-GWc4Q)O7X)ZUp\#LnTF03i$U.f7K<>j9a4PmmPAB+T%M/[6h@Wp)'"\RFE*Q<!\dsX1(VYWu(V"mEd=!R@3Zs)to)MUtk<;(\l#mT_^VpsO,Z9X@>Vtim>QB9Y\<r]`r^EUh`hbq\:_pf)j%0m\7PQ*U:39JKPlc0/jCe:PNG9OhgDG5YutOHs:8CKmS2el(Kn?FsOi'a3%fZ(3g2oBM!F).k+]8A0Yueg/9@e6b&i&jdiLL$c;(%6D>i;I;KR3Z0O+IF2n`NP#Cgnltc^UpY<6c+)7B1j@"&D<MBL[%2L^bm/AHSbSXEI:Hjruhf4Dk`>%R5;?\Q/4aoneDUuEBX]&c+%G(RuA*f/RS4%IlY^5Kae\fZjCAe[?m`-86rIP4:s%&CD!1S)iSL0fGeI_<8SE`"57NBM6Lg(E-ZR5TkO+G;Y7V:-5XqMi-2]t-6(%fSNb:":9Vp]^`aSo*6KgZQ2\<#9?'>8P$O<=)U_,e;1/=Rh)FD5%k/*%VrH^/lc_mbM+b=!@!*>+94#n(IYoPBt@06Y$Rjs)Ju_=%c.O=Ye8'[/o7YABH"F`rYG</Ig:r-k:Hc$*H@m`DQaBTeaA4+)6.meqYNSYuZJ58(Jj4"lN0WP:l1A#?Z80s9\tX]Q]cVUseKbj_%-2Kj@SHd?jYu+)[Jj+(^b'<FoQ\7%n3\"]_9*;-Q%#>`l-qKni;KNZ,Tr^+XjeB:Dm1[hV'?Zn\G\US[lO1Lo"q9UW-K9FX49K]Y%1H4G!hB-qn"bukh=M7u*r:l?3$;Xl?167c;ilXrMc!`u/Gf#u"8Z:h,&?NF]!!:ftOX,kbI[33O'>uKSGkgB.n2G!240gY="^qD2%>K`&sQ/K5$5<_=D1n5GWnn@cmlh5CP_lTMbXU+`D4-!dRQhDhZP43G<8iUguZnG([%et:p]"\R!]_=.gd*r&.6_(+CghV;'q^Nn0%p!T_?Y,;Dp*jaG4T?3-Gm;BlC2h`k,\K8WOI'=>Io-VNUIY&&+dO`#uEB&n[[cou\`pIZDZ:3.Yqs2T,f^G2)4f)rKrB!41-38%G%]j"W.)M'67)bR/K))_0-mfue5G:h]0>[4n*kEeK]i2[MWa=aO-^)YNlDpCF)=-c1%WA>_G.Qg#)$5B`dWqsU];k15I,.dr*T!j,?%F-,cR#=4[(PoYh'_[0?o4<hOQq>=H,3kMN[KQK<H$@4%T;O3E?pmtL6d(J5C0\<?!%n]SA.?of_>`#d_^I9#b8SEH\d%HE$"5lV9%LG(^/7_JbMF[%c3Wf7feI(aoBV-$Ws)Q"*>ba.6&<2[('@+kDiB\sj.j&5$<1E3/EM/Js3n[CXO%nH#-Zi0$F50liDUA"N*iE+Zb%'E,i3A0Xt!jdWW0\HHnPBZ+@!H8<(,0jEtc3OJnDj,"-T"mgq<CV<rI#lc$[H=Y;E_h/iFIP#;iI:%>;EtIA!&58t>'1RlDh]MSe%WJGBr8-XA[#?@b2"tOn*B]HDh!'-2cOhrPUHb?Fm,2r3:';Q1ZShi[]Z)KVE[8bB7rTf1;=P`5q,>>XLm4O;)fL+e",/9hKnHlCX%W[$U?%!\$m5)?.h240%EdZUUN6Nn73DV>fI-a^sTFhETe^%KrKX[oS<D7V%+)Hu,PWdhXp<65!'D2]4^$tnI4TGV_EmpGd@kDINd%7ICgCc&9oFg_(eJ1V%3S<%!9o2cacS')2rbs+*o+;c6:p/'7uU+/QQ"\.51(p!QhYo=0!(Wf#Eu2&qmekR-gZN+\@1U@_n"pD1G:%NEAV=V$I'X^o+i#.m1l1?FD<+R]?.1./;Er?naU#cl90SX9CD[!I@CEk`6E.C'DD^PRIPm#BU^$_J9"6`_P>R1#2[fcc`r0,[#pJ%N438q=9sh.[[3)t>RE;5\b,WCqnX8heOKX_-gLL'[EtKKPXQXVdPWI3fYccU&6Jh_][>]-4FC;"2T:UQoeTGBe00ju1<78N"M7#C%LrqaF8<ji(QC7X#Dmk]3^KRB5Km0rCb6gT<#VJ.e.n"9K7b;;,\dKZ,lUbC=72E^bfq4bs*K\cZe/<;Oh=YS$)U*`nhZb4immm1`%ktu^fcaH$cDi`jm.X<]^_;uq%]6>0gWFQXg;L'd(4tAo8%G0(F-\gLei'*(C0fb4][a(>H;73mFGbZ46d!"@*b$XL;:Wf'NrO0^u%_OL"BKd"W?ofIbB?=ja9d/(`\f]p\/UJ`Um9+:ucSf5a/k-Zl>:Hu'/,\llAekF"'I8_7n+&j)!]=0""_q-$m;7UU@F&)W//[f6g%pH//T"aIqQOu0ed-bg6e/jB,-Uk_s!?66>SlmP_(;$NF_;HcmSqT.Op^3,#^#H-*Y:]QLm26b-!.HP01!0)D/;i9ik,SF2hUV'^=%g().H,YIV]/l\@'<]dqo`6(=<XT/385K-bec2b)^<@mna1FkOdbL/f#J2lrDmCV4=(stj\;OcL(FJ-!P1JrfsEQZ^=d:LDod#s(.%TrQMG9S]:p\2_3,E1\s*LuumQ!"T<Gh#!%3>lN>=KVtKCHjV\j@j.HDkK!O'M/bt;8%Mcm>`<tMe5dTo/\2&(`G5!DXc^mYHEbmI%k,T4p)q1/`mZ-,Y1ghi,DFt_FM(SQ-,'?;_&NT`3K)?V`<)aYjd4N_dpMV!rB\(J)Y^L@GjWdA]Yr6Q(;2;s=aZ^HfKp-=#2mo]G%X_beLh_N,[eG5(P,?`IkpLWpLmeQFr]2]0XPN:WIo#J0@m:"NW4Ybo6P!_UqD]1M>X>sDOJ!)q?@n?iW$e@0IO/"@[%b0/PTiHSI%CY`gq)eAh!Fp(`*Dm@DPa5`jR,3.=\68'%4@,HF,2]d^jZ&TV-jQIUV17d"QQiUY0g+;\X,90;>G7eb.7+F,'6u>@2Ja?0K)7"g(%;Mi5S=Qu+:;[1[4[4.0cB3[8m(@RugUf<J6;&rH$05)02Ydc@n+"^g)4K&P6f9fO$ON"Z^m+*-;BCb>'?T@nX?YnlK:f>KGS!nkY%S^6FE\1>`mgq+TG!\,,crWV.c/Wuh@iF9ie:BW\I]ihSfDU[:1eOnqjd9WKbVtodAp1#eQl-gN5\53UKSa=^1'to"5msR@$'A#:L%G%fHHH,#u#OX1!"[8`].c_P_2BJH+r*b[#%etCh&!l;e\//(>liW7fU5,ujU6s5a]&^P]3A,3XD`SfM^K[[$\%@X*5[_3S_4-2Sj%/hQVr@-#$u,2$T"*obW-Yfo1l9#c()`,:7/r;0@jfETg!F(31CheB*r8@s]aA/f,/a`b#$*bU07IAYn'=JMK]C%nM&B&i(g+qieX%0mUc+p5rXSk'GIEG56":gGeNIJ)B>u#$Y-WP?)%@3jS/d(5k4la/XM(8YO%!6MVNRAFa7@]CK!9nqq8GpcmWDA/:@qj)N>dU,(Db%XlsfpK,Lr@W0WiC%I%=G4"qe8ai@W86;2[>&(]WqH4f/Tpd/,ZI>mr:k4Yde=M/.30s&5QYSA/b.+92=L,BnqU^_ub8p7.*SblM5%k3j\nK8i]B9+l.A5%.J7BY4oPCK[#0dqPR6'7-A5Jhru](6uM,1Jir-**2$o:bV&k^3K:(>,\g:C?*7Mb8sWfcD6AYF0WPZK0i#&%;15n*_8pp7lDh>\\,o/ciXnZh:Ae<AmGh!]Cf"J;5\\)4?rQH,>b0JODuC\*%C6YK7ee5@0Cg\dGbI2aqY+LtWV;$Jk_tDm[XTPl%FiRtGhp]dZLUOUWUS^R61.Q@cWT77UpuaG5*U4Ds(i.&nGGOupfSYN+dF2^8Nu1lML*is.M=WhEJO&5T>Itl(!fDe5P[jDu'kkgi%39CrF%X\iVdiVpTY4TmpjmI83q0N[>gT\othiHk(X6%oI&1XBUSK6IQQJ`4!\Ub@R`3KV!4*Cqk"186_G`@8VjrS7;mLdeX>io&Y%,p2$n>HtXupXsWraqiXp@#%Xd\ILB,auU#ZA0>E'H1<YbUTq<(f*EgG?FY_61S!g42;"1X.\u>Z7c"MoZ)NKVpR1q]V55'13Da<P%DF?F1CK&[;-S2E0PEsdOY&SE<lh5Qt:7!3WNhMOQR*1q6\1c42FK%6VNXAf^FB1^b8m(<6A?2@09ua!4WG/:`f1o:!Tj6AmA0&[)%\V0P*:]%D0[`m)9Q5b#OEB^XrOdM>mm_)ItRXSp>?:oIa]i0p$?kikP:R7E/'%ffDRDR#0J&&8T8Z4SK`TYWNqL!k,l>@B`VZc(R%QV&Kn)<$B[p<.S$@]o'2#$d/\kGs)06Cd-snoV]KWHoF_1^qIn5(0O3.AF3tb,QO^?"ZR;?,,!q8mOpJ(VuumUgp>K](30480"=K%'.Ns-#=!AM+%n3p'`]Npkt6lqa6Itoj4=Rk;.F1bE7WGj;qULQJV>2u.1mqRbkW6(-C!-UDp>SV!l5[rVXS+6>K%Y0QIlk<Zqhc&%[S%2HXkTuNm[/Mq#=01.N)92UCK.Vp&3bpN./qj4e)`9[!*rKin/J7B%h9sVi6)52-m(NgQ]9]\Pa8ja)R3q_DOag)'@tf(q_,CJ%jTr"uMlm%V?jai8Q+OW9Q%l3_:89dKX/n7WL#D20QRlrb>>e8bI#kpo=Def\&9F:\?&`)HT4'e4qd=mnK'^[t7HeF*/=sn-EoVXD%QCll?P`>;3($LoPetU"b]pA)a9NHQc*V(5WeqCIpi[$b]8'fE]+c5ILjp;A8eO/U(,uT;elr#-`>U,TD4^:SO"u#U0!.T8<]l,*,%FH+/CZr6MBdAc+4nB%HG^-0?^b)JXO2M5%pJOpH0!XOKaBr0T!8IS*eGhc41aVb2=@em<#<_a,VI5Bel'Er6"n\2o6'.EsRGe7jE%&Sh=D%Xns5_BNS*m&&(\6.;:-)i#/^/l)GY]0pC^,OoHqh9.>Y):hmr4P*D7\=*H'IIpt$r4OgHk^hhuN!F;A^-2lLa+,'8$#T.<%Y1OR:,HIfaU!LrN=VI#/Co4&T]%kZLCseWt^tPLo5F"[/$*`$eMO8@Ror^*(<_D'_%;D[176QBic+GplRDHd`,I6AaOH\(/)Z/k=%/PH_Q]:&O:N:uZQo!DH8)X1*+)d752fI=O+a"<AV[9LnkN.)*n91r#qcW4VR^Np0+IJ^jsb>W7NXB:X*MdqD\7uu:6dV@TM-F/C\%RoQBREP92COK-aq^&B`^-ME!$lS)54Ypp//jIS=&Wtk2#*e=/dS/W+#U.'W2,iJ90S^Lq=mpRJM:($<IKO%hN*;Rg+qjj/GN;Rl3%r7KR<CL*%Z.JSi=C>tP8;M"a*a`%r'5A*dd`:cJSh*hU9PLXZ,PXic,RWJYqnF&U9A%P-j.M,+QbMjo"%1PlRZ1fX93hdJ<cP'o]%:M!2Ve-n^R;jFX-Uf!r2H;[E9fAHG@dMnQ!,(@N#:?@kf,SRDh8EHSON,Yk,I`%e7/I%i!J1Yp2dJYLU;d^bK;c[t\/#`Ak@),h@%<G*;$a>upD-9=%j+dh(]*F#.V2eU+rN%_dAqm6S,rcLI#fNORF7KS$Re8?jel<ds;q_cg@(@2P=J6(Ys&@N^Mf$e9s25oCim:c1E%?i.[hdVNoCn^fKcYU@eZK`g%"noV@qJ[!/NY0$^^r3'^FWHk?TT<Zk(I%X/ge^c`-%D!K*YD$HND[QRbGJX>3*6=1Nq+NQ%'u>E#%4qMosUM"\;3?7;/i"hIQa6RQ]i6.V$ZQ4l@oO.MHi[S_r2M+VTOZ/<`Cs'm7OU$/mO*Y:h7^Ro,%tNufUpkd[Z=jB^8SetoCnI6M%*L%U9,FXp=Ha6EL[9ZD*8.p#GZ-gYT;r6]srJfBB)%V^A&%MEJ=qstDd`jc.p\pOsZTipE[Mo9'`me/T.nhIA;_Kc#XJ_1Q=Xq%%%b<;)2?%S%LLn<pP/XNr$!U6rK1ctln!l6n]8,8'4a:P!P*28Z7qMk?a6kq!n+uK0)1<O\aM1@1h#m%ud&+2KEYU$+$%Z/[7Hr5bl%HtJfo-Pp7A$$DR[imN[\73[5.asV5,N->C_6=2]d>0M5GJ;couF`>`F"C0q)L,l&l$ZbJs?s2V(p=e570'S;L(QJEmGr6(Mj?R_u%VDR?G7srSoV+#J:]925pUHTd^k71$:8J"(L]W'0VH%.p]'=G<HB=&ESo3UQpM"Sk6Q#80c3<E0*[Wh/tq+SoGg![OR7VB5q+e^;C%V4$KJ:3#,$F(3QDp3.0E:33<f#04Be2B-3ML\$5CAGc_5jI5F+RUTE@\1-7kgKjDqQr1P-9A)or9%!(nIp=^a]D7C+Q)Ooan\Qj6%^9JHl3Z%#j.?i6LeTK.N./*N+NCXQ>">TKAR(C-Jq<*aIcosIQ0>-AS9a^6kVqBTrh'FD+qAt]F7!UkCU-X!P`uNDs/rJq6qCGDG%?+=AppWTQ=plo,Dff".Hp4&=7k&\RJ;>p632J"2q/7(CeCJ>1gFA.<2+-(Z:f:88M/%V7p?/!Es'Kce,PM5O-FE!]H7Z/IR&d.aD%b#(<sm8#rnK$E&lBRsMp)S+QUq!nu`bfsOKCMf@f;KI=npBVoUS;en"WgW,0rAnS#&`.K;mP@Pn^(p?@$i"OZW>u7jQ0`H6'e`HA%T9$@_H@`b%C>.9sPpqAo]B+c"hKd^nh=qGp6Cj6S7Kgp\eGT=8XQ=1Uj(n6LIGI97M6RNbe;3c$mDJntXR>)A@7.!VMP?<7RV8d%%-XJl(dm0G78Um5eU-^m\H%")R:<t,QTQ_78bmh*l7SAnjViN^(1fQl6^t!qGlQ%'h2:8q<1-RC$;+0>/haSC!H$(]sgCDok_2O@P%EAp(\S9n</O0n/(QHJ_)F_&>b:it2nf4Qp-rtU1b?k&kSMFd+$!gS?H$W?=-7d*jbaF7t";8SVg^@EU9TU:6G&*.rY'1[4+":kJ.%HU$.*?Z2tJH0fY#+ANNY0As_d7$tOnd'-#7"UQ-)qsZ@<Logl0&llTH1#CrO_'e<UKs![*L?QqU:@s8AWRcLplSa5$_%Q39g3B=r%rC0l.`V#NT1HM_WrBQuU&o472eY8B+AatKBf&Bf\>-Q:91h)$-&qOa@nb]9.-u"<`CJc$/pmU&[1`QFBQTt07BDb2`*>@*'N\`/u%^A6(,C7/@!D;86ieot8X4Q3*35V<PRKj]mj=mU<r4iWZe6Ee5+Gau]X86.QO\/Wo'E=0*0W^Tbg4YFb2J*NQpX(jr!Gop1M*N2P%%#ufZfm.`V^Y^KDhL;MMtFqZGd2HSfJ_cUDp3Bk`)*i&$j8N@PPVY->A,O12g;UDV#O=RbC-.+DUp-^*6l"S**L)$2f?T,>_&4>u>%O`!7dD(@j[NS%n'g6:cf%I3=s&]oDeb)ar:>jVe+*-gI"E+<Wu>1&@Y"$q[0n2d9Y_EJJjoI,CLqdkP/ljomLE=&YB2+`OjLFRnA%e70o63QaZ&M6=30"<#&1-rc'W'ONRo#OJXO<G^P_>ai.`;@*5m:^e7'Io#5L9BLHn]-F1)^DZVfP*KrI0>H);39L8'Zn#N2a06qA%:HP9P"[gYE<G86(V!YLqOD&<b#u:G6MD*GRK4!HE#?ESUPPYCC=,a7uT;F`^^49$R@C**h5_dg+",rHo#aFG$SK4+-0=V8\D60'm%"+W5(rWK?%JbcIRM#:#ERV8Br-U'^A,ef#8o*?d^81-t^gXFuT"'ch7"'?cn`P';O*,e&)>fk+nF.c'V,?Ls9`(-$tUXC@W-W]an%^mZG&*P6,C7X-KX(bc4`rj47J4Gc.$A>?l"mX2J91+&@CF@8sP:h6=SYIU7ZoLC)^jK6gL:n=I[Z0Qs=r-k0\)#X?$V8k<b,BioN%C<QDfNu3hVF'"O5)QM1ojQX.(N.Oe41kUUsEH;/o]aaf3-Jq..q8HPCZp3DX"+eTN&?cCWD'<:QFMjFC9JVLBZ?YMVkeTh!61([b%VVcrdc)3_9,NRK#BBhs65,06t)o6&+R^1pa"X**Gs"_9SauNb>l2%6MaTIKm!@22:![s]<pcJcHBo_W?Ju3HY*hir,!'D-"i<6OV%lOYhG3i.:s6=70L<T@K]rj=ca+?&$&Z5S^6S%P*W?9d"EaMN[aG_X3M!3e=qe.B<e^g?=AYc5i?!B7FZ.2YJu3_&u6@<jb+8%QFq%JN7AFcn]3T!#=Y$bA0#)XQHiJ^964M!X!7Mp'"E[imgfGZBeS)U:c7mlE3kooA3H?,e&1qW0uLpJ),f31S=ZTI]oS="866iXr+:l%p;j=W$.)MFW3'\u3I$(]ZFtR)L`mCLcZN4!0Ts,n_&X![0hn5dO)+an1liX@RqJB3LYR/^Oc*-5M5hAk*q$A`aMa;ol#XqfG.?,j%`h5*^I[pD*Gc6[F+1,3#Cdi(kn)^^9_[9^^@&<mp@QtW2$8IikV'`HDmAU8t1a\^Y$'7YD9mRJaNX(-4R$XI&Ci&8O16P,jG/GdC%Z01R?pLA".JCu+smk\f/1dm(A2/8`]3o:o?4"hgdSR0kA.kCfDEp>WSmWIRN*u=`s+iR49M?2"NCl'DC4#.@V9@.&\`X1J"nRRO,%O?V6]+4!VYb%292DXnD(TAJ]d'ui-c)H@>uEQ/mj/qXbW)3grtIOt5KM#SXY<SNB,18ps/j4k`FYCN\S!GXHG_HJinbOcUY5oVW0%QKVOm*c29edbAn(X*#h?W\2>%S#fFR$L,\jJb&E+lDe\ko^VM(C?-%=@KqZdU?FYak)';.eE)#U4C'oVh:>ogF$3b;+q;I.-P(Tk%Pk^?UC.(0GF]e]tH?5*^<N.!IOfc8Ub-EM@m.%*rNZrhWq"sPXqRpGWFHYmtT,0>?&iNh:Jo&PhZ?-4jQ>11]q9kijkBYf/G[+Ne%@>l-M&iHq"1-4YN;,HRss)\)4S`aglN_`qkqsV,lZ1bW>oRr8Y`SAQNb^E:[*6JlTE;^UV()7F4QW2VD5@bt%OH^?gZsMb9W+pr7%Du]cO5P?<e@dnRAK)T?fgr4eQPU``)IMJMc>,Le@.Z=G3pn?p,TMsC5N6iqL<2M>_9A=q"onYAe.AC"?c,`e,dPP%L+E`3+BB-]2%)a*OA,$F[/!'k^G%VGM'.(RR"D6@'7jJT<)8`5kVBFF*U8@6XNYYhe@_'X\N;\S1-bLK-S"i[.6jo`n"r0XLV`+=K6cArj#0VC4H%6%BIaEM=qY)PW9pNAe*F9!gV_q)"j&&A.oM_#aOTd(Jr;!-)eE-a%dn(_K<I[iRJSKeLF%7Q\p&V6its]'4ql<)g;Ujj1gtC+o/9%So,=_79dsZ#N"aL'<h6@AL4HYMWP8*^f+rBM[/Tm#>J23h@2o:r9b/GVV\k/ItNX-auSGkQW=4EhbOSLIK7IV5;W.k<m(I6s8>ah%5QC3Pe0j@pOfS2tn*dM?'7/[-.KJ[SP!SG:V11gu8b#u\*)OVaUIN_mfDD+H>K!#59B)dJMI==(W:/uVC=_SViMtguhFu<pXS<kP%Dn,/,^](.JVW#3VJ#nN'`3Fk_b]huD0gjO1&E:R7VCGst?pIGFn#*,cE5sLu/[r<ddAH_]$IHZtQ=lRfN40fP'Zm/RUFf=fY4O-;%)kbp[PkUd3,GIfM&`FUc)\&r;rbnV&TZ^(?8o6E^40d@R@Va',<B!,P/d=Cu]n7e&W9%E$kXX1pg&%)WFB-+SguS)WqqtVs(N[B0%r18o`d-C7m,\>SSK:As)N<bGL\,E&N4TGE#5LTg']o5ERbh[R#NImP;b[]2nM0H:.msq*"('@73cX[8,55Xo@Ul_Du;,+*;`FQOi%k_Mk^=t(m@GPa&Wa#OZ-a$d=24TXFS8fUc*Bt<9!'`JXmBP>jB;%6)Y#p04?XT)T&T'pN/Kp@)MNbSh^.8br%0)G1"MAeI-_h_N5%MF2f@lZq6%TH3Vbr8Y6G=1/mH3<*5X\3'Tq<lB]KEA$Pk%G1\FA2IU"`^5!;8:(2CbnHNqMck@Gp:\rHc_LI-VXRO)1Tp0rEFH7F%epU`_IWi7#*=G<tL\TRP0K\N>CZIb^Yt4m9M7p(kD$J+Ba'fc8R7cj)[e0HkI4[>1V.31J>m>ZBcb#T&Y>77,P@d=/*Cd?7,^&D#%O=9H$LNV**pneX#,`NM9l8XhT6[n_LqD8+".R2C4UYi2EIf8ec;gk6U?SNVOFUl5a6W/<F_t<<:QHWU2(5cA78,b!T9-)rVcjT/^%CtG<UN=]@)_QE$NG#;!3"Z=9/(%"<+"='-AN,I/g>u)RM^kE")jjJ[e7E#Tom1VeL(!,<W-d7)nYJ]5i"J,BCKnZdVPs/@#2^c&B%[<nH]NPL>0j!rM-,WO?#6t$N7#&4QFkp)aec;:1(?lh!!UAg4Fm4XVFQ5^S2lV,E@7A*bk/+@eIqBNnE%3pK"39oM0]t95<0;VE#%4d6JR(8eIBS5e?"-Y&r4:]V(m)RNG"^%G0Z#=QnUA?0OO?"4&-D3.'TjZkcQ:>E[kS>=i0Dnst0kH`^pfM?/h#aQqi5^^p(kRdlh%G`%dfKotfi.kX_/Tad&J9`3E=W*n)bBl@%4i$Z7u"$dN64G/D1aI4#H+JPq(Z5I<kTl1OT,Ib]!YJjk(["P#\/$E_8b_]QCJrL_)%e4lo4KP))O046\Gl(%@0?_Y%_l(dQ20[ca&-DN,c5gM@)dtL5^HaD%jm!a/$3barqL;ai?WiQ-iEleCoHK>MF(o(p>.Ad%2j$p*Y%9UKLQ+M5tW1KI75)Zh?MV>XG2),F8g5quljhc!dKel=<`C)'"s2MW")U-=7)bH3DuYKur;";dC@F9="e2<6E:b84Sq@=YUuV=rg_%$\kr?c0]?d$m9qIH++D\8`(L1fIrGelHCJu4Pr*5N"O7b>`@s7qoe7ZAoUe:8W[^r)kh-%@7U(+?'hrEV2R+25L\uYWY,5kW@n4#%CZi!=8TIkj-`D6f8P:`kMMuljTeI+B,oD/?AsEk&[O']uh-@nQF4Rg$lu$&Leu2A7AaZ*N1G[t)X@loZfZR>@p-5_>Z1jY@2<QJr%X0\ZW`>pBNNbUU^>&uQ/J4;,6<hc@J?PG#lee:*eG-MkOZ^E\q<F6##`k=624>l,URV'4tJT!XOY<EjTn?Y_,!S!rG.&`8N^CLnA%)b_Y\;B_6cXH=FjaD%H?,$kH1d%$)aO63Q?AQ1P9R$<E_lGK#;dd/Y-YS!_qZlO#<IapeYYq@PFrOGBk/m2l<YU91)'4u_SfK-jF%hlIk)L;D,+QY+p?A[d1>V.LjT/r4/i%-16FME>,(@<mklkU"m>;FIHb?eNDRR/inWLe".R%+?,a4^[GL_7C40Tr+>KX9\'eGg/ZJ%n')UQ?96Z`rZmf;]_t&UVT">Km-mK^e-^_@DR8'KeCs/TZ+&8^fX<VNhEWeWLf,T4is29FBocq\U6T8XW(*^5XpF$HIZK,T$_`2<%`4,B0n=gZ8egU"sA#>L)c,Wi8g7jL>@flc1N+#b59%H-M"IKD`X69n7,hm6n,3SYaWs),OW3^?kW#)jB@o"drFOXe]7l`FfPW_$_%JW9bO+Ch&E`1!GN9(5LghNV(B^(VM8#kEa'DjLfl)M,r7mkKsRZ!nfl.E#44c0&57a_u^q8kh<708K0uWpr@GM(Y1t1ZHRA+qqe_%s$cgBhDatCSUCCqkSF,7NG(OQW!H^`%m\iM_;j[/:VF$%+(>BB<f2&.I#3B<#]\L<)cCkB,nMo/HAII%SC%G2Z#/W1#Qa+;.:EVL%M4B@**^0O:,Q#%3#;/87HTVB$=m$g7EqG,sHk'4S-&h/1?qs%lJ[j.^?c:p<rDD'V&^":,TR&)(%e[%@HDs[*/r8^%_tMYM3:I/e%a(-"8Ikf/o^EY8Oc2,=BEiE9FH)_H"lnsCPX%(GPe9O,j1<OXIQV+5Z"4p:<)1j/KbHX(Sqg#B9LjVdb6/:G,;G2Ul2jIZD1M8p)%Zb2Ea%Frrb#+1c/XnZQD5Es<96'S\:nH2j=#Ol.\H^-JDV=_\O>(`TV"Q4gA@R&-RhB]bN,fJ8kY7"?(J)HdIp?hjY@MF5sWRFCr%XR-B'P^8S^\`A#JZ:&&+obPMN__A0U?s@+N,gVKh@#<lK6WC:8jOallO.a95)/4%9g9)hU9+Mrk/(sA8RS3:_PY5]6"ME`>p`>*c%JLPqWa;<:R#3[THLhJ.sXaB0ZR*E3RbXBqV\L](Y3iL(l@oj8Ac_K9sSdl=61;'K,S;[&9P4Vd-eSuC.NRPoG\fST!/:-:IUJAc;%$QTkG\b8.VG:h%19+O:mS3GP^g0b4Yb=$'9!b2p$e3lVF>0*![:U?_+Pa)^od#Eh0G/3]A#@K-M.m6^ejfF!6=OcEBmLgF"O=+Ff%=*MUl*N?&MEhai/@Ek,+o8\YMokO4aEI:$!Ad&\Y_7k@uFu<l+9qdHUCA,se-F=C0]M93LJ,rN8CK"or;82i?[>rQh18\C::+U.l%JLLkc^2]a@FPqfncNs.lWLC\.d"ih@WY\P2eb?HWM6n=6/j93*3ps=1+l"@YgX@kW@n7kZ2[6%/(g0<<^/3.`Uh`hCn9N#'W/4I/%q6Us%cj8#^0M5R2a?p3^M@&%AQhNAAHNHBF9jubMSgpq<ZCq3lb=:3]h5_=o8@C!m(-REbe'3PkBmt4M^I0ApF<BVO#i]9[<N^nT%qNj\08GG$Bnu1#bg`6U+@J!$X/LsLQZ@&3#6d\u1)2B-g@j>fga$"!S(#d^GM05#ZLJ@hn=<kU#'S6%%?ZBNdom7A0E"q)SmHI<*%B3BGp.O<:%JJC$)TtemJ&S%>EcV]gP0fN"&KE1)W]9`'T(PS'#9c#hZAudOH&^USM\^;[qs1ZApTb5TVcopdG[)6#\Aq\D6<@Llt%N!gG++^,HNdT&8'=A1?E!1p-U'`e;NW49,iW[MiqGs+%5'40]JbP<pZ<J?h"5s9r)7WN`[dEZds53(A@>@-XcGnei>9^jM=])\JS%.uB(4adVu$9G/7IBE0.J-ihs;8R4<I%lM">Ip@dsfj-GohRo@,_><.hU4nB.**$%!):=7qAUY"M5.K\"p2ujJ3mM(M:>2s//LRok%BSi*l6P8e^_Ym8fMN.Vng%!9V>3:4\MKT!B;eup*qlbq4imp[8<pp:0!dhgpSk&=7Mg$mMJ=>@2;VK4X_GO)W*OC"/E"q9Elg)_(%(0O"c5-RA;n;<\Mga'O3Pl'fjkHhS*</6*W+Z0@n1\k[aq/+T];l$&XDKml>De<+HA`naVUPZ(lmp'RD2UJ2bZ_0u\Ob<e1\epLB%`=6)t'Op<bX/b`Vf9Olg35(m%J;L*3K"(Wf:If7C2n]74^^!\?$Yd-6au65G%[pTpp7Z&!h;%eD_X@6S*rDP5ZD*AP-Mt]T4jD+8%Gf\-n[5L'g48i;nr9ip2W/`=8TcI0@)Bp*kC-k]:S4sI\!<oP#A=IE']2LB4H.Okk($qK.)=A1K^VqGk!E3Q<AXP0jX)l*>`tH*,%QNq-%UiC<P:;+J@f&@<iIYld.3B"#g1]:(cTBZE!#1XmK2PtN*DR/B`a(>%&!4--"ZQ+flnZ#U18OoabVK`tEhNs->06i.k>)cLL%U/9-m`A_-jLnbR/#qD-R95llW27#hAfa$1h['6WW`3ZY[&-Rq8>>jGnW^"]2/7DXp"K5/=;QYk)>at0Cg7ZM"SAL9>BCra"#9;n6%HTqi0fa]k$>+uFiSL[AQ<2d:'B!_b;fWZ`/6B)T>E#SQ.M<:C!>W%j^\9DLJMlm*[,\/!OqWW(0dh113c>Z1QPEpKj)DeVo#em8^%f1C@n&I_SVMG[,oeQ\g^-#<+9?XUn@'i<<aS=OigX)2fnU%O*9_1sZBGe?/JPMf.Q)*A\*f-:L2K,4(1.)hHf,Slfr-<BK_cl+a3%6oAatn;_+eNp>h,aP;Y8;>O%`p3U!Xg#ne%+bL*_]_ht>VG?_=XO`Kj=^?1$'eks/-&hm>^C_*SdB$g6M,''p3F9hpC-X4$-$a1&%7X%a3F:7jdb*,`E?I-^ERELE9\I*0$:B[jRZ$#mQ=+6S`=@&ESj_3S6.T7/6ohpZEdSAC'q:"_AT7'Mu)21W8:D62XpQL^EY!/$:%_[YB:qZ+ac!k[,eec;u0mA'"VnYa(YDq/@Kg`9hGoPWVRoghVp(0Fi)n37kT,2/`%Jae'g/G7.FN%g!"2+"'oe##gkRb)tkGmeKd%/GkI5OcUPh[8@8FlfS/V8#NJV@C)ST1BI)eFW,LT-do<qH;4u1.+ADHeH?Yf85mgL4d'`<!N6c&m&<^D8qhY5SoV,n)D`iqi:`b^%V3jQY%J[:ZcO's3R;GW`X7;6e)kcg\dM+6Gs0/bB[4@JCe3"Q'S`4di?K5Pi_R2/O0;Fu9lZE1r%JZ#!bZ1e0Tljs=8s'm]NG=eZ%^!A!7#a;W:GElb60b"s@U[Itu/R<;.9oN:;*u_Br')H:tb7:5":]SbZFC!DXA$pcuRMoT]EZa(+@6!W%4kqT9@p&tJD'dTi`Rb-O%V?Wd:15'CdZFE&Dc6[Wc4-Y'70Wuu8S9"S500k43$`P(>_o&WZ!n!/Q%,*j"#mZ#7=4jG%4M-^Hf6n1pou12pA^VXRo#]4!j+A/u%bc)DeBpLo^oC:C-cUoFL#^rEY<UF-EO=ttMQ&o0.pf1Du\m:<'3GZo]WCBUn!Q.J@gp(O7"7'16cSEqlU.W#/:4;!>h?2KnD2^Dg%@m&A1R-#2m87S/H:E2)hhg)(&nW;<]n.Y"B@_mM"*$XbeIQ(#HC(e0*aHNj!GQ#RD:G1loGGd/\<(Ih8$A)tTp'=PBPo3A/$*E`?%hZ=%7)M>VH;Su#m&#FD_+p+"XN=5UUgm(P-*.6R;gi7FB-Fak0#4CL?`9sVX2Po..Q:#VP.Qrk>ICgX@`1Pe!K+IUnQWZ!tlHR_V%Dll3:eL*X<pU"iTWG)6P$H857HKYhg-Ek+hjLJrt](.='5LDNu(19[W^lQ"OBAB?3acE8.3t&V_c04M/Ot5+u;j-83NK(_H^c)1G%HCMU>b0SJIr?jGmJG:K<&>i!.dl!i"?a5N'.7EsCB@>R=C^`;12c%KZT#\LPIJioM[+`/!MC9.>4@qpYd9XWC(WU5=$:)bbX$gS3%7d0A_^+S$eXkp7iibu3ECCbFl<1X.`=T@<:CPrnO0#s5\MdjJ0R1)KY@6*$4/@,!15js$r?GeE7nLW't"EZq@@_!$m*i?=qMENOK%dS#g<QN*R81J5)'odQ.HO-N&iXcf()0!F#B6R/bhU-dj]7+Ge>[j!ADH(^C`OJ#O_h*)(\CR7-Aj6>F<pXAbhjeaOnf0cfoKcSXI%b)8#+eNqofcf'kJA0\Q[M6dA<V@1/J.XZpY++K\71Y!ars)f7V=qI3>cD%Ga&4c&q=[u>uODMI6V'YIo?VetA<6E18/)3HE=V%OD%;3GZgGDdmbI93M'0H/eS*;@7'Bl7@H^kdeDS%MuXgF:?^?'Moa^nS@Cbq#N">:#_['#/8?8l0-Umn$KoVDX^](4AdG,uTFPn*iil%.^&c-JM6\$Vi0@p7uTj":FI8K"-jWBj$6dE[i,Yt:79kj--m#JKPL65=en_eRR"GRa?/+)B"n5>$[Q\d7'@Rn=)DiaXQQHD#nfii%`K5a3Dh08c:<>Vj.h_]GAB2b+PU?'J91[Z?lnju0=$RK1G;6P*E<X:YT=n0"FukMd^f%PWo5!JDFcl<^HT@kuifr%([lL2uTFkrY%9iJVddf%b5AFd(u!fGQ)F"I*4>:TukpLe.!d$Y)oT,j1A'k-VRi+Xt8k9]PfKU``OTB"RF(p?NI(!6j%KmL/.Z5.e6dYItM\"lXN%lP_a*7W<"9#+K;U&K9@eK>+VkAq82b-K/oq`[g:gD-M^QSqk?`GIAD?/Ppcd;:/]t5htj(+_`9P8?Xse*EMgNUq-&ffipenlBXAi%(h,CU,lQ_n/@E35@<VO.%nF\n4:.?n7_[(:C%HM*MHBD;'uU9P(9r!4k#8.'nl<[)O#c-G0["ht\Q3']P=&["X;7!PpZACapHVpe%ZUu6IqCVR2@m8",/J0rk7_;:DU9&5Q./*Js2f.14JIAqBgW@lL=uIP;XcV_'+$Ep^%]R-bkq-U%+1f2rWhm4@>I)@Ks7#K_l_MPs%j+CT\7IDaemjfR3Xc:7b<j#YEUTuSWm.*J$rqY"Y72ZQJWgJ5Q"F8LU0.Z:gc5Lh;(I2mFFf:ERf%!HsnMnW-]AHE@[uFXn=$^jm%lDRA]/ud1`hu<9Kooh0f?iBlB0C$)/9d&#jA"%=:&6\O$'i@:*ruW(F8;cghlMTAI9V,@cD!UJ-92!H9]4Fip+7`0Wb:6;)$g=\a%Gc:8sl`=to5Yq2Aj@kq=H>3SP@a!,D.jGKZ[@-d".@l_IZ1-m.L$le`]\Lr*EjQZaq/u>=LbV;:Xq<HeAelkR`hCDb8eaF'DieIR%9I&7JU-e80MRX&hD-iYAGQZ,NW.92aY;i=kpP\^[\T?2P2<p[!11K<R"dj=9IcXP5':]&>7-_j\-0"b7K0FW\kXDneb>lM1Wa_N+%8s[!Vh0dRr:p[J.6?g-L_NV8J^4I+N:?<Ao_S`6-$oGuVATq3d/A8(l3_>BJQJ3<J29Mh`H#mI&'Qe-aco2#g=+eN3Sk)s<Rm7#q%G7DKUWS[Y/!$3<,1kU53g66D-IbUlVmRnC<NLq,hH+W*GRAQg.9FC,-Tf.Y5Ps&-P8Zk`"9;pf><1bj<WJSV+9je*KauXC/kb8RB%4t"<eCF!.b2<Fd4o.a*s-\Ed.7hBu,F?k5,?68*_)BkmjOFJ0,M'GhS;:lfAqK0TIG4D".q_$CXIG9HSTMiAYb``+q%ZcgKi)aTF%X[HP):>31fpHJ,TBJuO<c%lg]s&@$OZF-$s!V^W<9:\f_^i-g@S=0a\UQbgA1M(Oj;%bg[F:\LEK^c/o+T!C$,nBU)YPL,U3)O8*%D8)H$$I29h>H5o9?_CmL5LrNNqQ-"^MV70nFSC-`8q<sR]CCZurL1pTLR2/\b[!elJ%[ai1QdJtYSWXF:]qRDH%YBd(I%_L^EN1j%8k:e6Q'/*(*:M&_X^N&A(@Z>3elEDfEE)ih'N4Z?PlcgoSs!*sL<DY4SrAJr0ocfs,9GFR`j3HbdN8VuX7R+uV/!l!RTbVJL$Qh:%.ddE;p]OBlJJuNC9)8U]_T8F:D0a`Y>?S!EgB#/+l!fLH!B)9O%q[VK/9E:D6]u!?>6KEZ'e^P>]/42-F-T+YfdQu1J/MG=P^B)S%!8Y8m71'W"3M2Et%;nlq#W[kZ:)SmQW<Y.2fIXL%5?L",TsTQ:lNX+3WbMQo8H:Nj,CUFs3`Fi(k52HCP9gM;'hf!0@VZ]:d]mtZ%$#);;!2d#[e2;n[0bA`*)38c6ctroslhT'tO3n'<(@>tX$0q['<'YBq-V:,qXV?[7?9Duon7rMN:mr]Zm!K^jK$s(SLb,<2FEak(%+I!W)hNcpL6?9r^mr5s)Ta!2(gsq9q;Vs5*[$eB.qB!GW>%6(ojS2a.=)("8%8Ir[C>70Sk;GP30@*=q<"6tO2sjq]2EPqk&_^VP%Z+&81*l;d0A?GUW/OZ>./5RXJ$ZtS#^@_fpHN:P@^9*H!N9l(D>>#6WH[<j1k8Eron!h_T2$H9^jAeA&\\@*9re]_CTl/f//`0&R%"NU+?J^l!rb9n9(">)TZ2e[AlTT9TTMC-M>a;E9Fplsg=5"")-rp[5<-oJp+:D_5n`O#TJ&%,_hi.IMqN1\`8'T/IFoN(=Y<*3)R%="/!'GN1d4#lXCh6N0tcWngreO];u'pbltob'\"%V,+9(GH3i5lt;nT:Ij)M&_A9?K#HfH6?$7]Z`;(PbhKsHj8GX<ib<p7='LX;%A:on>QqlBoiK@EU=\:jR13,3aSZC,_'_BK-*'-oW(Z,3pd</K2,?2tPo]`E`nJ!Yc.Lu0#'(Nsg^ko==SpQ34ZViMba+/e>W?aAq%in\!a!2)XO<60@[-;geD;T@,lU745WnPu.d3Qp>_=&=7j&f=(g[]EYD9'i:1=-38FE"P4Gs3)rA$2]6&.&\ghBORk-N/UHD]M=H+%De^W%r.Tr0.l&:?/&j0u<nJqtVfiHP<PA$hER_dZ\0oOIZ?2,#A5[u=ia1-)+*&D,4$.38qJ6tNUpr*]<U7.H;K[m37d3$Nab_Cl%q7`;(3^'TKoCH9PYL?",i4-/>WXPd;U[ZcIg%.B0UY2fVToO.Z:M9gk9024c>+C:XY4aAOVD5oMo^%P8;\Q?kE/&oBn0\C[V(q!_%rE4cJ#bfd?5p&fGp!m7e:M(G6dsobS>+t+;$Z2nEcb-X>jKdU=:?t3u8UXMf@-sr2Yl3nNp'Y)'Dg@hAfW,ZY`j?9@W&,dm)Mf:]%-KBQ&OcQj1HE!FKE*:&9D+TdR46bb4.o@rCi3Btb_K^tO:YWbcCkf9u.9r-)PW2_G)XuHg/S"Iq,_'.TL&($_kt#QS=TeEYEg<@U%AfGB&;7+C.P?]s$Qs]]Ri'QFYS2oDCa\'1N=<:Yq-rnq9QmK(G]CfdPN@^J\k>=*Gag;;WC<YF*B"Z+&mC;H1dr_0f"=lf9(p$F^%h"^VP!^F='qS&%OBoJL(Kg"0m+XjVZG$8!>FP=9?::%6dJ3_i>2.DuY*FL6f1f+HDU1Sm]\!'R3MVJr'[B)5N[.T(/(Q[\jWtoHo%TFJjnO1-R==:'3Dr\h*J\O[35fA'\ps2^<[VV8en5X4o.3d*sfr:p"M`=Ga>[F@)+>@aY+&a,G%$g#B4n^G?(^,RUoH,27Y!)m@&%9&^9t;I'+UBB`LPni,:mT9"KF]4"Tq=r)nkX.h2BhhUB45G#Xj&5PjTQ$Rug#<1u#*Bt<8kp3=ippHih8].4`7AHA$aW3amGgVt[%dDo(YMLLRd1$-EC(]XLb^QmCse6mGt@=9i$((f06U08O'di4%V7R4VkJ,oU0;7l>_j?fuW;C5/"l_pELUM^gI)Y\4n-iKZ$3!94\%+^X'ug2!5s<KPj+qhuesAq7k//&"6eRlU;6(12:K'ITi:qpj$iB"'@=Se_YM)np6>7XMX9Ui/0r=X26fR"Y8ambOdP2m=rjQ7jdF%OYn/189bepd_c9[2gjL(Et(E=31.Ptcs->&h!aG,!g2^0T(cF>g!fVa/E\LH@[9Xnjjel.ibQO$F)_Upr*etW:U]?D?-@*n_Z08[%n'baK+b4sq(-k2Q5:@+U*sL^W(e)]qlS2o(W>t/RRn=hdc=5O5OeC<OF2<gMH)!!_iX*H\%Vk-SA2t.d^2p^:?<_u<&*bKX.T!+G%iB'.b!_V)P8.mI\jpngpPt^PgolVc.SO4H(VD1[=9pU'$;MoqbNor;:j`OT,81>'giQWm&h\HVC(9Uu'iHGp6:b9Nr]fPd4FOhhe%-2(PT3.U!eJm'nu]d^.0bX1+B-ZO"h3R:`?HNCfl8qA\DBhBbeIMokjo%?6W3$81[00fI%^O5h$hgG4eYQ'(Lp=DP,gM]:Un!>,G%orAV\IJ8ep^]3k#5CWV1^OQ(L_tQBDrpMK^5QC5*53U1>]`60qmsk9+dsqAea"JNaqV<7n7jIK#gr$o(maqL.G9?epr]!^C~>%AI9_PrivateDataEnd